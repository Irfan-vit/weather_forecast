import { Directive, ViewContainerRef, ComponentFactoryResolver, Component, Input, ViewChild, ElementRef, Injectable, ɵɵdefineInjectable, ɵɵinject, EventEmitter, TemplateRef, NgZone, HostListener, VERSION, SecurityContext, Pipe, InjectionToken, Inject, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { createAnimation } from '@ionic/core';
import { __assign, __decorate, __metadata, __awaiter, __generator, __spread, __extends } from 'tslib';
import { Platform, MenuController, LoadingController, AlertController, ModalController, ActionSheetController, ToastController, NavController, IonInput } from '@ionic/angular';
import { LocalStorage, LocalStorageService } from 'ngx-webstorage';
import { BehaviorSubject, Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import IMask from 'imask';
import { NavigationEnd, Router } from '@angular/router';
import { query, Client } from 'faunadb';
import { DomSanitizer } from '@angular/platform-browser';
import { registerWebPlugin, Plugins } from '@capacitor/core';
import { OAuth2Client } from '@byteowls/capacitor-oauth2';
import { database, firestore, auth } from 'firebase/app';
import { FirebaseApp } from '@angular/fire';
import { _firebaseAppFactory } from '@angular/fire/firebase.app.module';
import { AngularFireAuth, AngularFireAuthModule } from '@angular/fire/auth';
import { AngularFireDatabase } from '@angular/fire/database';
import { AngularFireStorage, AngularFireStorageModule } from '@angular/fire/storage';
import { AngularFirestore, AngularFirestoreModule } from '@angular/fire/firestore';
import { AngularFireMessaging, AngularFireMessagingModule } from '@angular/fire/messaging';
import { Md5 } from 'ts-md5';
import { CommonModule, DatePipe } from '@angular/common';
import { NgPipesModule, PluckPipe, OrderByPipe, ReversePipe, SumPipe, FilterByPipe, GroupByPipe } from 'ngx-pipes';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-container/ao-container.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOContainerDirective = /** @class */ (function () {
    function AOContainerDirective(_content, _resolver) {
        this._content = _content;
        this._resolver = _resolver;
        this._component = null;
    }
    /**
     * @return {?}
     */
    AOContainerDirective.prototype.component = /**
     * @return {?}
     */
    function () {
        return this._component;
    };
    /**
     * @return {?}
     */
    AOContainerDirective.prototype.content = /**
     * @return {?}
     */
    function () {
        return this._content;
    };
    /**
     * @return {?}
     */
    AOContainerDirective.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.content().clear();
    };
    /**
     * @param {?} component
     * @return {?}
     */
    AOContainerDirective.prototype.open = /**
     * @param {?} component
     * @return {?}
     */
    function (component) {
        this.clear();
        this._component = this.content().createComponent(typeof component !== 'function' ? component : this._resolver.resolveComponentFactory(component));
        this._component.instance.directive = this;
        return this._component.instance;
    };
    AOContainerDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ao-container]'
                },] }
    ];
    /** @nocollapse */
    AOContainerDirective.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: ComponentFactoryResolver }
    ]; };
    return AOContainerDirective;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOContainerDirective.prototype._component;
    /**
     * @type {?}
     * @private
     */
    AOContainerDirective.prototype._content;
    /**
     * @type {?}
     * @private
     */
    AOContainerDirective.prototype._resolver;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-container/ao-container.interface.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
function AOContainerInterface() { }
if (false) {
    /** @type {?} */
    AOContainerInterface.prototype.directive;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-container/ao-container.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOContainerComponent = /** @class */ (function () {
    function AOContainerComponent(_content) {
        this._content = _content;
    }
    /**
     * @return {?}
     */
    AOContainerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var animation = createAnimation()
            // .addElement(document.querySelector('section'))
            .addElement(this.tref.nativeElement.innerHTML)
            // .addElement(this.tref.)
            .easing("ease-in-out")
            .duration(1000)
            .direction("alternate")
            .iterations(Infinity)
            .fromTo('opacity', '0.0', '0.8')
            .keyframes([
            { offset: 0, transform: "scale(1)", opacity: "1" },
            { offset: 1, transform: "scale(1.5)", opacity: "0.5" }
        ]);
        animation.play();
    };
    /**
     * @return {?}
     */
    AOContainerComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.directive.clear();
    };
    AOContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ao-container',
                    template: "<div #tref>\r\n  <ion-backdrop (ionBackdropTap)=\"close()\" class=\"menu-type-overlay show-backdrop\"></ion-backdrop>\r\n\r\n  <section class=\"down\">\r\n\r\n    <div class=\"ion-page\">\r\n      <ion-header>\r\n        <ion-toolbar>\r\n          <ion-title>AOContainerComponent</ion-title>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n      <ion-content>\r\n        <ion-button expand=\"block\" (click)=\"close()\">CLOSE</ion-button>\r\n      </ion-content>\r\n      <ion-footer>\r\n        <ion-toolbar>\r\n          <ion-title>AOContainerComponent</ion-title>\r\n        </ion-toolbar>\r\n      </ion-footer>\r\n    </div>\r\n\r\n  </section>\r\n</div>",
                    styles: ["section{position:absolute;width:300px;height:400px;z-index:2}section.top{top:0;left:50%;margin-left:-150px}section.down{bottom:0;left:50%;margin-left:-150px}section.right{right:0;top:50%;margin-top:-200px}section.left{left:0;top:50%;margin-top:-200px}"]
                }] }
    ];
    /** @nocollapse */
    AOContainerComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    AOContainerComponent.propDecorators = {
        directive: [{ type: Input }],
        tref: [{ type: ViewChild, args: ["tref", { read: ElementRef, static: true },] }]
    };
    return AOContainerComponent;
}());
if (false) {
    /** @type {?} */
    AOContainerComponent.prototype.directive;
    /** @type {?} */
    AOContainerComponent.prototype.tref;
    /**
     * @type {?}
     * @private
     */
    AOContainerComponent.prototype._content;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-container/ao-container.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOContainerService = /** @class */ (function () {
    function AOContainerService() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} directive
     * @return {THIS}
     */
    AOContainerService.prototype.init = /**
     * @template THIS
     * @this {THIS}
     * @param {?} directive
     * @return {THIS}
     */
    function (directive) {
        (/** @type {?} */ (this))._directive = directive;
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} component
     * @param {?=} data
     * @return {THIS}
     */
    AOContainerService.prototype.open = /**
     * @template THIS
     * @this {THIS}
     * @param {?} component
     * @param {?=} data
     * @return {THIS}
     */
    function (component, data) {
        if (data === void 0) { data = {}; }
        /** @type {?} */
        var instance = (/** @type {?} */ (this))._directive.open(component);
        instance.data = data;
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    AOContainerService.prototype.close = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        (/** @type {?} */ (this))._directive.clear();
        return (/** @type {?} */ (this));
    };
    AOContainerService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOContainerService.ctorParameters = function () { return []; };
    /** @nocollapse */ AOContainerService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOContainerService_Factory() { return new AOContainerService(); }, token: AOContainerService, providedIn: "root" });
    return AOContainerService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOContainerService.prototype._directive;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-string.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var AOString = /** @class */ (function () {
    function AOString() {
    }
    /**
     * @param {?} text
     * @return {?}
     */
    AOString.onlyNumbers = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.toString().replace(/\D/g, '');
    };
    /**
     * @param {?} text
     * @return {?}
     */
    AOString.trim = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.toString().replace(/\s+/g, ' ').trim();
    };
    /**
     * @param {?} text
     * @return {?}
     */
    AOString.readingTime = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.length * 0.2 * 1000;
    };
    /**
     * @param {?} text
     * @return {?}
     */
    AOString.slug = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.toString().toLowerCase()
            .replace(/[àÀáÁâÂãäÄÅåª]+/g, 'a') // Special Characters #1
            .replace(/[èÈéÉêÊëË]+/g, 'e') // Special Characters #2
            .replace(/[ìÌíÍîÎïÏ]+/g, 'i') // Special Characters #3
            .replace(/[òÒóÓôÔõÕöÖº]+/g, 'o') // Special Characters #4
            .replace(/[ùÙúÚûÛüÜ]+/g, 'u') // Special Characters #5
            .replace(/[ýÝÿŸ]+/g, 'y') // Special Characters #6
            .replace(/[ñÑ]+/g, 'n') // Special Characters #7
            .replace(/[çÇ]+/g, 'c') // Special Characters #8
            .replace(/[ß]+/g, 'ss') // Special Characters #9
            .replace(/[Ææ]+/g, 'ae') // Special Characters #10
            .replace(/[Øøœ]+/g, 'oe') // Special Characters #11
            .replace(/[%]+/g, 'pct') // Special Characters #12
            .replace(/\s+/g, '-') // Replace spaces with -
            .replace(/[^\w\-]+/g, '') // Remove all non-word chars
            .replace(/\-\-+/g, '-') // Replace multiple - with single -
            .replace(/^-+/, '') // Trim - from start of text
            .replace(/-+$/, ''); // Trim - from end of text;
    };
    /**
     * @param {?} text
     * @return {?}
     */
    AOString.keywords = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        if (Array.isArray(text)) {
            text = text.join(' ');
        }
        return AOString.trim(text.toString())
            .split(' ')
            .map((/**
         * @param {?} part
         * @return {?}
         */
        function (part) { return AOString.slug(part); }))
            .reduce((/**
         * @param {?} acc
         * @param {?} val
         * @return {?}
         */
        function (acc, val) { return acc.concat([val].concat(val.split('-'))); }), [])
            .filter((/**
         * @param {?} value
         * @param {?} index
         * @param {?} self
         * @return {?}
         */
        function (value, index, self) {
            return self.indexOf(value) === index;
        }));
    };
    return AOString;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-menu.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOMenuService = /** @class */ (function () {
    function AOMenuService(platform, controller) {
        this.platform = platform;
        this.controller = controller;
        this._stacked = ['lg'];
    }
    /**
     * @return {?}
     */
    AOMenuService.prototype.disable = /**
     * @return {?}
     */
    function () {
        return this.controller.enable(false, 'AO_APP_MENU');
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.enable = /**
     * @return {?}
     */
    function () {
        return this.controller.enable(true, 'AO_APP_MENU');
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.stackable = /**
     * @return {?}
     */
    function () {
        return this.platform.width() > 991;
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.stacked = /**
     * @return {?}
     */
    function () {
        return this._stacked;
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.stackToggle = /**
     * @return {?}
     */
    function () {
        this._stacked = this._stacked == false ? ['lg'] : false;
    };
    AOMenuService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOMenuService.ctorParameters = function () { return [
        { type: Platform },
        { type: MenuController }
    ]; };
    /** @nocollapse */ AOMenuService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOMenuService_Factory() { return new AOMenuService(ɵɵinject(Platform), ɵɵinject(MenuController)); }, token: AOMenuService, providedIn: "root" });
    return AOMenuService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOMenuService.prototype._stacked;
    /** @type {?} */
    AOMenuService.prototype.platform;
    /** @type {?} */
    AOMenuService.prototype.controller;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOService = /** @class */ (function () {
    function AOService(platform, ionLoading, ionAlert, ionModal, ionSheet, ionToast, menu, container) {
        this.platform = platform;
        this.ionLoading = ionLoading;
        this.ionAlert = ionAlert;
        this.ionModal = ionModal;
        this.ionSheet = ionSheet;
        this.ionToast = ionToast;
        this.menu = menu;
        this.container = container;
    }
    //--------------------------------------------------------------------------------------------------------------------
    // LOADING
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // LOADING
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} promise
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.wait = 
    //--------------------------------------------------------------------------------------------------------------------
    // LOADING
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} promise
     * @param {?=} opts
     * @return {?}
     */
    function (promise, opts) {
        if (opts === void 0) { opts = {}; }
        return this.ionLoading.create(__assign({ message: 'Carregando...' }, opts)).then((/**
         * @param {?} loading
         * @return {?}
         */
        function (loading) {
            return loading.present().then((/**
             * @return {?}
             */
            function () {
                promise.finally((/**
                 * @return {?}
                 */
                function () { return loading.dismiss(); }));
                return promise;
            }));
        }));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // DROPDOWN
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // DROPDOWN
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} buttons
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.sheet = 
    //--------------------------------------------------------------------------------------------------------------------
    // DROPDOWN
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} buttons
     * @param {?=} opts
     * @return {?}
     */
    function (buttons, opts) {
        if (buttons === void 0) { buttons = {}; }
        if (opts === void 0) { opts = {}; }
        return this.ionSheet.create(__assign({ header: 'Opções...', buttons: buttons }, opts)).then((/**
         * @param {?} sheet
         * @return {?}
         */
        function (sheet) {
            return sheet.present().then((/**
             * @return {?}
             */
            function () {
                return sheet;
            }));
        }));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // MODAL
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // MODAL
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} component
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.modal = 
    //--------------------------------------------------------------------------------------------------------------------
    // MODAL
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} component
     * @param {?=} opts
     * @return {?}
     */
    function (component, opts) {
        if (opts === void 0) { opts = {}; }
        return this.ionModal.create(__assign({ component: component }, opts)).then((/**
         * @param {?} modal
         * @return {?}
         */
        function (modal) {
            return modal.present().then((/**
             * @return {?}
             */
            function () {
                return modal;
            }));
        }));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // ALERT
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // ALERT
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.alert = 
    //--------------------------------------------------------------------------------------------------------------------
    // ALERT
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    function (message, opts) {
        if (opts === void 0) { opts = {}; }
        return this.ionAlert.create(__assign({ header: 'Atenção...', message: message, buttons: [
                { text: 'OK', role: 'OK' }
            ] }, opts)).then((/**
         * @param {?} alert
         * @return {?}
         */
        function (alert) {
            return alert.present().then((/**
             * @return {?}
             */
            function () {
                return alert.onDidDismiss();
            }));
        }));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // PROMPT
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // PROMPT
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} inputs
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.prompt = 
    //--------------------------------------------------------------------------------------------------------------------
    // PROMPT
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} inputs
     * @param {?=} opts
     * @return {?}
     */
    function (inputs, opts) {
        if (opts === void 0) { opts = {}; }
        return this.alert('', __assign({ header: 'Preencha...', inputs: inputs, buttons: [
                { text: 'CANCELAR', role: 'CANCEL' },
                { text: 'OK', role: 'OK' }
            ] }, opts));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // CONFIRM
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // CONFIRM
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.confirm = 
    //--------------------------------------------------------------------------------------------------------------------
    // CONFIRM
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    function (message, yes, no, opts) {
        if (yes === void 0) { yes = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (no === void 0) { no = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (opts === void 0) { opts = {}; }
        return this.alert(message, __assign({ header: 'Confirmação...', buttons: [
                { text: 'NÃO', role: 'NO' },
                { text: 'SIM', role: 'YES' }
            ] }, opts)).then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            response.role == 'YES' ? yes() : no();
            return response;
        }));
    };
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.confirmOperation = /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    function (yes, no, opts) {
        if (yes === void 0) { yes = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (no === void 0) { no = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (opts === void 0) { opts = {}; }
        return this.confirm('Deseja realmente <b>realizar</b> esta operação?', yes, no, opts);
    };
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.confirmActivate = /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    function (yes, no, opts) {
        if (yes === void 0) { yes = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (no === void 0) { no = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (opts === void 0) { opts = {}; }
        return this.confirm('Deseja realmente <b>ativar</b> este item?', yes, no, opts);
    };
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.confirmDeactivate = /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    function (yes, no, opts) {
        if (yes === void 0) { yes = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (no === void 0) { no = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (opts === void 0) { opts = {}; }
        return this.confirm('Deseja realmente <b>desativar</b> este item?', yes, no, opts);
    };
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.confirmDestroy = /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    function (yes, no, opts) {
        if (yes === void 0) { yes = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (no === void 0) { no = (/**
         * @return {?}
         */
        function () { return null; }); }
        if (opts === void 0) { opts = {}; }
        return this.confirm('Deseja realmente <b>excluir</b> este item?', yes, no, opts);
    };
    //--------------------------------------------------------------------------------------------------------------------
    // TOAST
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // TOAST
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.toast = 
    //--------------------------------------------------------------------------------------------------------------------
    // TOAST
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    function (message, opts) {
        if (opts === void 0) { opts = {}; }
        return this.ionToast.create(__assign({ message: message, duration: AOString.readingTime(message) }, opts)).then((/**
         * @param {?} toast
         * @return {?}
         */
        function (toast) {
            return toast.present().then((/**
             * @return {?}
             */
            function () {
                return toast.onDidDismiss();
            }));
        }));
    };
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.info = /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    function (message, opts) {
        if (opts === void 0) { opts = {}; }
        //console.info(message);
        return this.toast(message, __assign({ color: 'tertiary' }, opts));
    };
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.success = /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    function (message, opts) {
        if (opts === void 0) { opts = {}; }
        //console.log(message);
        return this.toast(message, __assign({ color: 'success' }, opts));
    };
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.warning = /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    function (message, opts) {
        if (opts === void 0) { opts = {}; }
        console.warn(message);
        return this.toast(message, __assign({ color: 'warning' }, opts));
    };
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    AOService.prototype.danger = /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    function (message, opts) {
        if (opts === void 0) { opts = {}; }
        console.error(message, opts.error);
        return this.toast(message, __assign({ color: 'danger' }, opts));
    };
    AOService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOService.ctorParameters = function () { return [
        { type: Platform },
        { type: LoadingController },
        { type: AlertController },
        { type: ModalController },
        { type: ActionSheetController },
        { type: ToastController },
        { type: AOMenuService },
        { type: AOContainerService }
    ]; };
    /** @nocollapse */ AOService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOService_Factory() { return new AOService(ɵɵinject(Platform), ɵɵinject(LoadingController), ɵɵinject(AlertController), ɵɵinject(ModalController), ɵɵinject(ActionSheetController), ɵɵinject(ToastController), ɵɵinject(AOMenuService), ɵɵinject(AOContainerService)); }, token: AOService, providedIn: "root" });
    return AOService;
}());
if (false) {
    /** @type {?} */
    AOService.prototype.platform;
    /** @type {?} */
    AOService.prototype.ionLoading;
    /** @type {?} */
    AOService.prototype.ionAlert;
    /** @type {?} */
    AOService.prototype.ionModal;
    /** @type {?} */
    AOService.prototype.ionSheet;
    /** @type {?} */
    AOService.prototype.ionToast;
    /** @type {?} */
    AOService.prototype.menu;
    /** @type {?} */
    AOService.prototype.container;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/ao-app/ao-app.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOAppComponent = /** @class */ (function () {
    function AOAppComponent(ao) {
        this.ao = ao;
    }
    /**
     * @return {?}
     */
    AOAppComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    AOAppComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ao-app',
                    template: "<ion-app>\n  <ion-split-pane contentId=\"AO_APP_CONTENT\" [when]=\"ao.menu.stacked()\">\n\n    <ion-menu menuId=\"AO_APP_MENU\" contentId=\"AO_APP_CONTENT\" type=\"overlay\">\n      <ion-header>\n\n        <ng-content select=\"[slot=header]\"></ng-content>\n\n      </ion-header>\n      <ion-content>\n\n        <ng-content select=\"[slot=menu]\"></ng-content>\n\n      </ion-content>\n      <ion-header>\n\n        <ng-content select=\"[slot=footer]\"></ng-content>\n\n      </ion-header>\n    </ion-menu>\n\n    <ion-router-outlet id=\"AO_APP_CONTENT\"></ion-router-outlet>\n\n  </ion-split-pane>\n</ion-app>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    AOAppComponent.ctorParameters = function () { return [
        { type: AOService }
    ]; };
    return AOAppComponent;
}());
if (false) {
    /** @type {?} */
    AOAppComponent.prototype.ao;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/ao-menu/ao-menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOMenuComponent = /** @class */ (function () {
    function AOMenuComponent() {
    }
    /**
     * @return {?}
     */
    AOMenuComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    AOMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ao-menu',
                    template: "<aside class=\"ao-screen ao-menu\">\r\n  <div class=\"ao-screen-body-fixed\">\r\n\r\n    <div class=\"ao-screen ao-screen-row\">\r\n      <div class=\"ao-screen-header ao-menu-icons\">\r\n\r\n        <div class=\"ao-screen ao-screen-relative\">\r\n          <div class=\"ao-screen-body\">\r\n            <ng-content select=\"[slot=top-icons]\"></ng-content>\r\n          </div>\r\n          <div class=\"ao-screen-footer\">\r\n            <ng-content select=\"[slot=down-icons]\"></ng-content>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"ao-screen-body-fixed ao-menu-list\">\r\n\r\n        <div class=\"ao-screen ao-screen-relative\">\r\n          <div class=\"ao-screen-body\">\r\n            <ng-content select=\"[slot=top-list]\"></ng-content>\r\n          </div>\r\n          <div class=\"ao-screen-footer\">\r\n            <ng-content select=\"[slot=down-list]\"></ng-content>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</aside>",
                    styles: [":host ::ng-deep ion-list{padding:0;background:0 0}:host ::ng-deep ion-item{--background:none}:host ::ng-deep .ao-screen{background:0 0}:host ::ng-deep .ao-menu{background:rgba(0,0,0,.05)}:host ::ng-deep .ao-menu-icons{background:rgba(0,0,0,.05)}:host ::ng-deep .ao-menu-icons ion-buttons{flex-direction:column}:host ::ng-deep .ao-menu-icons .ao-screen{width:56px}"]
                }] }
    ];
    /** @nocollapse */
    AOMenuComponent.ctorParameters = function () { return []; };
    return AOMenuComponent;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-auth.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var AOAuthService = /** @class */ (function () {
    // -------------------------------------------------------------------------------------------------------------------
    function AOAuthService(_nav, _ao) {
        var _this = this;
        this._nav = _nav;
        this._ao = _ao;
        this._redirect_default = '/';
        this.redirect = (/**
         * @return {?}
         */
        function () { return _this._redirect; });
        this.user = (/**
         * @return {?}
         */
        function () { return _this._user; });
        // -------------------------------------------------------------------------------------------------------------------
        this.isUser = (/**
         * @return {?}
         */
        function () { return !!_this._user; });
        this.isGuest = (/**
         * @return {?}
         */
        function () { return !_this._user; });
        this.id = (/**
         * @return {?}
         */
        function () { return _this.isUser() ? _this.user().id : null; });
        this.name = (/**
         * @return {?}
         */
        function () { return _this.isUser() ? _this.user().name : null; });
        this.email = (/**
         * @return {?}
         */
        function () { return _this.isUser() ? _this.user().email : null; });
        this.image = (/**
         * @return {?}
         */
        function () { return _this.isUser() ? _this.user().image : null; });
        this.verified = (/**
         * @return {?}
         */
        function () { return _this.isUser() ? _this.user().verified : null; });
        this.permitions = (/**
         * @return {?}
         */
        function () { return _this.isUser() ? _this.user().permitions : null; });
        // -------------------------------------------------------------------------------------------------------------------
        this.onLogin = (/**
         * @return {?}
         */
        function () { return AOAuthService._onLogin; });
        this.onLogout = (/**
         * @return {?}
         */
        function () { return AOAuthService._onLogout; });
        this.onChange = (/**
         * @return {?}
         */
        function () { return AOAuthService._onChange; });
        AOAuthService._onChange = new BehaviorSubject(this.user());
    }
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} provider
     * @return {?}
     */
    AOAuthService.prototype.provider = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} provider
     * @return {?}
     */
    function (provider) {
        if (provider === void 0) { provider = null; }
        if (provider == null) {
            return this._provider;
        }
        this._provider = provider;
        return this;
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} redirect
     * @return {THIS}
     */
    AOAuthService.prototype.setRedirect = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} redirect
     * @return {THIS}
     */
    function (redirect) {
        (/** @type {?} */ (this))._redirect = redirect;
        return (/** @type {?} */ (this));
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} user
     * @return {THIS}
     */
    AOAuthService.prototype.setUser = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} user
     * @return {THIS}
     */
    function (user) {
        (/** @type {?} */ (this))._user = user;
        (/** @type {?} */ (this)).onChange().next((/** @type {?} */ (this))._user);
        return (/** @type {?} */ (this));
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthService.prototype.login = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        return this._ao.wait(this.provider().login(data)).then((/**
         * @param {?} user
         * @return {?}
         */
        function (user) {
            _this.setUser(user);
            _this.onLogin().emit();
            /** @type {?} */
            var redirect = _this._redirect && _this._redirect !== '/login'
                ? _this._redirect
                : _this._redirect_default;
            _this._redirect = null;
            return _this._nav.navigateRoot(redirect);
        }));
    };
    /**
     * @return {?}
     */
    AOAuthService.prototype.logout = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return this._ao.wait(this.provider().logout()).then((/**
         * @return {?}
         */
        function () {
            _this.setUser(null);
            _this.onLogout();
            return _this._nav.navigateRoot('/login');
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthService.prototype.update = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return this._ao.wait(this.provider().update(data));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthService.prototype.updatePassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return this._ao.wait(this.provider().updatePassword(data));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthService.prototype.forgetPassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return this._ao.wait(this.provider().forgetPassword(data));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthService.prototype.resetPassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return this._ao.wait(this.provider().resetPassword(data));
    };
    AOAuthService._onLogin = new EventEmitter();
    AOAuthService._onLogout = new EventEmitter();
    AOAuthService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOAuthService.ctorParameters = function () { return [
        { type: NavController },
        { type: AOService }
    ]; };
    /** @nocollapse */ AOAuthService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOAuthService_Factory() { return new AOAuthService(ɵɵinject(NavController), ɵɵinject(AOService)); }, token: AOAuthService, providedIn: "root" });
    __decorate([
        LocalStorage('user'),
        __metadata("design:type", Object)
    ], AOAuthService.prototype, "_user", void 0);
    __decorate([
        LocalStorage('redirect'),
        __metadata("design:type", String)
    ], AOAuthService.prototype, "_redirect", void 0);
    return AOAuthService;
}());
if (false) {
    /** @type {?} */
    AOAuthService._onLogin;
    /** @type {?} */
    AOAuthService._onLogout;
    /** @type {?} */
    AOAuthService._onChange;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._user;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._redirect;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._redirect_default;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._provider;
    /** @type {?} */
    AOAuthService.prototype.redirect;
    /** @type {?} */
    AOAuthService.prototype.user;
    /** @type {?} */
    AOAuthService.prototype.isUser;
    /** @type {?} */
    AOAuthService.prototype.isGuest;
    /** @type {?} */
    AOAuthService.prototype.id;
    /** @type {?} */
    AOAuthService.prototype.name;
    /** @type {?} */
    AOAuthService.prototype.email;
    /** @type {?} */
    AOAuthService.prototype.image;
    /** @type {?} */
    AOAuthService.prototype.verified;
    /** @type {?} */
    AOAuthService.prototype.permitions;
    /** @type {?} */
    AOAuthService.prototype.onLogin;
    /** @type {?} */
    AOAuthService.prototype.onLogout;
    /** @type {?} */
    AOAuthService.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._nav;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._ao;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-subscriptions.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOSubscriptions = /** @class */ (function () {
    /**
     * @return any
     */
    function AOSubscriptions() {
        var _this = this;
        this.add = (/**
         * @template THIS
         * @this {THIS}
         * @param {?} name
         * @param {?} subscription
         * @return {THIS}
         */
        function (name, subscription) {
            _this[name] = subscription;
            return _this;
        });
        this.stop = (/**
         * @template THIS
         * @this {THIS}
         * @param {?=} names
         * @return {THIS}
         */
        function (names) {
            if (names === void 0) { names = null; }
            Object.keys(_this).filter((/**
             * @param {?} name
             * @return {?}
             */
            function (name) { return ['add', 'stop'].indexOf(name) == -1; })).forEach((/**
             * @param {?} name
             * @return {?}
             */
            function (name) {
                if (names === null || names.indexOf(name + '') >= 0) {
                    _this[name].unsubscribe();
                }
            }));
            return _this;
        });
        /** @type {?} */
        var handler = {
            set: /**
             * @param {?} obj
             * @param {?} prop
             * @param {?} value
             * @return {?}
             */
            function (obj, prop, value) {
                if (obj[prop] && obj[prop].unsubscribe) {
                    obj[prop].unsubscribe();
                }
                Reflect.set(obj, prop, value);
                return value;
            }
        };
        return new Proxy(this, handler);
    }
    return AOSubscriptions;
}());
if (false) {
    /** @type {?} */
    AOSubscriptions.prototype.add;
    /** @type {?} */
    AOSubscriptions.prototype.stop;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-is-guest/ao-is-guest.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOIsGuestDirective = /** @class */ (function () {
    function AOIsGuestDirective(_element, _templateRef, _viewContainer, _zone) {
        this._element = _element;
        this._templateRef = _templateRef;
        this._viewContainer = _viewContainer;
        this._zone = _zone;
        this._subscriptions = new AOSubscriptions();
    }
    /**
     * @return {?}
     */
    AOIsGuestDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._subscriptions.add('status', AOAuthService._onChange.subscribe((/**
         * @param {?} status
         * @return {?}
         */
        function (status) {
            _this._zone.run((/**
             * @return {?}
             */
            function () {
                status
                    ? _this._viewContainer.clear()
                    : _this._viewContainer.createEmbeddedView(_this._templateRef);
            }));
        })));
    };
    /**
     * @return {?}
     */
    AOIsGuestDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._subscriptions.stop();
    };
    AOIsGuestDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ao-is-guest]'
                },] }
    ];
    /** @nocollapse */
    AOIsGuestDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: TemplateRef },
        { type: ViewContainerRef },
        { type: NgZone }
    ]; };
    AOIsGuestDirective.propDecorators = {
        aoIsGuest: [{ type: Input }]
    };
    return AOIsGuestDirective;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOIsGuestDirective.prototype._subscriptions;
    /** @type {?} */
    AOIsGuestDirective.prototype.aoIsGuest;
    /**
     * @type {?}
     * @private
     */
    AOIsGuestDirective.prototype._element;
    /**
     * @type {?}
     * @private
     */
    AOIsGuestDirective.prototype._templateRef;
    /**
     * @type {?}
     * @private
     */
    AOIsGuestDirective.prototype._viewContainer;
    /**
     * @type {?}
     * @private
     */
    AOIsGuestDirective.prototype._zone;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-is-user/ao-is-user.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOIsUserDirective = /** @class */ (function () {
    function AOIsUserDirective(_element, _templateRef, _viewContainer, _zone) {
        this._element = _element;
        this._templateRef = _templateRef;
        this._viewContainer = _viewContainer;
        this._zone = _zone;
        this._subscriptions = new AOSubscriptions();
    }
    /**
     * @return {?}
     */
    AOIsUserDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._subscriptions.add('status', AOAuthService._onChange.subscribe((/**
         * @param {?} status
         * @return {?}
         */
        function (status) {
            _this._zone.run((/**
             * @return {?}
             */
            function () {
                status
                    ? _this._viewContainer.createEmbeddedView(_this._templateRef)
                    : _this._viewContainer.clear();
            }));
        })));
    };
    /**
     * @return {?}
     */
    AOIsUserDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._subscriptions.stop();
    };
    AOIsUserDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ao-is-user]'
                },] }
    ];
    /** @nocollapse */
    AOIsUserDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: TemplateRef },
        { type: ViewContainerRef },
        { type: NgZone }
    ]; };
    AOIsUserDirective.propDecorators = {
        aoIsUser: [{ type: Input }]
    };
    return AOIsUserDirective;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOIsUserDirective.prototype._subscriptions;
    /** @type {?} */
    AOIsUserDirective.prototype.aoIsUser;
    /**
     * @type {?}
     * @private
     */
    AOIsUserDirective.prototype._element;
    /**
     * @type {?}
     * @private
     */
    AOIsUserDirective.prototype._templateRef;
    /**
     * @type {?}
     * @private
     */
    AOIsUserDirective.prototype._viewContainer;
    /**
     * @type {?}
     * @private
     */
    AOIsUserDirective.prototype._zone;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-stop-propagation/ao-stop-propagation.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOStopPropagationDirective = /** @class */ (function () {
    function AOStopPropagationDirective() {
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    AOStopPropagationDirective.prototype.click = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
    };
    AOStopPropagationDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ao-stop-propagation]'
                },] }
    ];
    /** @nocollapse */
    AOStopPropagationDirective.ctorParameters = function () { return []; };
    AOStopPropagationDirective.propDecorators = {
        click: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return AOStopPropagationDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-mask/ao-mask.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOMaskDirective = /** @class */ (function () {
    function AOMaskDirective(ionInput) {
        this.ionInput = ionInput;
        this._masks = {
            zipCode: {
                mask: '00.000-000'
            },
            cnpj: {
                mask: '00.000.000/0000-00'
            },
            cpf: {
                mask: '000.000.000-00'
            },
            cpfCnpj: {
                mask: [
                    { mask: '000.000.000-00' },
                    { mask: '00.000.000/0000-00' }
                ]
            },
            phone: {
                mask: [
                    { mask: '(00) 0000-0000' },
                    { mask: '(00) 0-0000-0000' }
                ]
            },
            date: {
                mask: Date,
                pattern: 'DD/MM/YYYY',
                blocks: {
                    DD: { mask: IMask.MaskedRange, from: 1, to: 31, maxLength: 2 },
                    MM: { mask: IMask.MaskedRange, from: 1, to: 12, maxLength: 2 },
                    YYYY: { mask: IMask.MaskedRange, from: 1900, to: 9999, maxLength: 4 }
                },
                format: (/**
                 * @param {?} date
                 * @return {?}
                 */
                function (date) {
                    /** @type {?} */
                    var day = date.getDate().toString().padStart(2, 0);
                    /** @type {?} */
                    var month = (date.getMonth() + 1).toString().padStart(2, 0);
                    /** @type {?} */
                    var year = date.getFullYear();
                    return [day, month, year].join('/');
                }),
                parse: (/**
                 * @param {?} str
                 * @return {?}
                 */
                function (str) {
                    /** @type {?} */
                    var parts = str.split('/');
                    return new Date(parts[2], parts[1] - 1, parts[0]);
                }),
            },
            decimal: {
                mask: Number,
                thousandsSeparator: '.',
                scale: 2,
                signed: false,
                padFractionalZeros: false,
                normalizeZeros: true,
                radix: ',',
                mapToRadix: ['.'],
            },
            int: {
                mask: Number,
                thousandsSeparator: '.',
                scale: 0,
                signed: false,
            }
        };
        this._destroyed = new Subject();
    }
    /**
     * @return {?}
     */
    AOMaskDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        return __awaiter(this, void 0, void 0, function () {
            var element, formatter, count;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ionInput.getInputElement()];
                    case 1:
                        element = _a.sent();
                        formatter = IMask(element, this.options());
                        // formatter.value
                        // formatter.unmaskedValue
                        // formatter.typedValue = '+55 (61) 1234-5678'
                        this.ionInput.value = element.value;
                        formatter.updateValue();
                        count = 0;
                        this.ionInput.ionChange
                            .pipe(takeUntil(this._destroyed))
                            .subscribe((/**
                         * @param {?} event
                         * @return {?}
                         */
                        function (event) {
                            // event.detail.value
                            _this.ionInput.value = element.value;
                            if (count == 0) {
                                formatter.updateValue();
                                count++;
                            }
                        }));
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    AOMaskDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._destroyed.next();
    };
    /**
     * @private
     * @return {?}
     */
    AOMaskDirective.prototype.options = /**
     * @private
     * @return {?}
     */
    function () {
        if (typeof this.mask == 'string') {
            /** @type {?} */
            var options = { mask: this.mask };
            if (this._masks[this.mask]) {
                options = this._masks[this.mask];
            }
            if (this.min !== undefined) {
                options.min = this.min;
            }
            if (this.max !== undefined) {
                options.max = this.max;
            }
            if (this.min < 0 || this.max < 0) {
                options.signed = true;
            }
            return options;
        }
        return this.mask;
    };
    AOMaskDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ao-mask]',
                    providers: [IonInput],
                },] }
    ];
    /** @nocollapse */
    AOMaskDirective.ctorParameters = function () { return [
        { type: IonInput }
    ]; };
    AOMaskDirective.propDecorators = {
        mask: [{ type: Input, args: ['ao-mask',] }],
        min: [{ type: Input, args: ['ao-min',] }],
        max: [{ type: Input, args: ['ao-max',] }]
    };
    return AOMaskDirective;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOMaskDirective.prototype._masks;
    /**
     * @type {?}
     * @private
     */
    AOMaskDirective.prototype.mask;
    /**
     * @type {?}
     * @private
     */
    AOMaskDirective.prototype.min;
    /**
     * @type {?}
     * @private
     */
    AOMaskDirective.prototype.max;
    /**
     * @type {?}
     * @private
     */
    AOMaskDirective.prototype._destroyed;
    /** @type {?} */
    AOMaskDirective.prototype.ionInput;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/guards/ao-guest.guard.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOGuestGuard = /** @class */ (function () {
    function AOGuestGuard(_router, _nav, _zone, _auth) {
        this._router = _router;
        this._nav = _nav;
        this._zone = _zone;
        this._auth = _auth;
        this._subscriptions = new AOSubscriptions();
    }
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    AOGuestGuard.prototype.canActivate = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        return this.can(route, state);
    };
    /**
     * @param {?} childRoute
     * @param {?} state
     * @return {?}
     */
    AOGuestGuard.prototype.canActivateChild = /**
     * @param {?} childRoute
     * @param {?} state
     * @return {?}
     */
    function (childRoute, state) {
        return this.can(childRoute, state);
    };
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    AOGuestGuard.prototype.can = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        var _this = this;
        if (this._auth.isUser() && state.url !== '/login') {
            return this._router.createUrlTree(['/']);
        }
        this._subscriptions.add('login', AOAuthService._onLogin.subscribe((/**
         * @return {?}
         */
        function () {
            _this._subscriptions.stop();
            _this._zone.run((/**
             * @return {?}
             */
            function () {
                _this._nav.navigateRoot('/');
            }));
        })));
        this._subscriptions.add('route', this._router.events.subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event instanceof NavigationEnd && event.url !== state.url) {
                _this._subscriptions.stop();
            }
        })));
        return true;
    };
    AOGuestGuard.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AOGuestGuard.ctorParameters = function () { return [
        { type: Router },
        { type: NavController },
        { type: NgZone },
        { type: AOAuthService }
    ]; };
    return AOGuestGuard;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOGuestGuard.prototype._subscriptions;
    /**
     * @type {?}
     * @private
     */
    AOGuestGuard.prototype._router;
    /**
     * @type {?}
     * @private
     */
    AOGuestGuard.prototype._nav;
    /**
     * @type {?}
     * @private
     */
    AOGuestGuard.prototype._zone;
    /**
     * @type {?}
     * @private
     */
    AOGuestGuard.prototype._auth;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/guards/ao-user.guard.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOUserGuard = /** @class */ (function () {
    function AOUserGuard(_router, _nav, _zone, _auth) {
        this._router = _router;
        this._nav = _nav;
        this._zone = _zone;
        this._auth = _auth;
        this._subscriptions = new AOSubscriptions();
    }
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    AOUserGuard.prototype.canActivate = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        return this.can(route, state);
    };
    /**
     * @param {?} childRoute
     * @param {?} state
     * @return {?}
     */
    AOUserGuard.prototype.canActivateChild = /**
     * @param {?} childRoute
     * @param {?} state
     * @return {?}
     */
    function (childRoute, state) {
        return this.can(childRoute, state);
    };
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    AOUserGuard.prototype.can = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        var _this = this;
        if (this._auth.isGuest()) {
            this._auth.setRedirect(state.url);
            return this._router.createUrlTree(['/login']);
        }
        this._subscriptions.add('logout', AOAuthService._onLogout.subscribe((/**
         * @return {?}
         */
        function () {
            _this._subscriptions.stop();
            _this._zone.run((/**
             * @return {?}
             */
            function () {
                _this._nav.navigateRoot('/login');
            }));
        })));
        this._subscriptions.add('route', this._router.events.subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event instanceof NavigationEnd && event.url !== state.url) {
                _this._subscriptions.stop();
            }
        })));
        return true;
    };
    AOUserGuard.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AOUserGuard.ctorParameters = function () { return [
        { type: Router },
        { type: NavController },
        { type: NgZone },
        { type: AOAuthService }
    ]; };
    return AOUserGuard;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._subscriptions;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._router;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._nav;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._zone;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._auth;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/helpers/ao-faunadb-pagination.helper.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOFaunaDBPaginationHelper = /** @class */ (function () {
    function AOFaunaDBPaginationHelper(_ao, _db) {
        this._ao = _ao;
        this._db = _db;
        this._filters_show = true;
        this._filters_model = {};
        this._filters = {};
        this._size = 20;
    }
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} filters
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.filters = 
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} filters
     * @return {?}
     */
    function (filters) {
        if (filters) {
            this._filters_model = __assign({}, filters);
            this._filters = __assign({}, filters);
            return this;
        }
        return this._filters;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.openFilters = /**
     * @return {?}
     */
    function () {
        this._filters_show = true;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.closeFilters = /**
     * @return {?}
     */
    function () {
        this._filters_show = false;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.toggleFilters = /**
     * @return {?}
     */
    function () {
        this._filters_show = !this._filters_show;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.showFilters = /**
     * @return {?}
     */
    function () {
        return this._filters_show;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.hideFilters = /**
     * @return {?}
     */
    function () {
        return !this._filters_show;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.hasFilters = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return Object
            .keys(this._filters_model)
            .filter((/**
         * @param {?} key
         * @return {?}
         */
        function (key) { return _this._filters_model[key] !== _this._filters[key]; }))
            .length > 0;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.resetFilters = /**
     * @return {?}
     */
    function () {
        this._filters = __assign({}, this._filters_model);
        this.openFilters();
    };
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columns
     * @return {THIS}
     */
    AOFaunaDBPaginationHelper.prototype.select = 
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columns
     * @return {THIS}
     */
    function (columns) {
        return ((/** @type {?} */ (this))._columns = __spread(columns)) && (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} query
     * @return {THIS}
     */
    AOFaunaDBPaginationHelper.prototype.query = /**
     * @template THIS
     * @this {THIS}
     * @param {?} query
     * @return {THIS}
     */
    function (query) {
        return ((/** @type {?} */ (this))._query = query) && (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.search = /**
     * @return {?}
     */
    function () {
        this._last_after = undefined;
        this._refresh = undefined;
        this._search = this._query(query, __assign({}, this.filters()));
        return this.first();
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.first = /**
     * @return {?}
     */
    function () {
        return this.paginate(this._search, {
            size: this._size,
            before: undefined,
            after: undefined,
        });
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.previous = /**
     * @return {?}
     */
    function () {
        return this.paginate(this._search, {
            size: this._size,
            after: undefined,
            before: this._response.before,
        });
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.next = /**
     * @return {?}
     */
    function () {
        return this.paginate(this._search, {
            size: this._size,
            after: this._response.after,
            before: undefined,
        });
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.last = /**
     * @return {?}
     */
    function () {
        return this.paginate(this._search, {
            size: this._size,
            after: this._last_after,
            before: undefined,
        });
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.refresh = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var promise;
        if (this.empty()) {
            if (this._response) {
                promise = this.previous();
            }
            else {
                promise = this.search();
            }
        }
        else {
            promise = this.paginate(this._search, this._refresh);
        }
        return promise.then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            event ? event.target.complete() : null;
            return response;
        }));
    };
    /**
     * @private
     * @param {?} set
     * @param {?=} opts
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.paginate = /**
     * @private
     * @param {?} set
     * @param {?=} opts
     * @return {?}
     */
    function (set, opts) {
        var _this = this;
        this._refresh = __assign({}, opts);
        /** @type {?} */
        var paginate = query.Paginate(set, opts);
        if (this._columns) {
            paginate = query.Map(paginate, (/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return _this._columns.reduce((/**
             * @param {?} select
             * @param {?} column
             * @param {?} index
             * @return {?}
             */
            function (select, column, index) { return (select[column] = query.Select(index + 1, item)) && select; }), {}); }));
        }
        return this._db.query((/**
         * @return {?}
         */
        function () { return paginate; }))
            .then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            if (_this._response && _this._response.after && !response.after) {
                _this._last_after = _this._response.after;
            }
            _this._response = response;
            _this.closeFilters();
        })).catch((/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this._ao.danger('Oops! Falha ao realizar a buscar :(', { error: error });
        }));
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.hasPrevious = /**
     * @return {?}
     */
    function () {
        return !!(this._response && this._response.before);
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.hasNext = /**
     * @return {?}
     */
    function () {
        return !!(this._response && this._response.after);
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.hasLast = /**
     * @return {?}
     */
    function () {
        return !!this._last_after;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.isFirst = /**
     * @return {?}
     */
    function () {
        return !this.hasPrevious();
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.isLast = /**
     * @return {?}
     */
    function () {
        return !this.hasNext();
    };
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.response = 
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this._response ? this._response : null;
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.items = /**
     * @return {?}
     */
    function () {
        return this._response && this._response.data ? this._response.data : [];
    };
    /**
     * @return {?}
     */
    AOFaunaDBPaginationHelper.prototype.empty = /**
     * @return {?}
     */
    function () {
        return this.items().length === 0;
    };
    return AOFaunaDBPaginationHelper;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._filters_show;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._filters_model;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._filters;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._query;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._columns;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._search;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._size;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._response;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._last_after;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._refresh;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._ao;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDBPaginationHelper.prototype._db;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/helpers/ao-tree.helpers.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AONodeItem = /** @class */ (function () {
    function AONodeItem() {
        this.level = 0;
        this.expanded = false;
    }
    /**
     * @return {?}
     */
    AONodeItem.prototype.isExpanded = /**
     * @return {?}
     */
    function () {
        return this.expanded;
    };
    /**
     * @return {?}
     */
    AONodeItem.prototype.isExpandable = /**
     * @return {?}
     */
    function () {
        return this.children.length > 0;
    };
    return AONodeItem;
}());
if (false) {
    /** @type {?} */
    AONodeItem.prototype.data;
    /** @type {?} */
    AONodeItem.prototype.level;
    /** @type {?} */
    AONodeItem.prototype.children;
    /** @type {?} */
    AONodeItem.prototype.expanded;
}
var AOTreeHelper = /** @class */ (function () {
    function AOTreeHelper(_zone) {
        this._zone = _zone;
        this.map = new Map();
        this.tree = [];
    }
    //--------------------------------------------------------------------------------------------------------------------
    // STATIC METHODS
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // STATIC METHODS
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} items
     * @param {?=} map
     * @param {?=} fk_name
     * @param {?=} pk_name
     * @return {?}
     */
    AOTreeHelper.listToTree = 
    //--------------------------------------------------------------------------------------------------------------------
    // STATIC METHODS
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} items
     * @param {?=} map
     * @param {?=} fk_name
     * @param {?=} pk_name
     * @return {?}
     */
    function (items, map, fk_name, pk_name) {
        if (fk_name === void 0) { fk_name = 'parent_id'; }
        if (pk_name === void 0) { pk_name = 'id'; }
        //
        // inicializa o map, se ainda nao tiver sido inicializado
        //
        if (map == undefined) {
            map = new Map();
        }
        //
        // funcao para criar todos os nodes necessarios
        //
        /** @type {?} */
        var create = (/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            /** @type {?} */
            var node = map.get(data[pk_name]);
            if (node == undefined) {
                node = new AONodeItem();
            }
            node.data = data;
            node.children = [];
            map.set(data[pk_name], node);
            return node;
        });
        //
        // aninha todos os nodes do map
        //
        /** @type {?} */
        var nest = (/**
         * @param {?} root
         * @param {?} node
         * @return {?}
         */
        function (root, node) {
            /** @type {?} */
            var parent = node.data[fk_name] ? map.get(node.data[fk_name]) : undefined;
            if (parent) {
                node.level = parent.level + 1;
                parent.children.push(node);
            }
            else {
                root.push(node);
            }
            return root;
        });
        return {
            map: map, tree: items.map(create).reduce(nest, [])
        };
    };
    /**
     * @param {?} tree
     * @return {?}
     */
    AOTreeHelper.flatTree = /**
     * @param {?} tree
     * @return {?}
     */
    function (tree) {
        /** @type {?} */
        var flat = (/**
         * @param {?} nodes
         * @param {?} node
         * @return {?}
         */
        function (nodes, node) {
            nodes.push(node);
            return node.children.length > 0
                ? node.children.reduce(flat, nodes)
                : nodes;
        });
        return tree.reduce(flat, []);
    };
    //--------------------------------------------------------------------------------------------------------------------
    // OBJECT METHODS
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // OBJECT METHODS
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} items
     * @return {?}
     */
    AOTreeHelper.prototype.setItems = 
    //--------------------------------------------------------------------------------------------------------------------
    // OBJECT METHODS
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        var _this = this;
        this._zone.run((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var response = AOTreeHelper.listToTree(items, _this.map);
            _this.map = response.map;
            _this.tree = response.tree;
        }));
    };
    /**
     * @return {?}
     */
    AOTreeHelper.prototype.getRoot = /**
     * @return {?}
     */
    function () {
        return this.tree;
    };
    ;
    /**
     * @param {?=} node
     * @return {?}
     */
    AOTreeHelper.prototype.getChildren = /**
     * @param {?=} node
     * @return {?}
     */
    function (node) {
        return node ? node.children : this.getRoot();
    };
    ;
    /**
     * @param {?=} node
     * @return {?}
     */
    AOTreeHelper.prototype.getDescendants = /**
     * @param {?=} node
     * @return {?}
     */
    function (node) {
        return AOTreeHelper.flatTree(node ? node.children : this.getRoot());
    };
    ;
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.getParent = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        return this.map.get(node.data.parent_id);
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.getParents = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        /** @type {?} */
        var parent = this.getParent(node);
        return parent ? __spread([parent], this.getParents(parent)) : [];
    };
    /**
     * @param {?=} node
     * @return {?}
     */
    AOTreeHelper.prototype.getBrothers = /**
     * @param {?=} node
     * @return {?}
     */
    function (node) {
        /** @type {?} */
        var parent = this.getParent(node);
        return parent ? parent.children : this.getRoot();
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.isVisible = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        /** @type {?} */
        var parent = this.getParent(node);
        return parent ? parent.expanded : true;
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.tootle = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        if (node.expanded) {
            __spread([node], this.getDescendants(node)).map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.expanded = false; }));
        }
        else {
            node.expanded = true;
        }
        return node.expanded;
    };
    /**
     * @return {?}
     */
    AOTreeHelper.prototype.expandAll = /**
     * @return {?}
     */
    function () {
        this.getDescendants().map((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n.expanded = true; }));
    };
    /**
     * @return {?}
     */
    AOTreeHelper.prototype.contractAll = /**
     * @return {?}
     */
    function () {
        this.getDescendants().map((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n.expanded = false; }));
    };
    /**
     * @param {?=} node
     * @return {?}
     */
    AOTreeHelper.prototype.getNextOrder = /**
     * @param {?=} node
     * @return {?}
     */
    function (node) {
        /** @type {?} */
        var children = this.getChildren(node);
        return children.length === 0 ? 0 : children.slice(-1)[0].data.order + 1;
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.getNavigate = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        /** @type {?} */
        var brothers = this.getBrothers(node);
        /** @type {?} */
        var locate = (/**
         * @param {?} navigate
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        function (navigate, item, index) {
            if (node.data.id === item.data.id) {
                navigate.previous = index > 0 ? brothers[index - 1] : null;
                navigate.next = index < brothers.length ? brothers[index + 1] : null;
            }
            return navigate;
        });
        return brothers.reduce(locate, { previous: null, current: node, next: null });
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.getPrevious = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        return this.getNavigate(node).previous;
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AOTreeHelper.prototype.getNext = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        return this.getNavigate(node).next;
    };
    return AOTreeHelper;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOTreeHelper.prototype.map;
    /**
     * @type {?}
     * @private
     */
    AOTreeHelper.prototype.tree;
    /**
     * @type {?}
     * @private
     */
    AOTreeHelper.prototype._zone;
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/interfaces/ao-module-env.interface.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
function AOModuleEnvInterface() { }
if (false) {
    /** @type {?} */
    AOModuleEnvInterface.prototype.production;
    /** @type {?} */
    AOModuleEnvInterface.prototype.faunadb;
    /** @type {?} */
    AOModuleEnvInterface.prototype.firebase;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/pipes/ao-ln2br.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AONl2BrPipe = /** @class */ (function () {
    function AONl2BrPipe(_sanitizer) {
        this._sanitizer = _sanitizer;
    }
    /**
     * @param {?} value
     * @param {?=} sanitizeBeforehand
     * @return {?}
     */
    AONl2BrPipe.prototype.transform = /**
     * @param {?} value
     * @param {?=} sanitizeBeforehand
     * @return {?}
     */
    function (value, sanitizeBeforehand) {
        /** @type {?} */
        var parsed = value.replace(/(?:\r\n|\r|\n)/g, '<br />');
        if (!VERSION || VERSION.major === '2') {
            return this._sanitizer.bypassSecurityTrustHtml(parsed);
        }
        else if (sanitizeBeforehand) {
            return this._sanitizer.sanitize(SecurityContext.HTML, parsed);
        }
        return parsed;
    };
    AONl2BrPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'AONl2br'
                },] }
    ];
    /** @nocollapse */
    AONl2BrPipe.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    return AONl2BrPipe;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AONl2BrPipe.prototype._sanitizer;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-firebase-connection.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOFirebaseConnectionService = /** @class */ (function () {
    function AOFirebaseConnectionService(_name, _hash, _app, _zone) {
        this._name = _name;
        this._hash = _hash;
        this._app = _app;
        this._zone = _zone;
        this._configs = {};
    }
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.app = /**
     * @return {?}
     */
    function () {
        return this._app;
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.name = /**
     * @return {?}
     */
    function () {
        return this._name;
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.hash = /**
     * @return {?}
     */
    function () {
        return this._hash;
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.auth = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this._auth
            ? this._auth
            : this._auth = new AngularFireAuth(this._configs, this._name, null, this._zone);
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.database = /**
     * @return {?}
     */
    function () {
        return this._database
            ? this._database
            : this._database = new AngularFireDatabase(this._configs, this._name, null, null, this._zone);
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.firestore = /**
     * @return {?}
     */
    function () {
        return this._firestore
            ? this._firestore
            : this._firestore = new AngularFirestore(this._configs, this._name, null, null, null, this._zone, null);
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.messaging = /**
     * @return {?}
     */
    function () {
        return this._messaging
            ? this._messaging
            : this._messaging = new AngularFireMessaging(this._configs, this._name, null, this._zone);
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.storage = /**
     * @return {?}
     */
    function () {
        return this._storage
            ? this._storage
            : this._storage = new AngularFireStorage(this._configs, this._name, null, null, this._zone);
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.logout = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this._auth) return [3 /*break*/, 4];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this._auth.auth.signOut()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        e_1 = _a.sent();
                        console.warn('Oops! Failed to run signOut.');
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/, Promise.resolve(true)];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    AOFirebaseConnectionService.prototype.destroy = /**
     * @return {?}
     */
    function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.logout()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this._app.delete()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, Promise.resolve(true)];
                }
            });
        });
    };
    return AOFirebaseConnectionService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._configs;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._auth;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._database;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._firestore;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._messaging;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._storage;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._name;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._hash;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._app;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._zone;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-env.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var AOEnvService = new InjectionToken('AOModuleEnvInterface');

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-firebase-factory.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOFirebaseFactoryService = /** @class */ (function () {
    function AOFirebaseFactoryService(_app, _zone, _environment) {
        this._app = _app;
        this._zone = _zone;
        this._environment = _environment;
        this.connections = {};
        this.factory(this._environment.firebase.name, this._environment.firebase.configs, this._app);
    }
    /**
     * @param {?=} name
     * @return {?}
     */
    AOFirebaseFactoryService.prototype.conn = /**
     * @param {?=} name
     * @return {?}
     */
    function (name) {
        if (this.connections[name]) {
            return this.connections[name];
        }
        throw new Error('FirebaseApp(' + name + ') not found.');
    };
    /**
     * @param {?} configs
     * @return {?}
     */
    AOFirebaseFactoryService.prototype.makeHash = /**
     * @param {?} configs
     * @return {?}
     */
    function (configs) {
        return JSON.stringify({
            projectId: configs.projectId,
            apiKey: configs.apiKey
        });
    };
    /**
     * @param {?} name
     * @param {?=} configs
     * @param {?=} app
     * @return {?}
     */
    AOFirebaseFactoryService.prototype.factory = /**
     * @param {?} name
     * @param {?=} configs
     * @param {?=} app
     * @return {?}
     */
    function (name, configs, app) {
        return __awaiter(this, void 0, void 0, function () {
            var hash;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        hash = this.makeHash(configs);
                        if (!this.connections[name]) return [3 /*break*/, 3];
                        if (!(this.connections[name].hash() === hash)) return [3 /*break*/, 1];
                        return [2 /*return*/, Promise.resolve(true)];
                    case 1: return [4 /*yield*/, this.connections[name].destroy()];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        if (!app) {
                            app = _firebaseAppFactory((/** @type {?} */ (configs)), this._zone, name);
                        }
                        this.connections[name] = new AOFirebaseConnectionService(name, hash, app, this._zone);
                        return [2 /*return*/, Promise.resolve(true)];
                }
            });
        });
    };
    /**
     * @param {?=} only
     * @param {?=} except
     * @return {?}
     */
    AOFirebaseFactoryService.prototype.destroy = /**
     * @param {?=} only
     * @param {?=} except
     * @return {?}
     */
    function (only, except) {
        if (only === void 0) { only = []; }
        if (except === void 0) { except = ['master']; }
        return __awaiter(this, void 0, void 0, function () {
            var promises;
            var _this = this;
            return __generator(this, function (_a) {
                if (only.length === 0) {
                    only = Object.keys(this.connections);
                }
                promises = [];
                Object.keys(this.connections).forEach((/**
                 * @param {?} name
                 * @return {?}
                 */
                function (name) {
                    if (only.indexOf(name) >= 0 && except.indexOf(name) === -1) {
                        promises.push(_this.conn(name).destroy());
                    }
                }));
                return [2 /*return*/, Promise.all(promises).then((/**
                     * @return {?}
                     */
                    function () { return true; }))];
            });
        });
    };
    AOFirebaseFactoryService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOFirebaseFactoryService.ctorParameters = function () { return [
        { type: FirebaseApp },
        { type: NgZone },
        { type: undefined, decorators: [{ type: Inject, args: [AOEnvService,] }] }
    ]; };
    /** @nocollapse */ AOFirebaseFactoryService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOFirebaseFactoryService_Factory() { return new AOFirebaseFactoryService(ɵɵinject(FirebaseApp), ɵɵinject(NgZone), ɵɵinject(AOEnvService)); }, token: AOFirebaseFactoryService, providedIn: "root" });
    return AOFirebaseFactoryService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOFirebaseFactoryService.prototype.connections;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseFactoryService.prototype._app;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseFactoryService.prototype._zone;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseFactoryService.prototype._environment;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-firebase.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOFirebaseService = /** @class */ (function () {
    function AOFirebaseService(_firebase) {
        this._firebase = _firebase;
        this._name = 'master';
    }
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.firebase = /**
     * @return {?}
     */
    function () {
        return this._firebase;
    };
    /**
     * @param {?} configs
     * @return {?}
     */
    AOFirebaseService.prototype.factory = /**
     * @param {?} configs
     * @return {?}
     */
    function (configs) {
        return this._firebase.factory(this.name(), configs);
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.conn = /**
     * @return {?}
     */
    function () {
        return this._firebase.conn(this.name());
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.name = /**
     * @return {?}
     */
    function () {
        return this._name;
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.hash = /**
     * @return {?}
     */
    function () {
        return this.conn().hash();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.app = /**
     * @return {?}
     */
    function () {
        return this.conn().app();
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.auth = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this.conn().auth();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.authState = /**
     * @return {?}
     */
    function () {
        return this.auth().authState;
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.db = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this.conn().database();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.dbNow = /**
     * @return {?}
     */
    function () {
        return database.ServerValue.TIMESTAMP;
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.fs = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this.conn().firestore();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.fsId = /**
     * @return {?}
     */
    function () {
        return this.fs().createId();
    };
    /**
     * @template T
     * @param {?} path
     * @return {?}
     */
    AOFirebaseService.prototype.fsDoc = /**
     * @template T
     * @param {?} path
     * @return {?}
     */
    function (path) {
        return this.fs().doc(path);
    };
    /**
     * @param {?} path
     * @return {?}
     */
    AOFirebaseService.prototype.fsDocValue = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        return this.fsDoc(path).valueChanges();
    };
    /**
     * @param {?} path
     * @return {?}
     */
    AOFirebaseService.prototype.fsDocSnapshot = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        return this.fs().doc(path).snapshotChanges();
    };
    /**
     * @param {?} path
     * @param {?} data
     * @param {?=} options
     * @return {?}
     */
    AOFirebaseService.prototype.fsDocSet = /**
     * @param {?} path
     * @param {?} data
     * @param {?=} options
     * @return {?}
     */
    function (path, data, options) {
        if (options === void 0) { options = { merge: true }; }
        return this.fs().doc(path).set(data, options);
    };
    /**
     * @template T
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    AOFirebaseService.prototype.fsCol = /**
     * @template T
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    function (path, queryFn) {
        return this.fs().collection(path, queryFn);
    };
    /**
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    AOFirebaseService.prototype.fsColValues = /**
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    function (path, queryFn) {
        return this.fsCol(path, queryFn).valueChanges();
    };
    /**
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    AOFirebaseService.prototype.fsColSnapshot = /**
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    function (path, queryFn) {
        return this.fsCol(path, queryFn).snapshotChanges();
    };
    /**
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    AOFirebaseService.prototype.fsColState = /**
     * @param {?} path
     * @param {?=} queryFn
     * @return {?}
     */
    function (path, queryFn) {
        return this.fsCol(path, queryFn).stateChanges();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.fsBatch = /**
     * @return {?}
     */
    function () {
        return this.fs().firestore.batch();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.fsNow = /**
     * @return {?}
     */
    function () {
        return firestore.FieldValue.serverTimestamp();
    };
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.fsTimestamp = /**
     * @return {?}
     */
    function () {
        return firestore.Timestamp;
    };
    // fsToMilliseconds(item, field) {
    //   if (item[field] instanceof Timestamp) {
    //     item[field] = (new Date(item[field].seconds * 1000 + item[field].nanoseconds / 1000000)).getTime();
    //   }
    // }
    // fsAddMilliseconds(date) {
    //   date.milliseconds = (new Date(date.seconds * 1000 + date.nanoseconds / 1000000)).getTime();
    //   return date;
    // }
    // fsTransaction<T>(updateFunction: (transaction: firebase.firestore.Timestamp) => Promise<T>): Promise<T> {
    //   return this.fs().firestore.runTransaction(updateFunction);
    // }
    // fsCounter(path, field = 'count', qt = 1) {
    //   return this.fsTransaction(transaction => {
    //     const ref = this.fsDoc(path).ref;
    //     return transaction.get(ref).then((doc) => {
    //
    //       const update = {};
    //
    //       if (doc.exists) {
    //         const value = parseInt(doc.get(field), 10);
    //         qt = value >= 0 || value <= 0 ? qt + value : qt;
    //       }
    //
    //       update[field] = qt;
    //
    //       transaction.set(ref, update, {merge: true});
    //
    //     });
    //   });
    // }
    // fsUp(path, field = 'count') {
    //   return this.fsCounter(path, field, 1);
    // }
    // fsDown(path, field = 'count') {
    //   return this.fsCounter(path, field, -1);
    // }
    // -------------------------------------------------------------------------------------------------------------------
    // fsToMilliseconds(item, field) {
    //   if (item[field] instanceof Timestamp) {
    //     item[field] = (new Date(item[field].seconds * 1000 + item[field].nanoseconds / 1000000)).getTime();
    //   }
    // }
    // fsAddMilliseconds(date) {
    //   date.milliseconds = (new Date(date.seconds * 1000 + date.nanoseconds / 1000000)).getTime();
    //   return date;
    // }
    // fsTransaction<T>(updateFunction: (transaction: firebase.firestore.Timestamp) => Promise<T>): Promise<T> {
    //   return this.fs().firestore.runTransaction(updateFunction);
    // }
    // fsCounter(path, field = 'count', qt = 1) {
    //   return this.fsTransaction(transaction => {
    //     const ref = this.fsDoc(path).ref;
    //     return transaction.get(ref).then((doc) => {
    //
    //       const update = {};
    //
    //       if (doc.exists) {
    //         const value = parseInt(doc.get(field), 10);
    //         qt = value >= 0 || value <= 0 ? qt + value : qt;
    //       }
    //
    //       update[field] = qt;
    //
    //       transaction.set(ref, update, {merge: true});
    //
    //     });
    //   });
    // }
    // fsUp(path, field = 'count') {
    //   return this.fsCounter(path, field, 1);
    // }
    // fsDown(path, field = 'count') {
    //   return this.fsCounter(path, field, -1);
    // }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.msn = 
    // fsToMilliseconds(item, field) {
    //   if (item[field] instanceof Timestamp) {
    //     item[field] = (new Date(item[field].seconds * 1000 + item[field].nanoseconds / 1000000)).getTime();
    //   }
    // }
    // fsAddMilliseconds(date) {
    //   date.milliseconds = (new Date(date.seconds * 1000 + date.nanoseconds / 1000000)).getTime();
    //   return date;
    // }
    // fsTransaction<T>(updateFunction: (transaction: firebase.firestore.Timestamp) => Promise<T>): Promise<T> {
    //   return this.fs().firestore.runTransaction(updateFunction);
    // }
    // fsCounter(path, field = 'count', qt = 1) {
    //   return this.fsTransaction(transaction => {
    //     const ref = this.fsDoc(path).ref;
    //     return transaction.get(ref).then((doc) => {
    //
    //       const update = {};
    //
    //       if (doc.exists) {
    //         const value = parseInt(doc.get(field), 10);
    //         qt = value >= 0 || value <= 0 ? qt + value : qt;
    //       }
    //
    //       update[field] = qt;
    //
    //       transaction.set(ref, update, {merge: true});
    //
    //     });
    //   });
    // }
    // fsUp(path, field = 'count') {
    //   return this.fsCounter(path, field, 1);
    // }
    // fsDown(path, field = 'count') {
    //   return this.fsCounter(path, field, -1);
    // }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this.conn().messaging();
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    AOFirebaseService.prototype.disk = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        return this.conn().storage();
    };
    AOFirebaseService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOFirebaseService.ctorParameters = function () { return [
        { type: AOFirebaseFactoryService }
    ]; };
    /** @nocollapse */ AOFirebaseService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOFirebaseService_Factory() { return new AOFirebaseService(ɵɵinject(AOFirebaseFactoryService)); }, token: AOFirebaseService, providedIn: "root" });
    return AOFirebaseService;
}());
if (false) {
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseService.prototype._name;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseService.prototype._firebase;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-auth-firebase.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOAuthFirebaseService = /** @class */ (function () {
    function AOAuthFirebaseService(_auth, _fb, _env) {
        this._auth = _auth;
        this._fb = _fb;
        this._env = _env;
        this._subscriptions = new AOSubscriptions();
        registerWebPlugin(OAuth2Client);
        this._auth.provider(this);
        this._auth.isUser() ? this.authListening() : null;
    }
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.login = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        this._subscriptions.stop();
        /** @type {?} */
        var promise = new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
            var oauth, credential, auth$1, user, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 12, , 13]);
                        oauth = null;
                        credential = null;
                        if (!(data.provider instanceof auth.GoogleAuthProvider)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.loginGoogle()];
                    case 1:
                        oauth = _a.sent();
                        credential = auth.GoogleAuthProvider.credential(null, oauth.access_token);
                        return [3 /*break*/, 9];
                    case 2:
                        if (!(data.provider instanceof auth.FacebookAuthProvider)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.loginFacebook()];
                    case 3:
                        oauth = _a.sent();
                        credential = auth.FacebookAuthProvider.credential(oauth.access_token);
                        return [3 /*break*/, 9];
                    case 4:
                        if (!(data.provider instanceof auth.TwitterAuthProvider)) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.loginTwitter()];
                    case 5:
                        oauth = _a.sent();
                        credential = auth.TwitterAuthProvider.credential(oauth.access_token, '');
                        return [3 /*break*/, 9];
                    case 6:
                        if (!(data.provider instanceof auth.GithubAuthProvider)) return [3 /*break*/, 8];
                        return [4 /*yield*/, this.loginGithub()];
                    case 7:
                        oauth = _a.sent();
                        credential = auth.GithubAuthProvider.credential(oauth.access_token);
                        return [3 /*break*/, 9];
                    case 8:
                        reject('Invalid Auth Provider.');
                        _a.label = 9;
                    case 9: return [4 /*yield*/, this._fb.auth().auth.signInWithCredential(credential)];
                    case 10:
                        auth$1 = _a.sent();
                        return [4 /*yield*/, this.userCreateOrUpdate(auth$1.user, {
                                given_name: oauth.given_name,
                                family_name: oauth.family_name,
                                locale: oauth.locale,
                            })];
                    case 11:
                        user = _a.sent();
                        resolve(user);
                        return [3 /*break*/, 13];
                    case 12:
                        e_1 = _a.sent();
                        reject(e_1);
                        return [3 /*break*/, 13];
                    case 13: return [2 /*return*/];
                }
            });
        }); }));
        promise.finally((/**
         * @return {?}
         */
        function () { return _this.authListening(true); }));
        return promise;
    };
    /**
     * @return {?}
     */
    AOAuthFirebaseService.prototype.logout = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._subscriptions.stop();
        return this._fb.firebase().destroy().then((/**
         * @return {?}
         */
        function () { return _this._fb.conn().logout(); }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.update = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.forgetPassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.resetPassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.updatePassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginGoogle = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @private
     * @return {?}
     */
    function () {
        return Plugins.OAuth2Client.authenticate({
            scope: 'email profile',
            authorizationBaseUrl: 'https://accounts.google.com/o/oauth2/auth',
            resourceUrl: 'https://www.googleapis.com/userinfo/v2/me',
            accessTokenEndpoint: 'https://www.googleapis.com/oauth2/v4/token',
            web: {
                appId: this._env.oauth.google.web,
                responseType: 'token',
                redirectUrl: this._env.app_url,
                accessTokenEndpoint: '',
                pkceEnable: false,
                windowOptions: 'height=500,left=0,top=0',
            },
            android: {
                appId: this._env.oauth.google.android,
                responseType: 'code',
                // if you configured a android app in google dev console the value must be "code"
                redirectUrl: this._env.app_id + ':/' // package name from google dev console
            },
            ios: {
                appId: this._env.oauth.google.ios,
                responseType: 'code',
                // if you configured a ios app in google dev console the value must be "code"
                redirectUrl: this._env.app_id + ':/' // Bundle ID from google dev console
            }
        });
    };
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginFacebook = /**
     * @private
     * @return {?}
     */
    function () {
        return this.loginGoogle();
    };
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginTwitter = /**
     * @private
     * @return {?}
     */
    function () {
        return this.loginGoogle();
    };
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginGithub = /**
     * @private
     * @return {?}
     */
    function () {
        return this.loginGoogle();
    };
    /**
     * @private
     * @param {?=} skip
     * @return {?}
     */
    AOAuthFirebaseService.prototype.authListening = /**
     * @private
     * @param {?=} skip
     * @return {?}
     */
    function (skip) {
        var _this = this;
        if (skip === void 0) { skip = false; }
        this._subscriptions.stop();
        this._subscriptions.auth = this._fb.authState().subscribe((/**
         * @param {?} auth
         * @return {?}
         */
        function (auth) { return __awaiter(_this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!auth) return [3 /*break*/, 3];
                        if (!(skip === false)) return [3 /*break*/, 2];
                        skip = false;
                        return [4 /*yield*/, this.userCreateOrUpdate(auth)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this._subscriptions.user = this._fb.fsDocSnapshot('/users/' + auth.uid).subscribe((/**
                         * @param {?} snapshot
                         * @return {?}
                         */
                        function (snapshot) {
                            return snapshot.payload.exists
                                ? _this._auth.setUser(snapshot.payload.data())
                                : _this._auth.logout();
                        }), (/**
                         * @return {?}
                         */
                        function () {
                            console.warn('Oops! Failed to watch user.');
                        }));
                        return [3 /*break*/, 4];
                    case 3: return [2 /*return*/, this._auth.logout()];
                    case 4: return [2 /*return*/];
                }
            });
        }); }), (/**
         * @return {?}
         */
        function () {
            console.warn('Oops! Failed to update authentication.');
        }));
    };
    /**
     * @private
     * @param {?} user
     * @param {?=} extra
     * @return {?}
     */
    AOAuthFirebaseService.prototype.userCreateOrUpdate = /**
     * @private
     * @param {?} user
     * @param {?=} extra
     * @return {?}
     */
    function (user, extra) {
        if (extra === void 0) { extra = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var userRef, userDoc, data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        userRef = this._fb.fsDoc('/users/' + user.uid);
                        return [4 /*yield*/, userRef.ref.get()];
                    case 1:
                        userDoc = _a.sent();
                        data = __assign({}, userDoc.data(), { id: user.uid, email: user.email, email_verified: user.emailVerified, name: user.displayName, image: user.photoURL, logged_at: this._fb.fsNow() }, extra);
                        if (!userDoc.exists) {
                            data.active = true;
                            data.created_at = this._fb.fsNow();
                            data.updated_at = this._fb.fsNow();
                            data.deleted_at = null;
                        }
                        return [4 /*yield*/, userRef.set(data, { merge: true })];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, userRef.ref.get()];
                    case 3: return [2 /*return*/, (_a.sent()).data()];
                }
            });
        });
    };
    AOAuthFirebaseService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOAuthFirebaseService.ctorParameters = function () { return [
        { type: AOAuthService },
        { type: AOFirebaseService },
        { type: undefined, decorators: [{ type: Inject, args: [AOEnvService,] }] }
    ]; };
    /** @nocollapse */ AOAuthFirebaseService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOAuthFirebaseService_Factory() { return new AOAuthFirebaseService(ɵɵinject(AOAuthService), ɵɵinject(AOFirebaseService), ɵɵinject(AOEnvService)); }, token: AOAuthFirebaseService, providedIn: "root" });
    return AOAuthFirebaseService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._subscriptions;
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._auth;
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._fb;
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._env;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-auth-oauth.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOAuthOauthService = /** @class */ (function () {
    function AOAuthOauthService() {
    }
    AOAuthOauthService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ AOAuthOauthService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOAuthOauthService_Factory() { return new AOAuthOauthService(); }, token: AOAuthOauthService, providedIn: "root" });
    return AOAuthOauthService;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-auth-provider.interface.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
function AOAuthProviderInterface() { }
if (false) {
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthProviderInterface.prototype.login = function (data) { };
    /**
     * @return {?}
     */
    AOAuthProviderInterface.prototype.logout = function () { };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthProviderInterface.prototype.update = function (data) { };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthProviderInterface.prototype.forgetPassword = function (data) { };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthProviderInterface.prototype.resetPassword = function (data) { };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthProviderInterface.prototype.updatePassword = function (data) { };
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-cache.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @Injectable({
//   providedIn: 'root'
// })
var  
// @Injectable({
//   providedIn: 'root'
// })
AOCacheService = /** @class */ (function () {
    function AOCacheService(_db, _storage) {
        this._db = _db;
        this._storage = _storage;
        this._configs = {
            type: 'full',
            // none|local|server|full
            expire: ((24 * 60 * 60) * 1000),
            metadata: {},
        };
    }
    /**
     * @param {?} params
     * @param {?} request
     * @param {?=} configs
     * @return {?}
     */
    AOCacheService.prototype.find = /**
     * @param {?} params
     * @param {?} request
     * @param {?=} configs
     * @return {?}
     */
    function (params, request, configs) {
        var _this = this;
        if (configs === void 0) { configs = {}; }
        configs = (typeof configs === 'object') ? __assign({}, this._configs, configs) : __assign({}, this._configs);
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
            var key, cached;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        params = JSON.stringify(params);
                        key = Md5.hashStr(params);
                        return [4 /*yield*/, this.get(key, configs)];
                    case 1:
                        cached = _a.sent();
                        if (cached) {
                            return [2 /*return*/, resolve(cached)];
                        }
                        request().then((/**
                         * @param {?} response
                         * @return {?}
                         */
                        function (response) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.set(key, params, response, configs)];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/, resolve(response)];
                                }
                            });
                        }); }));
                        return [2 /*return*/];
                }
            });
        }); }));
    };
    /**
     * @param {?} key
     * @param {?} configs
     * @return {?}
     */
    AOCacheService.prototype.get = /**
     * @param {?} key
     * @param {?} configs
     * @return {?}
     */
    function (key, configs) {
        return __awaiter(this, void 0, void 0, function () {
            var response, response_updated_at;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log('Cache::get', key);
                        response = this._storage.retrieve(key);
                        response_updated_at = this._storage.retrieve(key + '_updated_at');
                        if (response != null
                            && response_updated_at != null
                            && (Date.now() - response_updated_at) <= configs.expire) {
                            return [2 /*return*/, JSON.parse(response)];
                        }
                        return [4 /*yield*/, this.getInServer(key, configs)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * @param {?} key
     * @param {?} configs
     * @return {?}
     */
    AOCacheService.prototype.getInServer = /**
     * @param {?} key
     * @param {?} configs
     * @return {?}
     */
    function (key, configs) {
        return __awaiter(this, void 0, void 0, function () {
            var cached, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        cached = null;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this._db.query((/**
                             * @param {?} q
                             * @return {?}
                             */
                            function (q) { return q.Get(q.Match(q.Index('cache_by_key'), key)); }))];
                    case 2:
                        cached = _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        e_1 = _a.sent();
                        return [2 /*return*/, null];
                    case 4:
                        this._storage.store(key, cached.data.response);
                        this._storage.store(key + '_updated_at', cached.data.updated_at);
                        if ((Date.now() - cached.data.updated_at) > configs.expire) {
                            return [2 /*return*/, null];
                        }
                        return [2 /*return*/, JSON.parse(cached.data.response)];
                }
            });
        });
    };
    /**
     * @param {?} key
     * @param {?} request
     * @param {?} response
     * @param {?} configs
     * @return {?}
     */
    AOCacheService.prototype.set = /**
     * @param {?} key
     * @param {?} request
     * @param {?} response
     * @param {?} configs
     * @return {?}
     */
    function (key, request, response, configs) {
        /** @type {?} */
        var data = {
            key: key,
            request: request,
            response: JSON.stringify(response),
            updated_at: Date.now(),
            metadata: configs.metadata
        };
        this._storage.store(key, data.response);
        this._storage.store(key + '_updated_at', data.updated_at);
        return this.setInServer(key, data);
    };
    /**
     * @param {?} key
     * @param {?} data
     * @return {?}
     */
    AOCacheService.prototype.setInServer = /**
     * @param {?} key
     * @param {?} data
     * @return {?}
     */
    function (key, data) {
        return this._db.query((/**
         * @param {?} q
         * @return {?}
         */
        function (q) { return q.If(q.Exists(q.Match(q.Index('cache_by_key'), key)), q.Update(q.Select(['ref'], q.Get(q.Match(q.Index('cache_by_key'), key))), { data: __assign({}, data) }), q.Create(q.Collection('cache'), { data: __assign({}, data, { created_at: Date.now() }) })); }));
    };
    return AOCacheService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOCacheService.prototype._configs;
    /**
     * @type {?}
     * @private
     */
    AOCacheService.prototype._db;
    /**
     * @type {?}
     * @private
     */
    AOCacheService.prototype._storage;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-fauna-db.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var _q = query;
// @dynamic
var AOFaunaDbService = /** @class */ (function () {
    // -------------------------------------------------------------------------------------------------------------------
    function AOFaunaDbService(_ao, _storage, _environment) {
        var _this = this;
        this._ao = _ao;
        this._storage = _storage;
        this._environment = _environment;
        this.q = _q;
        this._observer = new EventEmitter();
        this._cache = new AOCacheService(this, this._storage);
        this._client = new Client({
            secret: this._environment.faunadb.secret,
            observer: (/**
             * @param {?} res
             * @return {?}
             */
            function (res) { return _this._observer.emit(res); })
        });
    }
    /**
     * @return {?}
     */
    AOFaunaDbService.prototype.client = /**
     * @return {?}
     */
    function () {
        return this._client;
    };
    //--------------------------------------------------------------------------------------------------------------------
    // EXPRESSION
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // EXPRESSION
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} table
     * @param {?=} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Ref = 
    //--------------------------------------------------------------------------------------------------------------------
    // EXPRESSION
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} table
     * @param {?=} id
     * @return {?}
     */
    function (table, id) {
        return id ? _q.Ref(_q.Collection(table), id) : null;
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Get = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        return _q.Get(_q.Ref(_q.Collection(table), id));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Create = /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    function (table, data, id) {
        if (id === void 0) { id = null; }
        return _q.Let({
            id: id ? id : _q.NewId()
        }, _q.Create(_q.Ref(_q.Collection(table), _q.Var('id')), {
            data: __assign({ is_activated: true }, data, { id: _q.Var('id'), created_at: Date.now(), updated_at: Date.now(), deleted_at: null })
        }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Update = /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    function (table, data, id) {
        return _q.Update(_q.Ref(_q.Collection(table), id), {
            data: __assign({}, data, { id: id, updated_at: Date.now() })
        });
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Delete = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        return _q.Delete(_q.Ref(_q.Collection(table), id));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // RESOURCES
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // RESOURCES
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} callback
     * @param {?=} configs
     * @return {?}
     */
    AOFaunaDbService.prototype.query = 
    //--------------------------------------------------------------------------------------------------------------------
    // RESOURCES
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} callback
     * @param {?=} configs
     * @return {?}
     */
    function (callback, configs) {
        var _this = this;
        if (configs === void 0) { configs = {}; }
        /** @type {?} */
        var promise = new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
            var params, request;
            var _this = this;
            return __generator(this, function (_a) {
                params = callback(_q);
                request = configs.cache
                    ? this._cache.find(params, (/**
                     * @return {?}
                     */
                    function () { return _this.client().query(params); }), configs.cache)
                    : this.client().query(params);
                request.then((/**
                 * @param {?} response
                 * @return {?}
                 */
                function (response) { return resolve(response); }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) { return reject(error); }));
                return [2 /*return*/];
            });
        }); }));
        return this._ao.wait(promise);
    };
    /**
     * @return {?}
     */
    AOFaunaDbService.prototype.id = /**
     * @return {?}
     */
    function () {
        return this.query((/**
         * @param {?} q
         * @return {?}
         */
        function (q) { return q.NewId(); }));
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.find = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        var _this = this;
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Get(table, id); }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    AOFaunaDbService.prototype.insert = /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    function (table, data, id) {
        var _this = this;
        if (id === void 0) { id = null; }
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Create(table, data, id); }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.upgrade = /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    function (table, data, id) {
        var _this = this;
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Update(table, data, id); }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @return {?}
     */
    AOFaunaDbService.prototype.save = /**
     * @param {?} table
     * @param {?} data
     * @return {?}
     */
    function (table, data) {
        return data.id
            ? this.upgrade(table, data, data.id)
            : this.insert(table, data);
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.destroy = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        var _this = this;
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Delete(table, id); }));
    };
    AOFaunaDbService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOFaunaDbService.ctorParameters = function () { return [
        { type: AOService },
        { type: LocalStorageService },
        { type: undefined, decorators: [{ type: Inject, args: [AOEnvService,] }] }
    ]; };
    /** @nocollapse */ AOFaunaDbService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOFaunaDbService_Factory() { return new AOFaunaDbService(ɵɵinject(AOService), ɵɵinject(LocalStorageService), ɵɵinject(AOEnvService)); }, token: AOFaunaDbService, providedIn: "root" });
    return AOFaunaDbService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._client;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._cache;
    /** @type {?} */
    AOFaunaDbService.prototype.q;
    /** @type {?} */
    AOFaunaDbService.prototype._observer;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._ao;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._storage;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._environment;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-firebase-slave.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOFirebaseSlaveService = /** @class */ (function (_super) {
    __extends(AOFirebaseSlaveService, _super);
    function AOFirebaseSlaveService() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._name = 'slave';
        return _this;
    }
    AOFirebaseSlaveService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ AOFirebaseSlaveService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AOFirebaseSlaveService_Factory() { return new AOFirebaseSlaveService(ɵɵinject(AOFirebaseFactoryService)); }, token: AOFirebaseSlaveService, providedIn: "root" });
    return AOFirebaseSlaveService;
}(AOFirebaseService));
if (false) {
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseSlaveService.prototype._name;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-array.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var  
// @dynamic
AOArray = /** @class */ (function () {
    function AOArray() {
    }
    /**
     * @param {?} items
     * @return {?}
     */
    AOArray.flat = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        var _this = this;
        return items.reduce((/**
         * @param {?} acc
         * @param {?} val
         * @return {?}
         */
        function (acc, val) { return Array.isArray(val) ? acc.concat(_this.flat(val)) : acc.concat(val); }), []);
    };
    /**
     * @param {?} array
     * @return {?}
     */
    AOArray.distict = /**
     * @param {?} array
     * @return {?}
     */
    function (array) {
        return array.filter((/**
         * @param {?} value
         * @param {?} index
         * @param {?} self
         * @return {?}
         */
        function (value, index, self) {
            return self.indexOf(value) === index;
        }));
    };
    /**
     * @param {?} items
     * @return {?}
     */
    AOArray.slug = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        return items.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return AOString.slug(item); }));
    };
    /**
     * @param {?} items
     * @return {?}
     */
    AOArray.keywords = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        return this.distict(this.flat(items).reduce((/**
         * @param {?} acc
         * @param {?} val
         * @return {?}
         */
        function (acc, val) { return acc.concat(AOString.keywords(val)); }), []));
    };
    return AOArray;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-fake.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var AOFake = /** @class */ (function () {
    function AOFake() {
    }
    /**
     * @param {?} value
     * @param {?=} decimals
     * @return {?}
     */
    AOFake.floorDecimal = /**
     * @param {?} value
     * @param {?=} decimals
     * @return {?}
     */
    function (value, decimals) {
        if (decimals === void 0) { decimals = 2; }
        return Math.floor(value * Math.pow(10, decimals)) / Math.pow(10, decimals);
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @param {?=} decimals
     * @return {?}
     */
    AOFake.randomFloat = /**
     * @param {?=} min
     * @param {?=} max
     * @param {?=} decimals
     * @return {?}
     */
    function (min, max, decimals) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 100; }
        if (decimals === void 0) { decimals = 2; }
        return Math.floor((min + (Math.random() * (max - min))) * Math.pow(10, decimals)) / Math.pow(10, decimals);
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomInteger = /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (min, max) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 100; }
        return Math.floor((min + (Math.random() * (max - min))) * Math.pow(10, 0)) / Math.pow(10, 0);
    };
    /**
     * @param {?=} chars
     * @return {?}
     */
    AOFake.randomChar = /**
     * @param {?=} chars
     * @return {?}
     */
    function (chars) {
        if (chars === void 0) { chars = 'qwertyuiopasdfghjklzxcvbnm1234567890'; }
        return chars.charAt(this.randomInteger(0, chars.length - 1));
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomWord = /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (min, max) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = 10; }
        /** @type {?} */
        var size = this.randomInteger(min, max);
        /** @type {?} */
        var word = '';
        while (word.length < size) {
            word += this.randomChar();
        }
        return word;
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomWords = /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (min, max) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = 10; }
        /** @type {?} */
        var qt = this.randomInteger(min, max);
        /** @type {?} */
        var words = [];
        while (words.length < qt) {
            words.push(this.randomWord());
        }
        return words.join(' ');
    };
    /**
     * @param {?=} fator
     * @return {?}
     */
    AOFake.randomBoolean = /**
     * @param {?=} fator
     * @return {?}
     */
    function (fator) {
        if (fator === void 0) { fator = 50; }
        return this.randomInteger() <= fator;
    };
    /**
     * @param {?} elements
     * @return {?}
     */
    AOFake.randomElement = /**
     * @param {?} elements
     * @return {?}
     */
    function (elements) {
        return elements[this.randomInteger(0, elements.length - 1)];
    };
    /**
     * @param {?} elements
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomElements = /**
     * @param {?} elements
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (elements, min, max) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = null; }
        min = min && min > 1 ? Math.floor(min) : 1;
        max = max && max < elements.length ? Math.floor(max) : this.randomInteger(min, elements.length - 1);
        /** @type {?} */
        var qt = this.randomInteger(min, max);
        /** @type {?} */
        var selection = [];
        while (selection.length < qt) {
            selection.push(this.randomElement(elements));
        }
        return selection;
    };
    return AOFake;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-validations.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var  
// @dynamic
AOValidations = /** @class */ (function () {
    function AOValidations() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isEmail = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^[_a-z0-9]+(\.[_a-z0-9]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isFloat = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^-?[\d]+(\.?\d+)?$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isFloat_S = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^-[\d]+(\.?\d+)?$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isFloat_U = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^[\d]+(\.?\d+)?$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isInt = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^-?[\d]+$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isInt_S = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^-[\d]+$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isInt_U = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^[\d]+$/.test(value);
    };
    //
    // (99) 9999-9999
    // (99) 9-9999-9999
    //
    //
    // (99) 9999-9999
    // (99) 9-9999-9999
    //
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isPhone = 
    //
    // (99) 9999-9999
    // (99) 9-9999-9999
    //
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (/^\([1-9]{1}[0-9]{1}\) ([0-9]{1}-|)[0-9]{4}-[0-9]{4}$/.test(value) == false)
            return false;
        value = AOString.onlyNumbers(value);
        if (['10', '20', '30', '40', '50', '60', '70', '80', '90'].indexOf(value.substr(0, 2)) >= 0)
            return false;
        return true;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isPhoneINTER = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im.test(value);
    };
    //
    // 99.999-999
    //
    //
    // 99.999-999
    //
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isZipCode = 
    //
    // 99.999-999
    //
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^[0-9]{2}\.[0-9]{3}-[0-9]{3}$/.test(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isZipCodeINTER = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^[0-9]{5}(?:-[0-9]{4})?$/.test(value);
    };
    //
    // 999.999.999-99
    //
    //
    // 999.999.999-99
    //
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isCpf = 
    //
    // 999.999.999-99
    //
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (/^[0-9]{3}\.[0-9]{3}\.[0-9]{3}-[0-9]{2}$/.test(value) == false)
            return false;
        /** @type {?} */
        var invalided = [
            '00000000000', '11111111111', '22222222222', '33333333333', '44444444444',
            '55555555555', '66666666666', '77777777777', '88888888888', '99999999999'
        ];
        value = AOString.onlyNumbers(value);
        if (!value || value.length != 11 || invalided.indexOf(value) >= 0)
            return false;
        /** @type {?} */
        var soma = 0;
        /** @type {?} */
        var resto;
        for (var i = 1; i <= 9; i++)
            soma = soma + parseInt(value.substring(i - 1, i)) * (11 - i);
        resto = (soma * 10) % 11;
        if ((resto == 10) || (resto == 11))
            resto = 0;
        if (resto != parseInt(value.substring(9, 10)))
            return false;
        soma = 0;
        for (var i = 1; i <= 10; i++)
            soma = soma + parseInt(value.substring(i - 1, i)) * (12 - i);
        resto = (soma * 10) % 11;
        if ((resto == 10) || (resto == 11))
            resto = 0;
        if (resto != parseInt(value.substring(10, 11)))
            return false;
        return true;
    };
    //
    // 99.999.999/9999-99
    //
    //
    // 99.999.999/9999-99
    //
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isCnpj = 
    //
    // 99.999.999/9999-99
    //
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (/^[0-9]{2}\.[0-9]{3}\.[0-9]{3}\/[0-9]{4}-[0-9]{2}$/.test(value) == false)
            return false;
        /** @type {?} */
        var invalided = [
            '00000000000000', '11111111111111', '22222222222222', '33333333333333', '44444444444444',
            '55555555555555', '66666666666666', '77777777777777', '88888888888888', '99999999999999'
        ];
        value = AOString.onlyNumbers(value);
        if (!value || value.length != 14 || invalided.indexOf(value) >= 0)
            return false;
        /** @type {?} */
        var soma = 0;
        /** @type {?} */
        var tamanho = value.length - 2;
        /** @type {?} */
        var numeros = value.substring(0, tamanho);
        /** @type {?} */
        var digitos = value.substring(tamanho);
        /** @type {?} */
        var pos = tamanho - 7;
        for (var i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        /** @type {?} */
        var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(0))
            return false;
        soma = 0;
        tamanho = tamanho + 1;
        numeros = value.substring(0, tamanho);
        pos = tamanho - 7;
        for (var i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(1))
            return false;
        return true;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isCpfCnpj = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return AOValidations.isCpf(value) || AOValidations.isCnpj(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    AOValidations.isUrl = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return /^(http?|ftp):\/\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\.)*[a-zA-Z0-9-]+\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\/($|[a-zA-Z0-9.,?'\\+&%$#=~_-]+))*$/
            .test(value);
    };
    return AOValidations;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-validators.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var  
// @dynamic
AOValidators = /** @class */ (function () {
    function AOValidators() {
    }
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.touched = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        if (control.pristine) {
            return true;
        }
        control.markAsTouched();
        return false;
    };
    /**
     * @param {?} callback
     * @return {?}
     */
    AOValidators.custom = /**
     * @param {?} callback
     * @return {?}
     */
    function (callback) {
        return (/**
         * @param {?} control
         * @return {?}
         */
        function (control) {
            return AOValidators.touched(control) || callback(control.value) ? null : { invalidCustom: true };
        });
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.email = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isEmail(control.value) ? null : { invalidEmail: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.url = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isUrl(control.value) ? null : { invalidUrl: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.phone = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isPhone(control.value) ? null : { invalidPhone: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.phoneINTER = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isPhoneINTER(control.value) ? null : { invalidPhone: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.zipCode = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isZipCode(control.value) ? null : { invalidZip: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.zipCodeINTER = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isZipCodeINTER(control.value) ? null : { invalidZip: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.cpf = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isCpf(control.value) ? null : { invalidZip: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.cnpj = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isCnpj(control.value) ? null : { invalidZip: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.cpfCnpj = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isCpfCnpj(control.value) ? null : { invalidZip: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.float = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isFloat(control.value) ? null : { invalidNumber: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.floatSigned = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isFloat_S(control.value) ? null : { invalidNumber: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.floatUnsigned = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isFloat_U(control.value) ? null : { invalidNumber: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.int = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isInt(control.value) ? null : { invalidNumber: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.intSigned = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isInt_S(control.value) ? null : { invalidNumber: true };
    };
    /**
     * @param {?} control
     * @return {?}
     */
    AOValidators.intUnsigned = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return AOValidators.touched(control) || AOValidations.isInt_U(control.value) ? null : { invalidNumber: true };
    };
    return AOValidators;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ao.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AOModule = /** @class */ (function () {
    function AOModule() {
    }
    /**
     * @param {?} environment
     * @return {?}
     */
    AOModule.forRoot = /**
     * @param {?} environment
     * @return {?}
     */
    function (environment) {
        return {
            ngModule: AOModule,
            providers: [
                {
                    provide: AOEnvService,
                    useValue: environment,
                }
            ]
        };
    };
    AOModule.decorators = [
        { type: NgModule, args: [{
                    schemas: [
                        CUSTOM_ELEMENTS_SCHEMA
                    ],
                    imports: [
                        CommonModule,
                        NgPipesModule,
                        // ChartsModule,
                        AngularFireAuthModule,
                        AngularFirestoreModule,
                        AngularFireStorageModule,
                        AngularFireMessagingModule,
                    ],
                    exports: [
                        //
                        // MODULES
                        //
                        NgPipesModule,
                        // ChartsModule,
                        AngularFireAuthModule,
                        AngularFirestoreModule,
                        AngularFireStorageModule,
                        AngularFireMessagingModule,
                        //
                        // COMPONENTS
                        //
                        AOAppComponent,
                        AOMenuComponent,
                        AOContainerComponent,
                        //
                        // DIRECTIVES
                        //
                        AOContainerDirective,
                        AOIsUserDirective,
                        AOIsGuestDirective,
                        AOStopPropagationDirective,
                        AOMaskDirective,
                        //
                        // PIPES
                        //
                        AONl2BrPipe,
                        PluckPipe,
                        DatePipe,
                        OrderByPipe,
                        ReversePipe,
                        SumPipe,
                        FilterByPipe,
                        GroupByPipe,
                    ],
                    declarations: [
                        //
                        // COMPONENTS
                        //
                        AOAppComponent,
                        AOMenuComponent,
                        AOContainerComponent,
                        //
                        // DIRECTIVES
                        //
                        AOContainerDirective,
                        AOIsUserDirective,
                        AOIsGuestDirective,
                        AOStopPropagationDirective,
                        AOMaskDirective,
                        //
                        // PIPES
                        //
                        AONl2BrPipe,
                    ],
                    providers: [
                        //
                        // GUARDS
                        //
                        AOUserGuard,
                        AOGuestGuard,
                        //
                        // PIPES
                        //
                        AONl2BrPipe,
                        PluckPipe,
                        DatePipe,
                        OrderByPipe,
                        ReversePipe,
                        SumPipe,
                        FilterByPipe,
                        GroupByPipe,
                    ],
                    entryComponents: [
                        AOContainerComponent,
                    ]
                },] }
    ];
    return AOModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ao-angular.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { AOAppComponent, AOArray, AOAuthFirebaseService, AOAuthOauthService, AOAuthService, AOCacheService, AOContainerComponent, AOContainerDirective, AOContainerService, AOEnvService, AOFake, AOFaunaDBPaginationHelper, AOFaunaDbService, AOFirebaseConnectionService, AOFirebaseFactoryService, AOFirebaseService, AOFirebaseSlaveService, AOGuestGuard, AOIsGuestDirective, AOIsUserDirective, AOMaskDirective, AOMenuComponent, AOMenuService, AOModule, AONl2BrPipe, AONodeItem, AOService, AOStopPropagationDirective, AOString, AOSubscriptions, AOTreeHelper, AOUserGuard, AOValidations, AOValidators };
//# sourceMappingURL=ao-angular.js.map
