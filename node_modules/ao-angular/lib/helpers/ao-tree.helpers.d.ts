import { NgZone } from '@angular/core';
export declare class AONodeItem {
    data: any;
    level: number;
    children: AONodeItem[];
    expanded: boolean;
    isExpanded(): boolean;
    isExpandable(): boolean;
}
export declare class AOTreeHelper {
    private _zone;
    private map;
    private tree;
    constructor(_zone: NgZone);
    static listToTree(items: any, map?: Map<any, AONodeItem>, fk_name?: string, pk_name?: string): {
        map: Map<any, AONodeItem>;
        tree: any;
    };
    static flatTree(tree: AONodeItem[]): any;
    setItems(items: any): void;
    getRoot(): AONodeItem[];
    getChildren(node?: AONodeItem): AONodeItem[];
    getDescendants(node?: AONodeItem): AONodeItem[];
    getParent(node: AONodeItem): AONodeItem | undefined;
    getParents(node: AONodeItem): AONodeItem[];
    getBrothers(node?: AONodeItem): AONodeItem[];
    isVisible(node: AONodeItem): boolean;
    tootle(node: AONodeItem): boolean;
    expandAll(): void;
    contractAll(): void;
    getNextOrder(node?: AONodeItem): any;
    getNavigate(node: AONodeItem): {
        previous: AONodeItem | null;
        current: AONodeItem;
        next: AONodeItem | null;
    };
    getPrevious(node: AONodeItem): AONodeItem;
    getNext(node: AONodeItem): AONodeItem;
}
