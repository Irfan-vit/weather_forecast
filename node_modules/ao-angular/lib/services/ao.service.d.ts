import { ActionSheetController, AlertController, LoadingController, ModalController, Platform, ToastController } from '@ionic/angular';
import { AOContainerService } from '../directives/ao-container/ao-container.service';
import { AOMenuService } from '../services/ao-menu.service';
export declare class AOService {
    platform: Platform;
    ionLoading: LoadingController;
    ionAlert: AlertController;
    ionModal: ModalController;
    ionSheet: ActionSheetController;
    ionToast: ToastController;
    menu: AOMenuService;
    container: AOContainerService;
    constructor(platform: Platform, ionLoading: LoadingController, ionAlert: AlertController, ionModal: ModalController, ionSheet: ActionSheetController, ionToast: ToastController, menu: AOMenuService, container: AOContainerService);
    wait(promise: Promise<any>, opts?: any): Promise<any>;
    sheet(buttons?: any, opts?: any): Promise<HTMLIonActionSheetElement>;
    modal(component: any, opts?: any): Promise<HTMLIonModalElement>;
    alert(message: string, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    prompt(inputs: any[], opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    confirm(message: string, yes?: () => any, no?: () => any, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    confirmOperation(yes?: () => any, no?: () => any, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    confirmActivate(yes?: () => any, no?: () => any, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    confirmDeactivate(yes?: () => any, no?: () => any, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    confirmDestroy(yes?: () => any, no?: () => any, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    toast(message: string, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    info(message: string, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    success(message: string, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    warning(message: string, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
    danger(message: string, opts?: any): Promise<import("@ionic/core").OverlayEventDetail<any>>;
}
