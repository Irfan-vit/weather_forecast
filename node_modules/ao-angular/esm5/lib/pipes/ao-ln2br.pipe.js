/**
 * @fileoverview added by tsickle
 * Generated from: lib/pipes/ao-ln2br.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe, SecurityContext, VERSION } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var AONl2BrPipe = /** @class */ (function () {
    function AONl2BrPipe(_sanitizer) {
        this._sanitizer = _sanitizer;
    }
    /**
     * @param {?} value
     * @param {?=} sanitizeBeforehand
     * @return {?}
     */
    AONl2BrPipe.prototype.transform = /**
     * @param {?} value
     * @param {?=} sanitizeBeforehand
     * @return {?}
     */
    function (value, sanitizeBeforehand) {
        /** @type {?} */
        var parsed = value.replace(/(?:\r\n|\r|\n)/g, '<br />');
        if (!VERSION || VERSION.major === '2') {
            return this._sanitizer.bypassSecurityTrustHtml(parsed);
        }
        else if (sanitizeBeforehand) {
            return this._sanitizer.sanitize(SecurityContext.HTML, parsed);
        }
        return parsed;
    };
    AONl2BrPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'AONl2br'
                },] }
    ];
    /** @nocollapse */
    AONl2BrPipe.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    return AONl2BrPipe;
}());
export { AONl2BrPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AONl2BrPipe.prototype._sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tbG4yYnIucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FvLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvcGlwZXMvYW8tbG4yYnIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLGVBQWUsRUFBRSxPQUFPLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUUsT0FBTyxFQUFFLFlBQVksRUFBWSxNQUFNLDJCQUEyQixDQUFDO0FBRW5FO0lBS0UscUJBQ1UsVUFBd0I7UUFBeEIsZUFBVSxHQUFWLFVBQVUsQ0FBYztJQUVsQyxDQUFDOzs7Ozs7SUFFRCwrQkFBUzs7Ozs7SUFBVCxVQUFVLEtBQWEsRUFBRSxrQkFBNEI7O1lBQzdDLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLFFBQVEsQ0FBQztRQUV6RCxJQUFJLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEtBQUssR0FBRyxFQUFFO1lBQ3JDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN4RDthQUFNLElBQUksa0JBQWtCLEVBQUU7WUFDN0IsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1NBQy9EO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Z0JBcEJGLElBQUksU0FBQztvQkFDSixJQUFJLEVBQUUsU0FBUztpQkFDaEI7Ozs7Z0JBSlEsWUFBWTs7SUF3QnJCLGtCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FuQlksV0FBVzs7Ozs7O0lBR3BCLGlDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIFNlY3VyaXR5Q29udGV4dCwgVkVSU0lPTiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ0FPTmwyYnInXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBT05sMkJyUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgX3Nhbml0aXplcjogRG9tU2FuaXRpemVyXHJcbiAgKSB7XHJcbiAgfVxyXG5cclxuICB0cmFuc2Zvcm0odmFsdWU6IHN0cmluZywgc2FuaXRpemVCZWZvcmVoYW5kPzogYm9vbGVhbik6IHN0cmluZyB8IFNhZmVIdG1sIHtcclxuICAgIGNvbnN0IHBhcnNlZCA9IHZhbHVlLnJlcGxhY2UoLyg/OlxcclxcbnxcXHJ8XFxuKS9nLCAnPGJyIC8+Jyk7XHJcblxyXG4gICAgaWYgKCFWRVJTSU9OIHx8IFZFUlNJT04ubWFqb3IgPT09ICcyJykge1xyXG4gICAgICByZXR1cm4gdGhpcy5fc2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RIdG1sKHBhcnNlZCk7XHJcbiAgICB9IGVsc2UgaWYgKHNhbml0aXplQmVmb3JlaGFuZCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5fc2FuaXRpemVyLnNhbml0aXplKFNlY3VyaXR5Q29udGV4dC5IVE1MLCBwYXJzZWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBwYXJzZWQ7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=