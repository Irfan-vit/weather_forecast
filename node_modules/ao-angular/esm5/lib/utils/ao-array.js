/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-array.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { AOString } from './ao-string';
// @dynamic
var 
// @dynamic
AOArray = /** @class */ (function () {
    function AOArray() {
    }
    /**
     * @param {?} items
     * @return {?}
     */
    AOArray.flat = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        var _this = this;
        return items.reduce((/**
         * @param {?} acc
         * @param {?} val
         * @return {?}
         */
        function (acc, val) { return Array.isArray(val) ? acc.concat(_this.flat(val)) : acc.concat(val); }), []);
    };
    /**
     * @param {?} array
     * @return {?}
     */
    AOArray.distict = /**
     * @param {?} array
     * @return {?}
     */
    function (array) {
        return array.filter((/**
         * @param {?} value
         * @param {?} index
         * @param {?} self
         * @return {?}
         */
        function (value, index, self) {
            return self.indexOf(value) === index;
        }));
    };
    /**
     * @param {?} items
     * @return {?}
     */
    AOArray.slug = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        return items.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return AOString.slug(item); }));
    };
    /**
     * @param {?} items
     * @return {?}
     */
    AOArray.keywords = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        return this.distict(this.flat(items).reduce((/**
         * @param {?} acc
         * @param {?} val
         * @return {?}
         */
        function (acc, val) { return acc.concat(AOString.keywords(val)); }), []));
    };
    return AOArray;
}());
// @dynamic
export { AOArray };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tYXJyYXkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hby1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL3V0aWxzL2FvLWFycmF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7QUFJdkM7OztJQUFBO0lBc0JBLENBQUM7Ozs7O0lBcEJRLFlBQUk7Ozs7SUFBWCxVQUFZLEtBQVk7UUFBeEIsaUJBRUM7UUFEQyxPQUFPLEtBQUssQ0FBQyxNQUFNOzs7OztRQUFDLFVBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSyxPQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFqRSxDQUFpRSxHQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzNHLENBQUM7Ozs7O0lBRU0sZUFBTzs7OztJQUFkLFVBQWUsS0FBSztRQUNsQixPQUFPLEtBQUssQ0FBQyxNQUFNOzs7Ozs7UUFBQyxVQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSTtZQUNyQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxDQUFDO1FBQ3ZDLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFTSxZQUFJOzs7O0lBQVgsVUFBWSxLQUFlO1FBQ3pCLE9BQU8sS0FBSyxDQUFDLEdBQUc7Ozs7UUFBQyxVQUFBLElBQUksSUFBSSxPQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQW5CLENBQW1CLEVBQUMsQ0FBQztJQUNoRCxDQUFDOzs7OztJQUVNLGdCQUFROzs7O0lBQWYsVUFBZ0IsS0FBWTtRQUMxQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTTs7Ozs7UUFBQyxVQUFDLEdBQUcsRUFBRSxHQUFHLElBQUssT0FBQSxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBbEMsQ0FBa0MsR0FBRSxFQUFFLENBQUMsQ0FDOUUsQ0FBQztJQUNKLENBQUM7SUFFSCxjQUFDO0FBQUQsQ0FBQyxBQXRCRCxJQXNCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFPU3RyaW5nIH0gZnJvbSAnLi9hby1zdHJpbmcnO1xyXG5cclxuLy8gQGR5bmFtaWNcclxuXHJcbmV4cG9ydCBjbGFzcyBBT0FycmF5IHtcclxuXHJcbiAgc3RhdGljIGZsYXQoaXRlbXM6IGFueVtdKTogYW55W10ge1xyXG4gICAgcmV0dXJuIGl0ZW1zLnJlZHVjZSgoYWNjLCB2YWwpID0+IEFycmF5LmlzQXJyYXkodmFsKSA/IGFjYy5jb25jYXQodGhpcy5mbGF0KHZhbCkpIDogYWNjLmNvbmNhdCh2YWwpLCBbXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZGlzdGljdChhcnJheSkge1xyXG4gICAgcmV0dXJuIGFycmF5LmZpbHRlcigodmFsdWUsIGluZGV4LCBzZWxmKSA9PiB7XHJcbiAgICAgIHJldHVybiBzZWxmLmluZGV4T2YodmFsdWUpID09PSBpbmRleDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHNsdWcoaXRlbXM6IHN0cmluZ1tdKTogc3RyaW5nW10ge1xyXG4gICAgcmV0dXJuIGl0ZW1zLm1hcChpdGVtID0+IEFPU3RyaW5nLnNsdWcoaXRlbSkpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGtleXdvcmRzKGl0ZW1zOiBhbnlbXSk6IHN0cmluZ1tdIHtcclxuICAgIHJldHVybiB0aGlzLmRpc3RpY3QoXHJcbiAgICAgIHRoaXMuZmxhdChpdGVtcykucmVkdWNlKChhY2MsIHZhbCkgPT4gYWNjLmNvbmNhdChBT1N0cmluZy5rZXl3b3Jkcyh2YWwpKSwgW10pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbn1cclxuIl19