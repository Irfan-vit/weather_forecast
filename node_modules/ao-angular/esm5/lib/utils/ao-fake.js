/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/ao-fake.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var AOFake = /** @class */ (function () {
    function AOFake() {
    }
    /**
     * @param {?} value
     * @param {?=} decimals
     * @return {?}
     */
    AOFake.floorDecimal = /**
     * @param {?} value
     * @param {?=} decimals
     * @return {?}
     */
    function (value, decimals) {
        if (decimals === void 0) { decimals = 2; }
        return Math.floor(value * Math.pow(10, decimals)) / Math.pow(10, decimals);
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @param {?=} decimals
     * @return {?}
     */
    AOFake.randomFloat = /**
     * @param {?=} min
     * @param {?=} max
     * @param {?=} decimals
     * @return {?}
     */
    function (min, max, decimals) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 100; }
        if (decimals === void 0) { decimals = 2; }
        return Math.floor((min + (Math.random() * (max - min))) * Math.pow(10, decimals)) / Math.pow(10, decimals);
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomInteger = /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (min, max) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 100; }
        return Math.floor((min + (Math.random() * (max - min))) * Math.pow(10, 0)) / Math.pow(10, 0);
    };
    /**
     * @param {?=} chars
     * @return {?}
     */
    AOFake.randomChar = /**
     * @param {?=} chars
     * @return {?}
     */
    function (chars) {
        if (chars === void 0) { chars = 'qwertyuiopasdfghjklzxcvbnm1234567890'; }
        return chars.charAt(this.randomInteger(0, chars.length - 1));
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomWord = /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (min, max) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = 10; }
        /** @type {?} */
        var size = this.randomInteger(min, max);
        /** @type {?} */
        var word = '';
        while (word.length < size) {
            word += this.randomChar();
        }
        return word;
    };
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomWords = /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (min, max) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = 10; }
        /** @type {?} */
        var qt = this.randomInteger(min, max);
        /** @type {?} */
        var words = [];
        while (words.length < qt) {
            words.push(this.randomWord());
        }
        return words.join(' ');
    };
    /**
     * @param {?=} fator
     * @return {?}
     */
    AOFake.randomBoolean = /**
     * @param {?=} fator
     * @return {?}
     */
    function (fator) {
        if (fator === void 0) { fator = 50; }
        return this.randomInteger() <= fator;
    };
    /**
     * @param {?} elements
     * @return {?}
     */
    AOFake.randomElement = /**
     * @param {?} elements
     * @return {?}
     */
    function (elements) {
        return elements[this.randomInteger(0, elements.length - 1)];
    };
    /**
     * @param {?} elements
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    AOFake.randomElements = /**
     * @param {?} elements
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    function (elements, min, max) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = null; }
        min = min && min > 1 ? Math.floor(min) : 1;
        max = max && max < elements.length ? Math.floor(max) : this.randomInteger(min, elements.length - 1);
        /** @type {?} */
        var qt = this.randomInteger(min, max);
        /** @type {?} */
        var selection = [];
        while (selection.length < qt) {
            selection.push(this.randomElement(elements));
        }
        return selection;
    };
    return AOFake;
}());
export { AOFake };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tZmFrZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FvLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvYW8tZmFrZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQTtJQUFBO0lBdURBLENBQUM7Ozs7OztJQXJEUSxtQkFBWTs7Ozs7SUFBbkIsVUFBb0IsS0FBSyxFQUFFLFFBQVk7UUFBWix5QkFBQSxFQUFBLFlBQVk7UUFDckMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzdFLENBQUM7Ozs7Ozs7SUFFTSxrQkFBVzs7Ozs7O0lBQWxCLFVBQW1CLEdBQU8sRUFBRSxHQUFTLEVBQUUsUUFBWTtRQUFoQyxvQkFBQSxFQUFBLE9BQU87UUFBRSxvQkFBQSxFQUFBLFNBQVM7UUFBRSx5QkFBQSxFQUFBLFlBQVk7UUFDakQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzdHLENBQUM7Ozs7OztJQUVNLG9CQUFhOzs7OztJQUFwQixVQUFxQixHQUFPLEVBQUUsR0FBUztRQUFsQixvQkFBQSxFQUFBLE9BQU87UUFBRSxvQkFBQSxFQUFBLFNBQVM7UUFDckMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FB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REMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZHluYW1pY1xyXG5cclxuZXhwb3J0IGNsYXNzIEFPRmFrZSB7XHJcblxyXG4gIHN0YXRpYyBmbG9vckRlY2ltYWwodmFsdWUsIGRlY2ltYWxzID0gMikge1xyXG4gICAgcmV0dXJuIE1hdGguZmxvb3IodmFsdWUgKiBNYXRoLnBvdygxMCwgZGVjaW1hbHMpKSAvIE1hdGgucG93KDEwLCBkZWNpbWFscyk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgcmFuZG9tRmxvYXQobWluID0gMCwgbWF4ID0gMTAwLCBkZWNpbWFscyA9IDIpIHtcclxuICAgIHJldHVybiBNYXRoLmZsb29yKChtaW4gKyAoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSkgKiBNYXRoLnBvdygxMCwgZGVjaW1hbHMpKSAvIE1hdGgucG93KDEwLCBkZWNpbWFscyk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgcmFuZG9tSW50ZWdlcihtaW4gPSAwLCBtYXggPSAxMDApIHtcclxuICAgIHJldHVybiBNYXRoLmZsb29yKChtaW4gKyAoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSkgKiBNYXRoLnBvdygxMCwgMCkpIC8gTWF0aC5wb3coMTAsIDApO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHJhbmRvbUNoYXIoY2hhcnMgPSAncXdlcnR5dWlvcGFzZGZnaGprbHp4Y3Zibm0xMjM0NTY3ODkwJykge1xyXG4gICAgcmV0dXJuIGNoYXJzLmNoYXJBdCh0aGlzLnJhbmRvbUludGVnZXIoMCwgY2hhcnMubGVuZ3RoIC0gMSkpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHJhbmRvbVdvcmQobWluID0gMSwgbWF4ID0gMTApIHtcclxuICAgIGNvbnN0IHNpemUgPSB0aGlzLnJhbmRvbUludGVnZXIobWluLCBtYXgpO1xyXG4gICAgbGV0IHdvcmQgPSAnJztcclxuICAgIHdoaWxlICh3b3JkLmxlbmd0aCA8IHNpemUpIHtcclxuICAgICAgd29yZCArPSB0aGlzLnJhbmRvbUNoYXIoKTtcclxuICAgIH1cclxuICAgIHJldHVybiB3b3JkO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHJhbmRvbVdvcmRzKG1pbiA9IDEsIG1heCA9IDEwKSB7XHJcbiAgICBjb25zdCBxdCA9IHRoaXMucmFuZG9tSW50ZWdlcihtaW4sIG1heCk7XHJcbiAgICBjb25zdCB3b3JkcyA9IFtdO1xyXG4gICAgd2hpbGUgKHdvcmRzLmxlbmd0aCA8IHF0KSB7XHJcbiAgICAgIHdvcmRzLnB1c2godGhpcy5yYW5kb21Xb3JkKCkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHdvcmRzLmpvaW4oJyAnKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyByYW5kb21Cb29sZWFuKGZhdG9yID0gNTApIHtcclxuICAgIHJldHVybiB0aGlzLnJhbmRvbUludGVnZXIoKSA8PSBmYXRvcjtcclxuICB9XHJcblxyXG4gIHN0YXRpYyByYW5kb21FbGVtZW50KGVsZW1lbnRzOiBhbnlbXSkge1xyXG4gICAgcmV0dXJuIGVsZW1lbnRzW3RoaXMucmFuZG9tSW50ZWdlcigwLCBlbGVtZW50cy5sZW5ndGggLSAxKV07XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgcmFuZG9tRWxlbWVudHMoZWxlbWVudHM6IGFueVtdLCBtaW4gPSAxLCBtYXggPSBudWxsKSB7XHJcbiAgICBtaW4gPSBtaW4gJiYgbWluID4gMSA/IE1hdGguZmxvb3IobWluKSA6IDE7XHJcbiAgICBtYXggPSBtYXggJiYgbWF4IDwgZWxlbWVudHMubGVuZ3RoID8gTWF0aC5mbG9vcihtYXgpIDogdGhpcy5yYW5kb21JbnRlZ2VyKG1pbiwgZWxlbWVudHMubGVuZ3RoIC0gMSk7XHJcbiAgICBjb25zdCBxdCA9IHRoaXMucmFuZG9tSW50ZWdlcihtaW4sIG1heCk7XHJcbiAgICBjb25zdCBzZWxlY3Rpb246IGFueVtdID0gW107XHJcbiAgICB3aGlsZSAoc2VsZWN0aW9uLmxlbmd0aCA8IHF0KSB7XHJcbiAgICAgIHNlbGVjdGlvbi5wdXNoKHRoaXMucmFuZG9tRWxlbWVudChlbGVtZW50cykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHNlbGVjdGlvbjtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==