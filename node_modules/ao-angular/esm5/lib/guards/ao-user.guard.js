/**
 * @fileoverview added by tsickle
 * Generated from: lib/guards/ao-user.guard.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, NgZone } from '@angular/core';
import { NavigationEnd, Router } from '@angular/router';
import { NavController } from '@ionic/angular';
import { AOAuthService } from '../services/ao-auth.service';
import { AOSubscriptions } from '../utils/ao-subscriptions';
var AOUserGuard = /** @class */ (function () {
    function AOUserGuard(_router, _nav, _zone, _auth) {
        this._router = _router;
        this._nav = _nav;
        this._zone = _zone;
        this._auth = _auth;
        this._subscriptions = new AOSubscriptions();
    }
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    AOUserGuard.prototype.canActivate = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        return this.can(route, state);
    };
    /**
     * @param {?} childRoute
     * @param {?} state
     * @return {?}
     */
    AOUserGuard.prototype.canActivateChild = /**
     * @param {?} childRoute
     * @param {?} state
     * @return {?}
     */
    function (childRoute, state) {
        return this.can(childRoute, state);
    };
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    AOUserGuard.prototype.can = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        var _this = this;
        if (this._auth.isGuest()) {
            this._auth.setRedirect(state.url);
            return this._router.createUrlTree(['/login']);
        }
        this._subscriptions.add('logout', AOAuthService._onLogout.subscribe((/**
         * @return {?}
         */
        function () {
            _this._subscriptions.stop();
            _this._zone.run((/**
             * @return {?}
             */
            function () {
                _this._nav.navigateRoot('/login');
            }));
        })));
        this._subscriptions.add('route', this._router.events.subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event instanceof NavigationEnd && event.url !== state.url) {
                _this._subscriptions.stop();
            }
        })));
        return true;
    };
    AOUserGuard.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AOUserGuard.ctorParameters = function () { return [
        { type: Router },
        { type: NavController },
        { type: NgZone },
        { type: AOAuthService }
    ]; };
    return AOUserGuard;
}());
export { AOUserGuard };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._subscriptions;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._router;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._nav;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._zone;
    /**
     * @type {?}
     * @private
     */
    AOUserGuard.prototype._auth;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tdXNlci5ndWFyZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FvLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZ3VhcmRzL2FvLXVzZXIuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBSUwsYUFBYSxFQUNiLE1BQU0sRUFHUCxNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTVEO0lBS0UscUJBQ1UsT0FBZSxFQUNmLElBQW1CLEVBQ25CLEtBQWEsRUFDYixLQUFvQjtRQUhwQixZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2YsU0FBSSxHQUFKLElBQUksQ0FBZTtRQUNuQixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsVUFBSyxHQUFMLEtBQUssQ0FBZTtRQU50QixtQkFBYyxHQUFvQixJQUFJLGVBQWUsRUFBRSxDQUFDO0lBUWhFLENBQUM7Ozs7OztJQUVELGlDQUFXOzs7OztJQUFYLFVBQ0UsS0FBNkIsRUFDN0IsS0FBMEI7UUFFMUIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7Ozs7SUFFRCxzQ0FBZ0I7Ozs7O0lBQWhCLFVBQ0UsVUFBa0MsRUFDbEMsS0FBMEI7UUFFMUIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7Ozs7SUFFRCx5QkFBRzs7Ozs7SUFBSCxVQUNFLEtBQTZCLEVBQzdCLEtBQTBCO1FBRjVCLGlCQXVCQztRQW5CQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQy9DO1FBRUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLGFBQWEsQ0FBQyxTQUFTLENBQUMsU0FBUzs7O1FBQUM7WUFDbEUsS0FBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUMzQixLQUFJLENBQUMsS0FBSyxDQUFDLEdBQUc7OztZQUFDO2dCQUNiLEtBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ25DLENBQUMsRUFBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUVKLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxLQUFLO1lBQ2xFLElBQUksS0FBSyxZQUFZLGFBQWEsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLEtBQUssQ0FBQyxHQUFHLEVBQUU7Z0JBQzdELEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDNUI7UUFDSCxDQUFDLEVBQUMsQ0FBQyxDQUFDO1FBRUosT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOztnQkFsREYsVUFBVTs7OztnQkFWVCxNQUFNO2dCQUtDLGFBQWE7Z0JBWEQsTUFBTTtnQkFhbEIsYUFBYTs7SUF1RHRCLGtCQUFDO0NBQUEsQUFwREQsSUFvREM7U0FuRFksV0FBVzs7Ozs7O0lBRXRCLHFDQUFnRTs7Ozs7SUFHOUQsOEJBQXVCOzs7OztJQUN2QiwyQkFBMkI7Ozs7O0lBQzNCLDRCQUFxQjs7Ozs7SUFDckIsNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCxcclxuICBDYW5BY3RpdmF0ZSxcclxuICBDYW5BY3RpdmF0ZUNoaWxkLFxyXG4gIE5hdmlnYXRpb25FbmQsXHJcbiAgUm91dGVyLFxyXG4gIFJvdXRlclN0YXRlU25hcHNob3QsXHJcbiAgVXJsVHJlZVxyXG59IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL2ludGVybmFsL09ic2VydmFibGUnO1xyXG5pbXBvcnQgeyBOYXZDb250cm9sbGVyIH0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xyXG5cclxuaW1wb3J0IHsgQU9BdXRoU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2FvLWF1dGguc2VydmljZSc7XHJcbmltcG9ydCB7IEFPU3Vic2NyaXB0aW9ucyB9IGZyb20gJy4uL3V0aWxzL2FvLXN1YnNjcmlwdGlvbnMnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQU9Vc2VyR3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSwgQ2FuQWN0aXZhdGVDaGlsZCB7XHJcblxyXG4gIHByaXZhdGUgX3N1YnNjcmlwdGlvbnM6IEFPU3Vic2NyaXB0aW9ucyA9IG5ldyBBT1N1YnNjcmlwdGlvbnMoKTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIF9yb3V0ZXI6IFJvdXRlcixcclxuICAgIHByaXZhdGUgX25hdjogTmF2Q29udHJvbGxlcixcclxuICAgIHByaXZhdGUgX3pvbmU6IE5nWm9uZSxcclxuICAgIHByaXZhdGUgX2F1dGg6IEFPQXV0aFNlcnZpY2VcclxuICApIHtcclxuICB9XHJcblxyXG4gIGNhbkFjdGl2YXRlKFxyXG4gICAgcm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsXHJcbiAgICBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdFxyXG4gICk6IE9ic2VydmFibGU8Ym9vbGVhbiB8IFVybFRyZWU+IHwgUHJvbWlzZTxib29sZWFuIHwgVXJsVHJlZT4gfCBib29sZWFuIHwgVXJsVHJlZSB7XHJcbiAgICByZXR1cm4gdGhpcy5jYW4ocm91dGUsIHN0YXRlKTtcclxuICB9XHJcblxyXG4gIGNhbkFjdGl2YXRlQ2hpbGQoXHJcbiAgICBjaGlsZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LFxyXG4gICAgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3RcclxuICApOiBPYnNlcnZhYmxlPGJvb2xlYW4gfCBVcmxUcmVlPiB8IFByb21pc2U8Ym9vbGVhbiB8IFVybFRyZWU+IHwgYm9vbGVhbiB8IFVybFRyZWUge1xyXG4gICAgcmV0dXJuIHRoaXMuY2FuKGNoaWxkUm91dGUsIHN0YXRlKTtcclxuICB9XHJcblxyXG4gIGNhbihcclxuICAgIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LFxyXG4gICAgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3RcclxuICApIHtcclxuICAgIGlmICh0aGlzLl9hdXRoLmlzR3Vlc3QoKSkge1xyXG4gICAgICB0aGlzLl9hdXRoLnNldFJlZGlyZWN0KHN0YXRlLnVybCk7XHJcbiAgICAgIHJldHVybiB0aGlzLl9yb3V0ZXIuY3JlYXRlVXJsVHJlZShbJy9sb2dpbiddKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9zdWJzY3JpcHRpb25zLmFkZCgnbG9nb3V0JywgQU9BdXRoU2VydmljZS5fb25Mb2dvdXQuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5zdG9wKCk7XHJcbiAgICAgIHRoaXMuX3pvbmUucnVuKCgpID0+IHtcclxuICAgICAgICB0aGlzLl9uYXYubmF2aWdhdGVSb290KCcvbG9naW4nKTtcclxuICAgICAgfSk7XHJcbiAgICB9KSk7XHJcblxyXG4gICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5hZGQoJ3JvdXRlJywgdGhpcy5fcm91dGVyLmV2ZW50cy5zdWJzY3JpYmUoZXZlbnQgPT4ge1xyXG4gICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kICYmIGV2ZW50LnVybCAhPT0gc3RhdGUudXJsKSB7XHJcbiAgICAgICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5zdG9wKCk7XHJcbiAgICAgIH1cclxuICAgIH0pKTtcclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==