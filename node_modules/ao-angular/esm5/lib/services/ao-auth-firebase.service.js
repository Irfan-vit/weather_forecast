/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-auth-firebase.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Inject, Injectable } from '@angular/core';
import { Plugins, registerWebPlugin } from '@capacitor/core';
import { OAuth2Client } from '@byteowls/capacitor-oauth2';
import * as firebase from 'firebase/app';
import { AOAuthService } from './ao-auth.service';
import { AOFirebaseService } from './ao-firebase.service';
import { AOSubscriptions } from '../utils/ao-subscriptions';
import { AOEnvService } from './ao-env.service';
import * as i0 from "@angular/core";
import * as i1 from "./ao-auth.service";
import * as i2 from "./ao-firebase.service";
import * as i3 from "./ao-env.service";
var AOAuthFirebaseService = /** @class */ (function () {
    function AOAuthFirebaseService(_auth, _fb, _env) {
        this._auth = _auth;
        this._fb = _fb;
        this._env = _env;
        this._subscriptions = new AOSubscriptions();
        registerWebPlugin(OAuth2Client);
        this._auth.provider(this);
        this._auth.isUser() ? this.authListening() : null;
    }
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.login = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        this._subscriptions.stop();
        /** @type {?} */
        var promise = new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var oauth, credential, auth, user, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 12, , 13]);
                        oauth = null;
                        credential = null;
                        if (!(data.provider instanceof firebase.auth.GoogleAuthProvider)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.loginGoogle()];
                    case 1:
                        oauth = _a.sent();
                        credential = firebase.auth.GoogleAuthProvider.credential(null, oauth.access_token);
                        return [3 /*break*/, 9];
                    case 2:
                        if (!(data.provider instanceof firebase.auth.FacebookAuthProvider)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.loginFacebook()];
                    case 3:
                        oauth = _a.sent();
                        credential = firebase.auth.FacebookAuthProvider.credential(oauth.access_token);
                        return [3 /*break*/, 9];
                    case 4:
                        if (!(data.provider instanceof firebase.auth.TwitterAuthProvider)) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.loginTwitter()];
                    case 5:
                        oauth = _a.sent();
                        credential = firebase.auth.TwitterAuthProvider.credential(oauth.access_token, '');
                        return [3 /*break*/, 9];
                    case 6:
                        if (!(data.provider instanceof firebase.auth.GithubAuthProvider)) return [3 /*break*/, 8];
                        return [4 /*yield*/, this.loginGithub()];
                    case 7:
                        oauth = _a.sent();
                        credential = firebase.auth.GithubAuthProvider.credential(oauth.access_token);
                        return [3 /*break*/, 9];
                    case 8:
                        reject('Invalid Auth Provider.');
                        _a.label = 9;
                    case 9: return [4 /*yield*/, this._fb.auth().auth.signInWithCredential(credential)];
                    case 10:
                        auth = _a.sent();
                        return [4 /*yield*/, this.userCreateOrUpdate(auth.user, {
                                given_name: oauth.given_name,
                                family_name: oauth.family_name,
                                locale: oauth.locale,
                            })];
                    case 11:
                        user = _a.sent();
                        resolve(user);
                        return [3 /*break*/, 13];
                    case 12:
                        e_1 = _a.sent();
                        reject(e_1);
                        return [3 /*break*/, 13];
                    case 13: return [2 /*return*/];
                }
            });
        }); }));
        promise.finally((/**
         * @return {?}
         */
        function () { return _this.authListening(true); }));
        return promise;
    };
    /**
     * @return {?}
     */
    AOAuthFirebaseService.prototype.logout = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._subscriptions.stop();
        return this._fb.firebase().destroy().then((/**
         * @return {?}
         */
        function () { return _this._fb.conn().logout(); }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.update = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.forgetPassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.resetPassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AOAuthFirebaseService.prototype.updatePassword = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return Promise.resolve();
    };
    // -------------------------------------------------------------------------------------------------------------------
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginGoogle = 
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @private
     * @return {?}
     */
    function () {
        return Plugins.OAuth2Client.authenticate({
            scope: 'email profile',
            authorizationBaseUrl: 'https://accounts.google.com/o/oauth2/auth',
            resourceUrl: 'https://www.googleapis.com/userinfo/v2/me',
            accessTokenEndpoint: 'https://www.googleapis.com/oauth2/v4/token',
            web: {
                appId: this._env.oauth.google.web,
                responseType: 'token',
                redirectUrl: this._env.app_url,
                accessTokenEndpoint: '',
                pkceEnable: false,
                windowOptions: 'height=500,left=0,top=0',
            },
            android: {
                appId: this._env.oauth.google.android,
                responseType: 'code',
                // if you configured a android app in google dev console the value must be "code"
                redirectUrl: this._env.app_id + ':/' // package name from google dev console
            },
            ios: {
                appId: this._env.oauth.google.ios,
                responseType: 'code',
                // if you configured a ios app in google dev console the value must be "code"
                redirectUrl: this._env.app_id + ':/' // Bundle ID from google dev console
            }
        });
    };
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginFacebook = /**
     * @private
     * @return {?}
     */
    function () {
        return this.loginGoogle();
    };
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginTwitter = /**
     * @private
     * @return {?}
     */
    function () {
        return this.loginGoogle();
    };
    /**
     * @private
     * @return {?}
     */
    AOAuthFirebaseService.prototype.loginGithub = /**
     * @private
     * @return {?}
     */
    function () {
        return this.loginGoogle();
    };
    /**
     * @private
     * @param {?=} skip
     * @return {?}
     */
    AOAuthFirebaseService.prototype.authListening = /**
     * @private
     * @param {?=} skip
     * @return {?}
     */
    function (skip) {
        var _this = this;
        if (skip === void 0) { skip = false; }
        this._subscriptions.stop();
        this._subscriptions.auth = this._fb.authState().subscribe((/**
         * @param {?} auth
         * @return {?}
         */
        function (auth) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!auth) return [3 /*break*/, 3];
                        if (!(skip === false)) return [3 /*break*/, 2];
                        skip = false;
                        return [4 /*yield*/, this.userCreateOrUpdate(auth)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this._subscriptions.user = this._fb.fsDocSnapshot('/users/' + auth.uid).subscribe((/**
                         * @param {?} snapshot
                         * @return {?}
                         */
                        function (snapshot) {
                            return snapshot.payload.exists
                                ? _this._auth.setUser(snapshot.payload.data())
                                : _this._auth.logout();
                        }), (/**
                         * @return {?}
                         */
                        function () {
                            console.warn('Oops! Failed to watch user.');
                        }));
                        return [3 /*break*/, 4];
                    case 3: return [2 /*return*/, this._auth.logout()];
                    case 4: return [2 /*return*/];
                }
            });
        }); }), (/**
         * @return {?}
         */
        function () {
            console.warn('Oops! Failed to update authentication.');
        }));
    };
    /**
     * @private
     * @param {?} user
     * @param {?=} extra
     * @return {?}
     */
    AOAuthFirebaseService.prototype.userCreateOrUpdate = /**
     * @private
     * @param {?} user
     * @param {?=} extra
     * @return {?}
     */
    function (user, extra) {
        if (extra === void 0) { extra = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var userRef, userDoc, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        userRef = this._fb.fsDoc('/users/' + user.uid);
                        return [4 /*yield*/, userRef.ref.get()];
                    case 1:
                        userDoc = _a.sent();
                        data = tslib_1.__assign({}, userDoc.data(), { id: user.uid, email: user.email, email_verified: user.emailVerified, name: user.displayName, image: user.photoURL, logged_at: this._fb.fsNow() }, extra);
                        if (!userDoc.exists) {
                            data.active = true;
                            data.created_at = this._fb.fsNow();
                            data.updated_at = this._fb.fsNow();
                            data.deleted_at = null;
                        }
                        return [4 /*yield*/, userRef.set(data, { merge: true })];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, userRef.ref.get()];
                    case 3: return [2 /*return*/, (_a.sent()).data()];
                }
            });
        });
    };
    AOAuthFirebaseService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOAuthFirebaseService.ctorParameters = function () { return [
        { type: AOAuthService },
        { type: AOFirebaseService },
        { type: undefined, decorators: [{ type: Inject, args: [AOEnvService,] }] }
    ]; };
    /** @nocollapse */ AOAuthFirebaseService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AOAuthFirebaseService_Factory() { return new AOAuthFirebaseService(i0.ɵɵinject(i1.AOAuthService), i0.ɵɵinject(i2.AOFirebaseService), i0.ɵɵinject(i3.AOEnvService)); }, token: AOAuthFirebaseService, providedIn: "root" });
    return AOAuthFirebaseService;
}());
export { AOAuthFirebaseService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._subscriptions;
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._auth;
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._fb;
    /**
     * @type {?}
     * @private
     */
    AOAuthFirebaseService.prototype._env;
}
//# sourceMappingURL=data:application/json;base64,