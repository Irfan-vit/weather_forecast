/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-fauna-db.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { EventEmitter, Inject, Injectable } from '@angular/core';
import { LocalStorageService } from 'ngx-webstorage';
import * as FaunaDB from 'faunadb';
import { AOService } from './ao.service';
import { AOEnvService } from './ao-env.service';
import { AOCacheService } from './ao-cache.service';
import * as i0 from "@angular/core";
import * as i1 from "./ao.service";
import * as i2 from "ngx-webstorage";
import * as i3 from "./ao-env.service";
/** @type {?} */
var _q = FaunaDB.query;
// @dynamic
var AOFaunaDbService = /** @class */ (function () {
    // -------------------------------------------------------------------------------------------------------------------
    function AOFaunaDbService(_ao, _storage, _environment) {
        var _this = this;
        this._ao = _ao;
        this._storage = _storage;
        this._environment = _environment;
        this.q = _q;
        this._observer = new EventEmitter();
        this._cache = new AOCacheService(this, this._storage);
        this._client = new FaunaDB.Client({
            secret: this._environment.faunadb.secret,
            observer: (/**
             * @param {?} res
             * @return {?}
             */
            function (res) { return _this._observer.emit(res); })
        });
    }
    /**
     * @return {?}
     */
    AOFaunaDbService.prototype.client = /**
     * @return {?}
     */
    function () {
        return this._client;
    };
    //--------------------------------------------------------------------------------------------------------------------
    // EXPRESSION
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // EXPRESSION
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} table
     * @param {?=} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Ref = 
    //--------------------------------------------------------------------------------------------------------------------
    // EXPRESSION
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} table
     * @param {?=} id
     * @return {?}
     */
    function (table, id) {
        return id ? _q.Ref(_q.Collection(table), id) : null;
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Get = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        return _q.Get(_q.Ref(_q.Collection(table), id));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Create = /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    function (table, data, id) {
        if (id === void 0) { id = null; }
        return _q.Let({
            id: id ? id : _q.NewId()
        }, _q.Create(_q.Ref(_q.Collection(table), _q.Var('id')), {
            data: tslib_1.__assign({ is_activated: true }, data, { id: _q.Var('id'), created_at: Date.now(), updated_at: Date.now(), deleted_at: null })
        }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Update = /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    function (table, data, id) {
        return _q.Update(_q.Ref(_q.Collection(table), id), {
            data: tslib_1.__assign({}, data, { id: id, updated_at: Date.now() })
        });
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.Delete = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        return _q.Delete(_q.Ref(_q.Collection(table), id));
    };
    //--------------------------------------------------------------------------------------------------------------------
    // RESOURCES
    //--------------------------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------------------------
    // RESOURCES
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} callback
     * @param {?=} configs
     * @return {?}
     */
    AOFaunaDbService.prototype.query = 
    //--------------------------------------------------------------------------------------------------------------------
    // RESOURCES
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} callback
     * @param {?=} configs
     * @return {?}
     */
    function (callback, configs) {
        var _this = this;
        if (configs === void 0) { configs = {}; }
        /** @type {?} */
        var promise = new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var params, request;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                params = callback(_q);
                request = configs.cache
                    ? this._cache.find(params, (/**
                     * @return {?}
                     */
                    function () { return _this.client().query(params); }), configs.cache)
                    : this.client().query(params);
                request.then((/**
                 * @param {?} response
                 * @return {?}
                 */
                function (response) { return resolve(response); }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) { return reject(error); }));
                return [2 /*return*/];
            });
        }); }));
        return this._ao.wait(promise);
    };
    /**
     * @return {?}
     */
    AOFaunaDbService.prototype.id = /**
     * @return {?}
     */
    function () {
        return this.query((/**
         * @param {?} q
         * @return {?}
         */
        function (q) { return q.NewId(); }));
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.find = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        var _this = this;
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Get(table, id); }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    AOFaunaDbService.prototype.insert = /**
     * @param {?} table
     * @param {?} data
     * @param {?=} id
     * @return {?}
     */
    function (table, data, id) {
        var _this = this;
        if (id === void 0) { id = null; }
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Create(table, data, id); }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.upgrade = /**
     * @param {?} table
     * @param {?} data
     * @param {?} id
     * @return {?}
     */
    function (table, data, id) {
        var _this = this;
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Update(table, data, id); }));
    };
    /**
     * @param {?} table
     * @param {?} data
     * @return {?}
     */
    AOFaunaDbService.prototype.save = /**
     * @param {?} table
     * @param {?} data
     * @return {?}
     */
    function (table, data) {
        return data.id
            ? this.upgrade(table, data, data.id)
            : this.insert(table, data);
    };
    /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    AOFaunaDbService.prototype.destroy = /**
     * @param {?} table
     * @param {?} id
     * @return {?}
     */
    function (table, id) {
        var _this = this;
        return this.query((/**
         * @return {?}
         */
        function () { return _this.Delete(table, id); }));
    };
    AOFaunaDbService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOFaunaDbService.ctorParameters = function () { return [
        { type: AOService },
        { type: LocalStorageService },
        { type: undefined, decorators: [{ type: Inject, args: [AOEnvService,] }] }
    ]; };
    /** @nocollapse */ AOFaunaDbService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AOFaunaDbService_Factory() { return new AOFaunaDbService(i0.ɵɵinject(i1.AOService), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.AOEnvService)); }, token: AOFaunaDbService, providedIn: "root" });
    return AOFaunaDbService;
}());
export { AOFaunaDbService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._client;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._cache;
    /** @type {?} */
    AOFaunaDbService.prototype.q;
    /** @type {?} */
    AOFaunaDbService.prototype._observer;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._ao;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._storage;
    /**
     * @type {?}
     * @private
     */
    AOFaunaDbService.prototype._environment;
}
//# sourceMappingURL=data:application/json;base64,