/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-menu.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { MenuController, Platform } from '@ionic/angular';
import * as i0 from "@angular/core";
import * as i1 from "@ionic/angular";
var AOMenuService = /** @class */ (function () {
    function AOMenuService(platform, controller) {
        this.platform = platform;
        this.controller = controller;
        this._stacked = ['lg'];
    }
    /**
     * @return {?}
     */
    AOMenuService.prototype.disable = /**
     * @return {?}
     */
    function () {
        return this.controller.enable(false, 'AO_APP_MENU');
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.enable = /**
     * @return {?}
     */
    function () {
        return this.controller.enable(true, 'AO_APP_MENU');
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.stackable = /**
     * @return {?}
     */
    function () {
        return this.platform.width() > 991;
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.stacked = /**
     * @return {?}
     */
    function () {
        return this._stacked;
    };
    /**
     * @return {?}
     */
    AOMenuService.prototype.stackToggle = /**
     * @return {?}
     */
    function () {
        this._stacked = this._stacked == false ? ['lg'] : false;
    };
    AOMenuService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AOMenuService.ctorParameters = function () { return [
        { type: Platform },
        { type: MenuController }
    ]; };
    /** @nocollapse */ AOMenuService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AOMenuService_Factory() { return new AOMenuService(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i1.MenuController)); }, token: AOMenuService, providedIn: "root" });
    return AOMenuService;
}());
export { AOMenuService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOMenuService.prototype._stacked;
    /** @type {?} */
    AOMenuService.prototype.platform;
    /** @type {?} */
    AOMenuService.prototype.controller;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tbWVudS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW8tYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9hby1tZW51LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7OztBQUUxRDtJQU9FLHVCQUNTLFFBQWtCLEVBQ2xCLFVBQTBCO1FBRDFCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsZUFBVSxHQUFWLFVBQVUsQ0FBZ0I7UUFKM0IsYUFBUSxHQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFNL0IsQ0FBQzs7OztJQUVELCtCQUFPOzs7SUFBUDtRQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ3RELENBQUM7Ozs7SUFFRCw4QkFBTTs7O0lBQU47UUFDRSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7O0lBRUQsaUNBQVM7OztJQUFUO1FBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxHQUFHLEdBQUcsQ0FBQztJQUNyQyxDQUFDOzs7O0lBRUQsK0JBQU87OztJQUFQO1FBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxtQ0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDMUQsQ0FBQzs7Z0JBL0JGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBSndCLFFBQVE7Z0JBQXhCLGNBQWM7Ozt3QkFEdkI7Q0FvQ0MsQUFqQ0QsSUFpQ0M7U0E5QlksYUFBYTs7Ozs7O0lBRXhCLGlDQUErQjs7SUFHN0IsaUNBQXlCOztJQUN6QixtQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1lbnVDb250cm9sbGVyLCBQbGF0Zm9ybSB9IGZyb20gJ0Bpb25pYy9hbmd1bGFyJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEFPTWVudVNlcnZpY2Uge1xyXG5cclxuICBwcml2YXRlIF9zdGFja2VkOiBhbnkgPSBbJ2xnJ107XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHVibGljIHBsYXRmb3JtOiBQbGF0Zm9ybSxcclxuICAgIHB1YmxpYyBjb250cm9sbGVyOiBNZW51Q29udHJvbGxlcixcclxuICApIHtcclxuICB9XHJcblxyXG4gIGRpc2FibGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb250cm9sbGVyLmVuYWJsZShmYWxzZSwgJ0FPX0FQUF9NRU5VJyk7XHJcbiAgfVxyXG5cclxuICBlbmFibGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb250cm9sbGVyLmVuYWJsZSh0cnVlLCAnQU9fQVBQX01FTlUnKTtcclxuICB9XHJcblxyXG4gIHN0YWNrYWJsZSgpIHtcclxuICAgIHJldHVybiB0aGlzLnBsYXRmb3JtLndpZHRoKCkgPiA5OTE7XHJcbiAgfVxyXG5cclxuICBzdGFja2VkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3N0YWNrZWQ7XHJcbiAgfVxyXG5cclxuICBzdGFja1RvZ2dsZSgpIHtcclxuICAgIHRoaXMuX3N0YWNrZWQgPSB0aGlzLl9zdGFja2VkID09IGZhbHNlID8gWydsZyddIDogZmFsc2U7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=