/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-container/ao-container.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class AOContainerService {
    constructor() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} directive
     * @return {THIS}
     */
    init(directive) {
        (/** @type {?} */ (this))._directive = directive;
        return (/** @type {?} */ (this));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} component
     * @param {?=} data
     * @return {THIS}
     */
    open(component, data = {}) {
        /** @type {?} */
        const instance = (/** @type {?} */ (this))._directive.open(component);
        instance.data = data;
        return (/** @type {?} */ (this));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    close() {
        (/** @type {?} */ (this))._directive.clear();
        return (/** @type {?} */ (this));
    }
}
AOContainerService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
AOContainerService.ctorParameters = () => [];
/** @nocollapse */ AOContainerService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AOContainerService_Factory() { return new AOContainerService(); }, token: AOContainerService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOContainerService.prototype._directive;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tY29udGFpbmVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hby1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvYW8tY29udGFpbmVyL2FvLWNvbnRhaW5lci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFPM0MsTUFBTSxPQUFPLGtCQUFrQjtJQUk3QjtJQUNBLENBQUM7Ozs7Ozs7SUFFRCxJQUFJLENBQUMsU0FBK0I7UUFDbEMsbUJBQUEsSUFBSSxFQUFBLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUM1QixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQzs7Ozs7Ozs7SUFFRCxJQUFJLENBQUMsU0FBYyxFQUFFLE9BQVksRUFBRTs7Y0FDM0IsUUFBUSxHQUFHLG1CQUFBLElBQUksRUFBQSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBRWhELFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBRXJCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDOzs7Ozs7SUFFRCxLQUFLO1FBQ0gsbUJBQUEsSUFBSSxFQUFBLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDOzs7WUExQkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7Ozs7Ozs7O0lBR0Msd0NBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgQU9Db250YWluZXJEaXJlY3RpdmUgfSBmcm9tICcuL2FvLWNvbnRhaW5lci5kaXJlY3RpdmUnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQU9Db250YWluZXJTZXJ2aWNlIHtcclxuXHJcbiAgcHJpdmF0ZSBfZGlyZWN0aXZlOiBBT0NvbnRhaW5lckRpcmVjdGl2ZTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBpbml0KGRpcmVjdGl2ZTogQU9Db250YWluZXJEaXJlY3RpdmUpIHtcclxuICAgIHRoaXMuX2RpcmVjdGl2ZSA9IGRpcmVjdGl2ZTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgb3Blbihjb21wb25lbnQ6IGFueSwgZGF0YTogYW55ID0ge30pIHtcclxuICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcy5fZGlyZWN0aXZlLm9wZW4oY29tcG9uZW50KTtcclxuXHJcbiAgICBpbnN0YW5jZS5kYXRhID0gZGF0YTtcclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fZGlyZWN0aXZlLmNsZWFyKCk7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG59XHJcbiJdfQ==