/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ao-container/ao-container.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ComponentFactoryResolver, Directive, ViewContainerRef } from '@angular/core';
export class AOContainerDirective {
    /**
     * @param {?} _content
     * @param {?} _resolver
     */
    constructor(_content, _resolver) {
        this._content = _content;
        this._resolver = _resolver;
        this._component = null;
    }
    /**
     * @return {?}
     */
    component() {
        return this._component;
    }
    /**
     * @return {?}
     */
    content() {
        return this._content;
    }
    /**
     * @return {?}
     */
    clear() {
        this.content().clear();
    }
    /**
     * @param {?} component
     * @return {?}
     */
    open(component) {
        this.clear();
        this._component = this.content().createComponent(typeof component !== 'function' ? component : this._resolver.resolveComponentFactory(component));
        this._component.instance.directive = this;
        return this._component.instance;
    }
}
AOContainerDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ao-container]'
            },] }
];
/** @nocollapse */
AOContainerDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: ComponentFactoryResolver }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOContainerDirective.prototype._component;
    /**
     * @type {?}
     * @private
     */
    AOContainerDirective.prototype._content;
    /**
     * @type {?}
     * @private
     */
    AOContainerDirective.prototype._resolver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tY29udGFpbmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FvLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9hby1jb250YWluZXIvYW8tY29udGFpbmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFLdEYsTUFBTSxPQUFPLG9CQUFvQjs7Ozs7SUFJL0IsWUFDVSxRQUEwQixFQUMxQixTQUFtQztRQURuQyxhQUFRLEdBQVIsUUFBUSxDQUFrQjtRQUMxQixjQUFTLEdBQVQsU0FBUyxDQUEwQjtRQUpyQyxlQUFVLEdBQVEsSUFBSSxDQUFDO0lBTS9CLENBQUM7Ozs7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFFRCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBRUQsSUFBSSxDQUFDLFNBQWM7UUFDakIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRWIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUM5QyxPQUFPLFNBQVMsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxTQUFTLENBQUMsQ0FDaEcsQ0FBQztRQUVGLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFFMUMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztJQUNsQyxDQUFDOzs7WUFuQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7YUFDM0I7Ozs7WUFKNkMsZ0JBQWdCO1lBQXJELHdCQUF3Qjs7Ozs7OztJQU8vQiwwQ0FBK0I7Ozs7O0lBRzdCLHdDQUFrQzs7Ozs7SUFDbEMseUNBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBEaXJlY3RpdmUsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2FvLWNvbnRhaW5lcl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBT0NvbnRhaW5lckRpcmVjdGl2ZSB7XHJcblxyXG4gIHByaXZhdGUgX2NvbXBvbmVudDogYW55ID0gbnVsbDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIF9jb250ZW50OiBWaWV3Q29udGFpbmVyUmVmLFxyXG4gICAgcHJpdmF0ZSBfcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlclxyXG4gICkge1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NvbXBvbmVudDtcclxuICB9XHJcblxyXG4gIGNvbnRlbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29udGVudDtcclxuICB9XHJcblxyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5jb250ZW50KCkuY2xlYXIoKTtcclxuICB9XHJcblxyXG4gIG9wZW4oY29tcG9uZW50OiBhbnkpIHtcclxuICAgIHRoaXMuY2xlYXIoKTtcclxuXHJcbiAgICB0aGlzLl9jb21wb25lbnQgPSB0aGlzLmNvbnRlbnQoKS5jcmVhdGVDb21wb25lbnQoXHJcbiAgICAgIHR5cGVvZiBjb21wb25lbnQgIT09ICdmdW5jdGlvbicgPyBjb21wb25lbnQgOiB0aGlzLl9yZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeShjb21wb25lbnQpXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2NvbXBvbmVudC5pbnN0YW5jZS5kaXJlY3RpdmUgPSB0aGlzO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jb21wb25lbnQuaW5zdGFuY2U7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=