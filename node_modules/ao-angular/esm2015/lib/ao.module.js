/**
 * @fileoverview added by tsickle
 * Generated from: lib/ao.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
//
// VENDORS
//
import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';
import { CommonModule, DatePipe } from '@angular/common';
// import {ChartsModule} from 'ng2-charts';
import { AngularFireAuthModule } from '@angular/fire/auth';
import { AngularFirestoreModule } from '@angular/fire/firestore';
import { AngularFireStorageModule } from '@angular/fire/storage';
import { AngularFireMessagingModule } from '@angular/fire/messaging';
import { FilterByPipe, GroupByPipe, NgPipesModule, OrderByPipe, PluckPipe, ReversePipe, SumPipe } from 'ngx-pipes';
//
// COMPONENTS
//
import { AOMenuComponent } from './components/ao-menu/ao-menu.component';
import { AOAppComponent } from './components/ao-app/ao-app.component';
import { AOContainerComponent } from './directives/ao-container/ao-container.component';
//
// PIPES
//
import { AONl2BrPipe } from './pipes/ao-ln2br.pipe';
//
// GUARDS
//
import { AOUserGuard } from './guards/ao-user.guard';
import { AOGuestGuard } from './guards/ao-guest.guard';
//
// DIRECTIVES
//
import { AOContainerDirective } from './directives/ao-container/ao-container.directive';
import { AOIsUserDirective } from './directives/ao-is-user/ao-is-user.directive';
import { AOIsGuestDirective } from './directives/ao-is-guest/ao-is-guest.directive';
import { AOStopPropagationDirective } from './directives/ao-stop-propagation/ao-stop-propagation.directive';
import { AOMaskDirective } from './directives/ao-mask/ao-mask.directive';
//
// SERVICES
//
import { AOEnvService } from './services/ao-env.service';
export class AOModule {
    /**
     * @param {?} environment
     * @return {?}
     */
    static forRoot(environment) {
        return {
            ngModule: AOModule,
            providers: [
                {
                    provide: AOEnvService,
                    useValue: environment,
                }
            ]
        };
    }
}
AOModule.decorators = [
    { type: NgModule, args: [{
                schemas: [
                    CUSTOM_ELEMENTS_SCHEMA
                ],
                imports: [
                    CommonModule,
                    NgPipesModule,
                    // ChartsModule,
                    AngularFireAuthModule,
                    AngularFirestoreModule,
                    AngularFireStorageModule,
                    AngularFireMessagingModule,
                ],
                exports: [
                    //
                    // MODULES
                    //
                    NgPipesModule,
                    // ChartsModule,
                    AngularFireAuthModule,
                    AngularFirestoreModule,
                    AngularFireStorageModule,
                    AngularFireMessagingModule,
                    //
                    // COMPONENTS
                    //
                    AOAppComponent,
                    AOMenuComponent,
                    AOContainerComponent,
                    //
                    // DIRECTIVES
                    //
                    AOContainerDirective,
                    AOIsUserDirective,
                    AOIsGuestDirective,
                    AOStopPropagationDirective,
                    AOMaskDirective,
                    //
                    // PIPES
                    //
                    AONl2BrPipe,
                    PluckPipe,
                    DatePipe,
                    OrderByPipe,
                    ReversePipe,
                    SumPipe,
                    FilterByPipe,
                    GroupByPipe,
                ],
                declarations: [
                    //
                    // COMPONENTS
                    //
                    AOAppComponent,
                    AOMenuComponent,
                    AOContainerComponent,
                    //
                    // DIRECTIVES
                    //
                    AOContainerDirective,
                    AOIsUserDirective,
                    AOIsGuestDirective,
                    AOStopPropagationDirective,
                    AOMaskDirective,
                    //
                    // PIPES
                    //
                    AONl2BrPipe,
                ],
                providers: [
                    //
                    // GUARDS
                    //
                    AOUserGuard,
                    AOGuestGuard,
                    //
                    // PIPES
                    //
                    AONl2BrPipe,
                    PluckPipe,
                    DatePipe,
                    OrderByPipe,
                    ReversePipe,
                    SumPipe,
                    FilterByPipe,
                    GroupByPipe,
                ],
                entryComponents: [
                    AOContainerComponent,
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,