/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-auth.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { EventEmitter, Injectable } from '@angular/core';
import { NavController } from '@ionic/angular';
import { LocalStorage } from 'ngx-webstorage';
import { BehaviorSubject } from 'rxjs';
import { AOService } from './ao.service';
import * as i0 from "@angular/core";
import * as i1 from "@ionic/angular";
import * as i2 from "./ao.service";
// @dynamic
export class AOAuthService {
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} _nav
     * @param {?} _ao
     */
    constructor(_nav, _ao) {
        this._nav = _nav;
        this._ao = _ao;
        this._redirect_default = '/';
        this.redirect = (/**
         * @return {?}
         */
        () => this._redirect);
        this.user = (/**
         * @return {?}
         */
        () => this._user);
        // -------------------------------------------------------------------------------------------------------------------
        this.isUser = (/**
         * @return {?}
         */
        () => !!this._user);
        this.isGuest = (/**
         * @return {?}
         */
        () => !this._user);
        this.id = (/**
         * @return {?}
         */
        () => this.isUser() ? this.user().id : null);
        this.name = (/**
         * @return {?}
         */
        () => this.isUser() ? this.user().name : null);
        this.email = (/**
         * @return {?}
         */
        () => this.isUser() ? this.user().email : null);
        this.image = (/**
         * @return {?}
         */
        () => this.isUser() ? this.user().image : null);
        this.verified = (/**
         * @return {?}
         */
        () => this.isUser() ? this.user().verified : null);
        this.permitions = (/**
         * @return {?}
         */
        () => this.isUser() ? this.user().permitions : null);
        // -------------------------------------------------------------------------------------------------------------------
        this.onLogin = (/**
         * @return {?}
         */
        () => AOAuthService._onLogin);
        this.onLogout = (/**
         * @return {?}
         */
        () => AOAuthService._onLogout);
        this.onChange = (/**
         * @return {?}
         */
        () => AOAuthService._onChange);
        AOAuthService._onChange = new BehaviorSubject(this.user());
    }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} provider
     * @return {?}
     */
    provider(provider = null) {
        if (provider == null) {
            return this._provider;
        }
        this._provider = provider;
        return this;
    }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} redirect
     * @return {THIS}
     */
    setRedirect(redirect) {
        (/** @type {?} */ (this))._redirect = redirect;
        return (/** @type {?} */ (this));
    }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} user
     * @return {THIS}
     */
    setUser(user) {
        (/** @type {?} */ (this))._user = user;
        (/** @type {?} */ (this)).onChange().next((/** @type {?} */ (this))._user);
        return (/** @type {?} */ (this));
    }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} data
     * @return {?}
     */
    login(data) {
        return this._ao.wait(this.provider().login(data)).then((/**
         * @param {?} user
         * @return {?}
         */
        (user) => {
            this.setUser(user);
            this.onLogin().emit();
            /** @type {?} */
            const redirect = this._redirect && this._redirect !== '/login'
                ? this._redirect
                : this._redirect_default;
            this._redirect = null;
            return this._nav.navigateRoot(redirect);
        }));
    }
    /**
     * @return {?}
     */
    logout() {
        return this._ao.wait(this.provider().logout()).then((/**
         * @return {?}
         */
        () => {
            this.setUser(null);
            this.onLogout();
            return this._nav.navigateRoot('/login');
        }));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    update(data) {
        return this._ao.wait(this.provider().update(data));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    updatePassword(data) {
        return this._ao.wait(this.provider().updatePassword(data));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    forgetPassword(data) {
        return this._ao.wait(this.provider().forgetPassword(data));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    resetPassword(data) {
        return this._ao.wait(this.provider().resetPassword(data));
    }
}
AOAuthService._onLogin = new EventEmitter();
AOAuthService._onLogout = new EventEmitter();
AOAuthService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
AOAuthService.ctorParameters = () => [
    { type: NavController },
    { type: AOService }
];
/** @nocollapse */ AOAuthService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AOAuthService_Factory() { return new AOAuthService(i0.ɵɵinject(i1.NavController), i0.ɵɵinject(i2.AOService)); }, token: AOAuthService, providedIn: "root" });
tslib_1.__decorate([
    LocalStorage('user'),
    tslib_1.__metadata("design:type", Object)
], AOAuthService.prototype, "_user", void 0);
tslib_1.__decorate([
    LocalStorage('redirect'),
    tslib_1.__metadata("design:type", String)
], AOAuthService.prototype, "_redirect", void 0);
if (false) {
    /** @type {?} */
    AOAuthService._onLogin;
    /** @type {?} */
    AOAuthService._onLogout;
    /** @type {?} */
    AOAuthService._onChange;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._user;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._redirect;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._redirect_default;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._provider;
    /** @type {?} */
    AOAuthService.prototype.redirect;
    /** @type {?} */
    AOAuthService.prototype.user;
    /** @type {?} */
    AOAuthService.prototype.isUser;
    /** @type {?} */
    AOAuthService.prototype.isGuest;
    /** @type {?} */
    AOAuthService.prototype.id;
    /** @type {?} */
    AOAuthService.prototype.name;
    /** @type {?} */
    AOAuthService.prototype.email;
    /** @type {?} */
    AOAuthService.prototype.image;
    /** @type {?} */
    AOAuthService.prototype.verified;
    /** @type {?} */
    AOAuthService.prototype.permitions;
    /** @type {?} */
    AOAuthService.prototype.onLogin;
    /** @type {?} */
    AOAuthService.prototype.onLogout;
    /** @type {?} */
    AOAuthService.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._nav;
    /**
     * @type {?}
     * @private
     */
    AOAuthService.prototype._ao;
}
//# sourceMappingURL=data:application/json;base64,