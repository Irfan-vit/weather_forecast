/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao-firebase-connection.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { AngularFireAuth } from '@angular/fire/auth';
import { AngularFireDatabase } from '@angular/fire/database';
import { AngularFireStorage } from '@angular/fire/storage';
import { AngularFirestore } from '@angular/fire/firestore';
import { AngularFireMessaging } from '@angular/fire/messaging';
export class AOFirebaseConnectionService {
    /**
     * @param {?} _name
     * @param {?} _hash
     * @param {?} _app
     * @param {?} _zone
     */
    constructor(_name, _hash, _app, _zone) {
        this._name = _name;
        this._hash = _hash;
        this._app = _app;
        this._zone = _zone;
        this._configs = {};
    }
    /**
     * @return {?}
     */
    app() {
        return this._app;
    }
    /**
     * @return {?}
     */
    name() {
        return this._name;
    }
    /**
     * @return {?}
     */
    hash() {
        return this._hash;
    }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    auth() {
        return this._auth
            ? this._auth
            : this._auth = new AngularFireAuth(this._configs, this._name, null, this._zone);
    }
    /**
     * @return {?}
     */
    database() {
        return this._database
            ? this._database
            : this._database = new AngularFireDatabase(this._configs, this._name, null, null, this._zone);
    }
    /**
     * @return {?}
     */
    firestore() {
        return this._firestore
            ? this._firestore
            : this._firestore = new AngularFirestore(this._configs, this._name, null, null, null, this._zone, null);
    }
    /**
     * @return {?}
     */
    messaging() {
        return this._messaging
            ? this._messaging
            : this._messaging = new AngularFireMessaging(this._configs, this._name, null, this._zone);
    }
    /**
     * @return {?}
     */
    storage() {
        return this._storage
            ? this._storage
            : this._storage = new AngularFireStorage(this._configs, this._name, null, null, this._zone);
    }
    // -------------------------------------------------------------------------------------------------------------------
    /**
     * @return {?}
     */
    logout() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (this._auth) {
                try {
                    yield this._auth.auth.signOut();
                }
                catch (e) {
                    console.warn('Oops! Failed to run signOut.');
                }
            }
            return Promise.resolve(true);
        });
    }
    /**
     * @return {?}
     */
    destroy() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.logout();
            yield this._app.delete();
            return Promise.resolve(true);
        });
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._configs;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._auth;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._database;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._firestore;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._messaging;
    /**
     * @type {?}
     * @private
     */
    AOFirebaseConnectionService.prototype._storage;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._name;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._hash;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._app;
    /**
     * @type {?}
     * @protected
     */
    AOFirebaseConnectionService.prototype._zone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tZmlyZWJhc2UtY29ubmVjdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW8tYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9hby1maXJlYmFzZS1jb25uZWN0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzdELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzNELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzNELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRS9ELE1BQU0sT0FBTywyQkFBMkI7Ozs7Ozs7SUFjdEMsWUFDWSxLQUFhLEVBQ2IsS0FBYSxFQUNiLElBQWlCLEVBQ2pCLEtBQWE7UUFIYixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUNiLFNBQUksR0FBSixJQUFJLENBQWE7UUFDakIsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQWhCakIsYUFBUSxHQUFvQixFQUFFLENBQUM7SUFrQnZDLENBQUM7Ozs7SUFFRCxHQUFHO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7Ozs7SUFFRCxJQUFJO1FBQ0YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFFRCxJQUFJO1FBQ0YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7O0lBSUQsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLEtBQUs7WUFDZixDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUs7WUFDWixDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwRixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLE9BQU8sSUFBSSxDQUFDLFNBQVM7WUFDbkIsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTO1lBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksbUJBQW1CLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xHLENBQUM7Ozs7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsVUFBVTtZQUNwQixDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVU7WUFDakIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM1RyxDQUFDOzs7O0lBRUQsU0FBUztRQUNQLE9BQU8sSUFBSSxDQUFDLFVBQVU7WUFDcEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVO1lBQ2pCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksb0JBQW9CLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUYsQ0FBQzs7OztJQUVELE9BQU87UUFDTCxPQUFPLElBQUksQ0FBQyxRQUFRO1lBQ2xCLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUTtZQUNmLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hHLENBQUM7Ozs7O0lBSUssTUFBTTs7WUFDVixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ2QsSUFBSTtvQkFDRixNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUNqQztnQkFBQyxPQUFPLENBQUMsRUFBRTtvQkFDVixPQUFPLENBQUMsSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUM7aUJBQzlDO2FBQ0Y7WUFDRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsQ0FBQztLQUFBOzs7O0lBRUssT0FBTzs7WUFDWCxNQUFNLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNwQixNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDekIsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9CLENBQUM7S0FBQTtDQUVGOzs7Ozs7SUFuRkMsK0NBQXVDOzs7OztJQUV2Qyw0Q0FBK0I7Ozs7O0lBRS9CLGdEQUF1Qzs7Ozs7SUFFdkMsaURBQXFDOzs7OztJQUVyQyxpREFBeUM7Ozs7O0lBRXpDLCtDQUFxQzs7Ozs7SUFHbkMsNENBQXVCOzs7OztJQUN2Qiw0Q0FBdUI7Ozs7O0lBQ3ZCLDJDQUEyQjs7Ozs7SUFDM0IsNENBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZpcmViYXNlQXBwLCBGaXJlYmFzZU9wdGlvbnMgfSBmcm9tICdAYW5ndWxhci9maXJlJztcclxuaW1wb3J0IHsgQW5ndWxhckZpcmVBdXRoIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZS9hdXRoJztcclxuaW1wb3J0IHsgQW5ndWxhckZpcmVEYXRhYmFzZSB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvZGF0YWJhc2UnO1xyXG5pbXBvcnQgeyBBbmd1bGFyRmlyZVN0b3JhZ2UgfSBmcm9tICdAYW5ndWxhci9maXJlL3N0b3JhZ2UnO1xyXG5pbXBvcnQgeyBBbmd1bGFyRmlyZXN0b3JlIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZS9maXJlc3RvcmUnO1xyXG5pbXBvcnQgeyBBbmd1bGFyRmlyZU1lc3NhZ2luZyB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvbWVzc2FnaW5nJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBT0ZpcmViYXNlQ29ubmVjdGlvblNlcnZpY2Uge1xyXG5cclxuICBwcml2YXRlIF9jb25maWdzOiBGaXJlYmFzZU9wdGlvbnMgPSB7fTtcclxuXHJcbiAgcHJpdmF0ZSBfYXV0aDogQW5ndWxhckZpcmVBdXRoO1xyXG5cclxuICBwcml2YXRlIF9kYXRhYmFzZTogQW5ndWxhckZpcmVEYXRhYmFzZTtcclxuXHJcbiAgcHJpdmF0ZSBfZmlyZXN0b3JlOiBBbmd1bGFyRmlyZXN0b3JlO1xyXG5cclxuICBwcml2YXRlIF9tZXNzYWdpbmc6IEFuZ3VsYXJGaXJlTWVzc2FnaW5nO1xyXG5cclxuICBwcml2YXRlIF9zdG9yYWdlOiBBbmd1bGFyRmlyZVN0b3JhZ2U7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJvdGVjdGVkIF9uYW1lOiBzdHJpbmcsXHJcbiAgICBwcm90ZWN0ZWQgX2hhc2g6IHN0cmluZyxcclxuICAgIHByb3RlY3RlZCBfYXBwOiBGaXJlYmFzZUFwcCxcclxuICAgIHByb3RlY3RlZCBfem9uZTogTmdab25lXHJcbiAgKSB7XHJcbiAgfVxyXG5cclxuICBhcHAoKTogRmlyZWJhc2VBcHAge1xyXG4gICAgcmV0dXJuIHRoaXMuX2FwcDtcclxuICB9XHJcblxyXG4gIG5hbWUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbmFtZTtcclxuICB9XHJcblxyXG4gIGhhc2goKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faGFzaDtcclxuICB9XHJcblxyXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgYXV0aCgpOiBBbmd1bGFyRmlyZUF1dGgge1xyXG4gICAgcmV0dXJuIHRoaXMuX2F1dGhcclxuICAgICAgPyB0aGlzLl9hdXRoXHJcbiAgICAgIDogdGhpcy5fYXV0aCA9IG5ldyBBbmd1bGFyRmlyZUF1dGgodGhpcy5fY29uZmlncywgdGhpcy5fbmFtZSwgbnVsbCwgdGhpcy5fem9uZSk7XHJcbiAgfVxyXG5cclxuICBkYXRhYmFzZSgpOiBBbmd1bGFyRmlyZURhdGFiYXNlIHtcclxuICAgIHJldHVybiB0aGlzLl9kYXRhYmFzZVxyXG4gICAgICA/IHRoaXMuX2RhdGFiYXNlXHJcbiAgICAgIDogdGhpcy5fZGF0YWJhc2UgPSBuZXcgQW5ndWxhckZpcmVEYXRhYmFzZSh0aGlzLl9jb25maWdzLCB0aGlzLl9uYW1lLCBudWxsLCBudWxsLCB0aGlzLl96b25lKTtcclxuICB9XHJcblxyXG4gIGZpcmVzdG9yZSgpOiBBbmd1bGFyRmlyZXN0b3JlIHtcclxuICAgIHJldHVybiB0aGlzLl9maXJlc3RvcmVcclxuICAgICAgPyB0aGlzLl9maXJlc3RvcmVcclxuICAgICAgOiB0aGlzLl9maXJlc3RvcmUgPSBuZXcgQW5ndWxhckZpcmVzdG9yZSh0aGlzLl9jb25maWdzLCB0aGlzLl9uYW1lLCBudWxsLCBudWxsLCBudWxsLCB0aGlzLl96b25lLCBudWxsKTtcclxuICB9XHJcblxyXG4gIG1lc3NhZ2luZygpOiBBbmd1bGFyRmlyZU1lc3NhZ2luZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVzc2FnaW5nXHJcbiAgICAgID8gdGhpcy5fbWVzc2FnaW5nXHJcbiAgICAgIDogdGhpcy5fbWVzc2FnaW5nID0gbmV3IEFuZ3VsYXJGaXJlTWVzc2FnaW5nKHRoaXMuX2NvbmZpZ3MsIHRoaXMuX25hbWUsIG51bGwsIHRoaXMuX3pvbmUpO1xyXG4gIH1cclxuXHJcbiAgc3RvcmFnZSgpOiBBbmd1bGFyRmlyZVN0b3JhZ2Uge1xyXG4gICAgcmV0dXJuIHRoaXMuX3N0b3JhZ2VcclxuICAgICAgPyB0aGlzLl9zdG9yYWdlXHJcbiAgICAgIDogdGhpcy5fc3RvcmFnZSA9IG5ldyBBbmd1bGFyRmlyZVN0b3JhZ2UodGhpcy5fY29uZmlncywgdGhpcy5fbmFtZSwgbnVsbCwgbnVsbCwgdGhpcy5fem9uZSk7XHJcbiAgfVxyXG5cclxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gIGFzeW5jIGxvZ291dCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIGlmICh0aGlzLl9hdXRoKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5fYXV0aC5hdXRoLnNpZ25PdXQoKTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIGNvbnNvbGUud2FybignT29wcyEgRmFpbGVkIHRvIHJ1biBzaWduT3V0LicpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZGVzdHJveSgpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIGF3YWl0IHRoaXMubG9nb3V0KCk7XHJcbiAgICBhd2FpdCB0aGlzLl9hcHAuZGVsZXRlKCk7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19