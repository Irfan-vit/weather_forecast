/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/ao.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ActionSheetController, AlertController, LoadingController, ModalController, Platform, ToastController } from '@ionic/angular';
import { AOString } from '../utils/ao-string';
import { AOContainerService } from '../directives/ao-container/ao-container.service';
import { AOMenuService } from '../services/ao-menu.service';
import * as i0 from "@angular/core";
import * as i1 from "@ionic/angular";
import * as i2 from "./ao-menu.service";
import * as i3 from "../directives/ao-container/ao-container.service";
export class AOService {
    /**
     * @param {?} platform
     * @param {?} ionLoading
     * @param {?} ionAlert
     * @param {?} ionModal
     * @param {?} ionSheet
     * @param {?} ionToast
     * @param {?} menu
     * @param {?} container
     */
    constructor(platform, ionLoading, ionAlert, ionModal, ionSheet, ionToast, menu, container) {
        this.platform = platform;
        this.ionLoading = ionLoading;
        this.ionAlert = ionAlert;
        this.ionModal = ionModal;
        this.ionSheet = ionSheet;
        this.ionToast = ionToast;
        this.menu = menu;
        this.container = container;
    }
    //--------------------------------------------------------------------------------------------------------------------
    // LOADING
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} promise
     * @param {?=} opts
     * @return {?}
     */
    wait(promise, opts = {}) {
        return this.ionLoading.create(Object.assign({ message: 'Carregando...' }, opts)).then((/**
         * @param {?} loading
         * @return {?}
         */
        loading => {
            return loading.present().then((/**
             * @return {?}
             */
            () => {
                promise.finally((/**
                 * @return {?}
                 */
                () => loading.dismiss()));
                return promise;
            }));
        }));
    }
    //--------------------------------------------------------------------------------------------------------------------
    // DROPDOWN
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?=} buttons
     * @param {?=} opts
     * @return {?}
     */
    sheet(buttons = {}, opts = {}) {
        return this.ionSheet.create(Object.assign({ header: 'Opções...', buttons }, opts)).then((/**
         * @param {?} sheet
         * @return {?}
         */
        sheet => {
            return sheet.present().then((/**
             * @return {?}
             */
            () => {
                return sheet;
            }));
        }));
    }
    //--------------------------------------------------------------------------------------------------------------------
    // MODAL
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} component
     * @param {?=} opts
     * @return {?}
     */
    modal(component, opts = {}) {
        return this.ionModal.create(Object.assign({ component }, opts)).then((/**
         * @param {?} modal
         * @return {?}
         */
        modal => {
            return modal.present().then((/**
             * @return {?}
             */
            () => {
                return modal;
            }));
        }));
    }
    //--------------------------------------------------------------------------------------------------------------------
    // ALERT
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    alert(message, opts = {}) {
        return this.ionAlert.create(Object.assign({ header: 'Atenção...', message, buttons: [
                { text: 'OK', role: 'OK' }
            ] }, opts)).then((/**
         * @param {?} alert
         * @return {?}
         */
        alert => {
            return alert.present().then((/**
             * @return {?}
             */
            () => {
                return alert.onDidDismiss();
            }));
        }));
    }
    //--------------------------------------------------------------------------------------------------------------------
    // PROMPT
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} inputs
     * @param {?=} opts
     * @return {?}
     */
    prompt(inputs, opts = {}) {
        return this.alert('', Object.assign({ header: 'Preencha...', inputs, buttons: [
                { text: 'CANCELAR', role: 'CANCEL' },
                { text: 'OK', role: 'OK' }
            ] }, opts));
    }
    //--------------------------------------------------------------------------------------------------------------------
    // CONFIRM
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    confirm(message, yes = (/**
     * @return {?}
     */
    () => null), no = (/**
     * @return {?}
     */
    () => null), opts = {}) {
        return this.alert(message, Object.assign({ header: 'Confirmação...', buttons: [
                { text: 'NÃO', role: 'NO' },
                { text: 'SIM', role: 'YES' }
            ] }, opts)).then((/**
         * @param {?} response
         * @return {?}
         */
        response => {
            response.role == 'YES' ? yes() : no();
            return response;
        }));
    }
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    confirmOperation(yes = (/**
     * @return {?}
     */
    () => null), no = (/**
     * @return {?}
     */
    () => null), opts = {}) {
        return this.confirm('Deseja realmente <b>realizar</b> esta operação?', yes, no, opts);
    }
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    confirmActivate(yes = (/**
     * @return {?}
     */
    () => null), no = (/**
     * @return {?}
     */
    () => null), opts = {}) {
        return this.confirm('Deseja realmente <b>ativar</b> este item?', yes, no, opts);
    }
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    confirmDeactivate(yes = (/**
     * @return {?}
     */
    () => null), no = (/**
     * @return {?}
     */
    () => null), opts = {}) {
        return this.confirm('Deseja realmente <b>desativar</b> este item?', yes, no, opts);
    }
    /**
     * @param {?=} yes
     * @param {?=} no
     * @param {?=} opts
     * @return {?}
     */
    confirmDestroy(yes = (/**
     * @return {?}
     */
    () => null), no = (/**
     * @return {?}
     */
    () => null), opts = {}) {
        return this.confirm('Deseja realmente <b>excluir</b> este item?', yes, no, opts);
    }
    //--------------------------------------------------------------------------------------------------------------------
    // TOAST
    //--------------------------------------------------------------------------------------------------------------------
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    toast(message, opts = {}) {
        return this.ionToast.create(Object.assign({ message, duration: AOString.readingTime(message) }, opts)).then((/**
         * @param {?} toast
         * @return {?}
         */
        toast => {
            return toast.present().then((/**
             * @return {?}
             */
            () => {
                return toast.onDidDismiss();
            }));
        }));
    }
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    info(message, opts = {}) {
        //console.info(message);
        return this.toast(message, Object.assign({ color: 'tertiary' }, opts));
    }
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    success(message, opts = {}) {
        //console.log(message);
        return this.toast(message, Object.assign({ color: 'success' }, opts));
    }
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    warning(message, opts = {}) {
        console.warn(message);
        return this.toast(message, Object.assign({ color: 'warning' }, opts));
    }
    /**
     * @param {?} message
     * @param {?=} opts
     * @return {?}
     */
    danger(message, opts = {}) {
        console.error(message, opts.error);
        return this.toast(message, Object.assign({ color: 'danger' }, opts));
    }
}
AOService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
AOService.ctorParameters = () => [
    { type: Platform },
    { type: LoadingController },
    { type: AlertController },
    { type: ModalController },
    { type: ActionSheetController },
    { type: ToastController },
    { type: AOMenuService },
    { type: AOContainerService }
];
/** @nocollapse */ AOService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AOService_Factory() { return new AOService(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i1.LoadingController), i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i1.ModalController), i0.ɵɵinject(i1.ActionSheetController), i0.ɵɵinject(i1.ToastController), i0.ɵɵinject(i2.AOMenuService), i0.ɵɵinject(i3.AOContainerService)); }, token: AOService, providedIn: "root" });
if (false) {
    /** @type {?} */
    AOService.prototype.platform;
    /** @type {?} */
    AOService.prototype.ionLoading;
    /** @type {?} */
    AOService.prototype.ionAlert;
    /** @type {?} */
    AOService.prototype.ionModal;
    /** @type {?} */
    AOService.prototype.ionSheet;
    /** @type {?} */
    AOService.prototype.ionToast;
    /** @type {?} */
    AOService.prototype.menu;
    /** @type {?} */
    AOService.prototype.container;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FvLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvYW8uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixlQUFlLEVBQ2YsaUJBQWlCLEVBQ2pCLGVBQWUsRUFDZixRQUFRLEVBQ1IsZUFBZSxFQUNoQixNQUFNLGdCQUFnQixDQUFDO0FBRXhCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUNyRixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7O0FBSzVELE1BQU0sT0FBTyxTQUFTOzs7Ozs7Ozs7OztJQUVwQixZQUNTLFFBQWtCLEVBQ2xCLFVBQTZCLEVBQzdCLFFBQXlCLEVBQ3pCLFFBQXlCLEVBQ3pCLFFBQStCLEVBQy9CLFFBQXlCLEVBQ3pCLElBQW1CLEVBQ25CLFNBQTZCO1FBUDdCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsZUFBVSxHQUFWLFVBQVUsQ0FBbUI7UUFDN0IsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDekIsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDekIsYUFBUSxHQUFSLFFBQVEsQ0FBdUI7UUFDL0IsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDekIsU0FBSSxHQUFKLElBQUksQ0FBZTtRQUNuQixjQUFTLEdBQVQsU0FBUyxDQUFvQjtJQUV0QyxDQUFDOzs7Ozs7Ozs7SUFNRCxJQUFJLENBQUMsT0FBcUIsRUFBRSxPQUFZLEVBQUU7UUFDeEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0saUJBQUUsT0FBTyxFQUFFLGVBQWUsSUFBSyxJQUFJLEVBQUUsQ0FBQyxJQUFJOzs7O1FB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RUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sa0JBQUcsS0FBSyxFQUFFLFFBQVEsSUFBSyxJQUFJLEVBQUUsQ0FBQztJQUN6RCxDQUFDOzs7WUExTEYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7O1lBVkMsUUFBUTtZQUZSLGlCQUFpQjtZQURqQixlQUFlO1lBRWYsZUFBZTtZQUhmLHFCQUFxQjtZQUtyQixlQUFlO1lBS1IsYUFBYTtZQURiLGtCQUFrQjs7Ozs7SUFTdkIsNkJBQXlCOztJQUN6QiwrQkFBb0M7O0lBQ3BDLDZCQUFnQzs7SUFDaEMsNkJBQWdDOztJQUNoQyw2QkFBc0M7O0lBQ3RDLDZCQUFnQzs7SUFDaEMseUJBQTBCOztJQUMxQiw4QkFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgQWN0aW9uU2hlZXRDb250cm9sbGVyLFxyXG4gIEFsZXJ0Q29udHJvbGxlcixcclxuICBMb2FkaW5nQ29udHJvbGxlcixcclxuICBNb2RhbENvbnRyb2xsZXIsXHJcbiAgUGxhdGZvcm0sXHJcbiAgVG9hc3RDb250cm9sbGVyXHJcbn0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xyXG5cclxuaW1wb3J0IHsgQU9TdHJpbmcgfSBmcm9tICcuLi91dGlscy9hby1zdHJpbmcnO1xyXG5pbXBvcnQgeyBBT0NvbnRhaW5lclNlcnZpY2UgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2FvLWNvbnRhaW5lci9hby1jb250YWluZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IEFPTWVudVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hby1tZW51LnNlcnZpY2UnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQU9TZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwdWJsaWMgcGxhdGZvcm06IFBsYXRmb3JtLFxyXG4gICAgcHVibGljIGlvbkxvYWRpbmc6IExvYWRpbmdDb250cm9sbGVyLFxyXG4gICAgcHVibGljIGlvbkFsZXJ0OiBBbGVydENvbnRyb2xsZXIsXHJcbiAgICBwdWJsaWMgaW9uTW9kYWw6IE1vZGFsQ29udHJvbGxlcixcclxuICAgIHB1YmxpYyBpb25TaGVldDogQWN0aW9uU2hlZXRDb250cm9sbGVyLFxyXG4gICAgcHVibGljIGlvblRvYXN0OiBUb2FzdENvbnRyb2xsZXIsXHJcbiAgICBwdWJsaWMgbWVudTogQU9NZW51U2VydmljZSxcclxuICAgIHB1YmxpYyBjb250YWluZXI6IEFPQ29udGFpbmVyU2VydmljZSxcclxuICApIHtcclxuICB9XHJcblxyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAvLyBMT0FESU5HXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICB3YWl0KHByb21pc2U6IFByb21pc2U8YW55Piwgb3B0czogYW55ID0ge30pIHtcclxuICAgIHJldHVybiB0aGlzLmlvbkxvYWRpbmcuY3JlYXRlKHttZXNzYWdlOiAnQ2FycmVnYW5kby4uLicsIC4uLm9wdHN9KS50aGVuKGxvYWRpbmcgPT4ge1xyXG5cclxuICAgICAgcmV0dXJuIGxvYWRpbmcucHJlc2VudCgpLnRoZW4oKCkgPT4ge1xyXG5cclxuICAgICAgICBwcm9taXNlLmZpbmFsbHkoKCkgPT4gbG9hZGluZy5kaXNtaXNzKCkpO1xyXG4gICAgICAgIHJldHVybiBwcm9taXNlO1xyXG5cclxuICAgICAgfSk7XHJcblxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgLy8gRFJPUERPV05cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gIHNoZWV0KGJ1dHRvbnM6IGFueSA9IHt9LCBvcHRzOiBhbnkgPSB7fSkge1xyXG4gICAgcmV0dXJuIHRoaXMuaW9uU2hlZXQuY3JlYXRlKHtoZWFkZXI6ICdPcMOnw7Vlcy4uLicsIGJ1dHRvbnMsIC4uLm9wdHN9KS50aGVuKHNoZWV0ID0+IHtcclxuXHJcbiAgICAgIHJldHVybiBzaGVldC5wcmVzZW50KCkudGhlbigoKSA9PiB7XHJcblxyXG4gICAgICAgIHJldHVybiBzaGVldDtcclxuXHJcbiAgICAgIH0pO1xyXG5cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIC8vIE1PREFMXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICBtb2RhbChjb21wb25lbnQsIG9wdHM6IGFueSA9IHt9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5pb25Nb2RhbC5jcmVhdGUoe2NvbXBvbmVudCwgLi4ub3B0c30pLnRoZW4obW9kYWwgPT4ge1xyXG5cclxuICAgICAgcmV0dXJuIG1vZGFsLnByZXNlbnQoKS50aGVuKCgpID0+IHtcclxuXHJcbiAgICAgICAgcmV0dXJuIG1vZGFsO1xyXG5cclxuICAgICAgfSk7XHJcblxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgLy8gQUxFUlRcclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gIGFsZXJ0KG1lc3NhZ2U6IHN0cmluZywgb3B0czogYW55ID0ge30pIHtcclxuICAgIHJldHVybiB0aGlzLmlvbkFsZXJ0LmNyZWF0ZShcclxuICAgICAge1xyXG4gICAgICAgIGhlYWRlcjogJ0F0ZW7Dp8Ojby4uLicsXHJcbiAgICAgICAgbWVzc2FnZSxcclxuICAgICAgICBidXR0b25zOiBbXHJcbiAgICAgICAgICB7dGV4dDogJ09LJywgcm9sZTogJ09LJ31cclxuICAgICAgICBdLFxyXG4gICAgICAgIC4uLm9wdHNcclxuICAgICAgfVxyXG4gICAgKS50aGVuKGFsZXJ0ID0+IHtcclxuXHJcbiAgICAgIHJldHVybiBhbGVydC5wcmVzZW50KCkudGhlbigoKSA9PiB7XHJcblxyXG4gICAgICAgIHJldHVybiBhbGVydC5vbkRpZERpc21pc3MoKTtcclxuXHJcbiAgICAgIH0pO1xyXG5cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIC8vIFBST01QVFxyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgcHJvbXB0KGlucHV0czogYW55W10sIG9wdHM6IGFueSA9IHt9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5hbGVydCgnJywge1xyXG4gICAgICBoZWFkZXI6ICdQcmVlbmNoYS4uLicsXHJcblxyXG4gICAgICBpbnB1dHMsXHJcblxyXG4gICAgICBidXR0b25zOiBbXHJcbiAgICAgICAge3RleHQ6ICdDQU5DRUxBUicsIHJvbGU6ICdDQU5DRUwnfSxcclxuICAgICAgICB7dGV4dDogJ09LJywgcm9sZTogJ09LJ31cclxuICAgICAgXSxcclxuXHJcbiAgICAgIC4uLm9wdHNcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIC8vIENPTkZJUk1cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gIGNvbmZpcm0obWVzc2FnZTogc3RyaW5nLCB5ZXMgPSAoKSA9PiBudWxsLCBubyA9ICgpID0+IG51bGwsIG9wdHM6IGFueSA9IHt9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5hbGVydChtZXNzYWdlLCB7XHJcblxyXG4gICAgICBoZWFkZXI6ICdDb25maXJtYcOnw6NvLi4uJyxcclxuXHJcbiAgICAgIGJ1dHRvbnM6IFtcclxuICAgICAgICB7dGV4dDogJ07Dg08nLCByb2xlOiAnTk8nfSxcclxuICAgICAgICB7dGV4dDogJ1NJTScsIHJvbGU6ICdZRVMnfVxyXG4gICAgICBdLFxyXG5cclxuICAgICAgLi4ub3B0c1xyXG5cclxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG5cclxuICAgICAgcmVzcG9uc2Uucm9sZSA9PSAnWUVTJyA/IHllcygpIDogbm8oKTtcclxuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG5cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY29uZmlybU9wZXJhdGlvbih5ZXMgPSAoKSA9PiBudWxsLCBubyA9ICgpID0+IG51bGwsIG9wdHM6IGFueSA9IHt9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maXJtKCdEZXNlamEgcmVhbG1lbnRlIDxiPnJlYWxpemFyPC9iPiBlc3RhIG9wZXJhw6fDo28/JywgeWVzLCBubywgb3B0cyk7XHJcbiAgfVxyXG5cclxuICBjb25maXJtQWN0aXZhdGUoeWVzID0gKCkgPT4gbnVsbCwgbm8gPSAoKSA9PiBudWxsLCBvcHRzOiBhbnkgPSB7fSkge1xyXG4gICAgcmV0dXJuIHRoaXMuY29uZmlybSgnRGVzZWphIHJlYWxtZW50ZSA8Yj5hdGl2YXI8L2I+IGVzdGUgaXRlbT8nLCB5ZXMsIG5vLCBvcHRzKTtcclxuICB9XHJcblxyXG4gIGNvbmZpcm1EZWFjdGl2YXRlKHllcyA9ICgpID0+IG51bGwsIG5vID0gKCkgPT4gbnVsbCwgb3B0czogYW55ID0ge30pIHtcclxuICAgIHJldHVybiB0aGlzLmNvbmZpcm0oJ0Rlc2VqYSByZWFsbWVudGUgPGI+ZGVzYXRpdmFyPC9iPiBlc3RlIGl0ZW0/JywgeWVzLCBubywgb3B0cyk7XHJcbiAgfVxyXG5cclxuICBjb25maXJtRGVzdHJveSh5ZXMgPSAoKSA9PiBudWxsLCBubyA9ICgpID0+IG51bGwsIG9wdHM6IGFueSA9IHt9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maXJtKCdEZXNlamEgcmVhbG1lbnRlIDxiPmV4Y2x1aXI8L2I+IGVzdGUgaXRlbT8nLCB5ZXMsIG5vLCBvcHRzKTtcclxuICB9XHJcblxyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAvLyBUT0FTVFxyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgdG9hc3QobWVzc2FnZTogc3RyaW5nLCBvcHRzOiBhbnkgPSB7fSkge1xyXG4gICAgcmV0dXJuIHRoaXMuaW9uVG9hc3QuY3JlYXRlKHtcclxuICAgICAgbWVzc2FnZSxcclxuICAgICAgZHVyYXRpb246IEFPU3RyaW5nLnJlYWRpbmdUaW1lKG1lc3NhZ2UpLFxyXG4gICAgICAuLi5vcHRzXHJcbiAgICB9KS50aGVuKHRvYXN0ID0+IHtcclxuICAgICAgcmV0dXJuIHRvYXN0LnByZXNlbnQoKS50aGVuKCgpID0+IHtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRvYXN0Lm9uRGlkRGlzbWlzcygpO1xyXG5cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGluZm8obWVzc2FnZTogc3RyaW5nLCBvcHRzOiBhbnkgPSB7fSkge1xyXG4gICAgLy9jb25zb2xlLmluZm8obWVzc2FnZSk7XHJcbiAgICByZXR1cm4gdGhpcy50b2FzdChtZXNzYWdlLCB7Y29sb3I6ICd0ZXJ0aWFyeScsIC4uLm9wdHN9KTtcclxuICB9XHJcblxyXG4gIHN1Y2Nlc3MobWVzc2FnZTogc3RyaW5nLCBvcHRzOiBhbnkgPSB7fSkge1xyXG4gICAgLy9jb25zb2xlLmxvZyhtZXNzYWdlKTtcclxuICAgIHJldHVybiB0aGlzLnRvYXN0KG1lc3NhZ2UsIHtjb2xvcjogJ3N1Y2Nlc3MnLCAuLi5vcHRzfSk7XHJcbiAgfVxyXG5cclxuICB3YXJuaW5nKG1lc3NhZ2U6IHN0cmluZywgb3B0czogYW55ID0ge30pIHtcclxuICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcclxuICAgIHJldHVybiB0aGlzLnRvYXN0KG1lc3NhZ2UsIHtjb2xvcjogJ3dhcm5pbmcnLCAuLi5vcHRzfSk7XHJcbiAgfVxyXG5cclxuICBkYW5nZXIobWVzc2FnZTogc3RyaW5nLCBvcHRzOiBhbnkgPSB7fSkge1xyXG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlLCBvcHRzLmVycm9yKTtcclxuICAgIHJldHVybiB0aGlzLnRvYXN0KG1lc3NhZ2UsIHtjb2xvcjogJ2RhbmdlcicsIC4uLm9wdHN9KTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==