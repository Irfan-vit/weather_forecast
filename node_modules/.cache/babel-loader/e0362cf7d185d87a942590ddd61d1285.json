{"ast":null,"code":"import _slicedToArray from \"/home/sagewizard/Documents/GitHub/weather_forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sagewizard/Documents/GitHub/weather_forecast/src/components/Forecast/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"./Forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Forecast(_ref) {\n  _s();\n\n  var _this = this;\n\n  var forecast = _ref.forecast;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    if (forecast) {\n      setData(forecast);\n    }\n  }, [forecast]);\n  console.log(\"forecast\", forecast);\n  return data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"forecast__title\",\n      children: \"7 day weather foreacast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        height: 500,\n        border: \"1px solid #ddd\",\n        borderRadius: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"forecast__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.list.map(function (day) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"forecast__row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"forecast__table-left\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"forecast__table-left_date\",\n                    children: /*#__PURE__*/_jsxDEV(Moment, {\n                      unix: true,\n                      format: \"ddd, DD MMM\",\n                      children: day.dt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 28,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 27,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"forecast__table-left_time\",\n                    children: [/*#__PURE__*/_jsxDEV(Moment, {\n                      unix: true,\n                      format: \"LT\",\n                      children: day.dt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"https://openweathermap.org/img/w/\".concat(day.weather[0].icon, \".png\"),\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"forecast__table-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"forecast__temp forecast__temp-max\",\n                      children: [day.main.temp_max, \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"forecast__temp-desc\",\n                      children: day.weather[0].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"forecast__humidity\",\n                      children: [\"Humidity: \", day.main.humidity, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 23\n                    }, _this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"forecast__wind\",\n                      children: [\"Wind: \", day.wind.speed, \" m/s,\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"forecast__clouds\",\n                      children: [\"Clouds: \", day.clouds.all, \"%,\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 23\n                    }, _this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"forecast__pressure\",\n                      children: [day.main.pressure, \" hpa\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, _this)]\n              }, day.dt, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : \"\";\n}\n\n_s(Forecast, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = Forecast;\nexport default _c2 = /*#__PURE__*/React.memo(Forecast);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Forecast\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/sagewizard/Documents/GitHub/weather_forecast/src/components/Forecast/Forecast.js"],"names":["React","useState","useEffect","Moment","Scrollbars","Forecast","forecast","data","setData","console","log","height","border","borderRadius","list","map","day","dt","weather","icon","main","temp_max","description","humidity","wind","speed","clouds","all","pressure","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"./Forecast.css\";\n\nfunction Forecast({ forecast }) {\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (forecast) {\n      setData(forecast);\n    }\n  }, [forecast]);\n  console.log(\"forecast\", forecast);\n\n  return data ? (\n    <>\n      <h2 className=\"forecast__title\">7 day weather foreacast</h2>\n      <Scrollbars\n        style={{ height: 500, border: \"1px solid #ddd\", borderRadius: \"5px\" }}\n      >\n        <div>\n          <table className=\"forecast__table\">\n            <tbody>\n              {data.list.map(day => (\n                <tr key={day.dt} className=\"forecast__row\">\n                  <td className=\"forecast__table-left\">\n                    <div className=\"forecast__table-left_date\">\n                      <Moment unix format=\"ddd, DD MMM\">\n                        {day.dt}\n                      </Moment>\n                    </div>\n                    <div className=\"forecast__table-left_time\">\n                      <Moment unix format=\"LT\">\n                        {day.dt}\n                      </Moment>\n                      <img\n                        src={`https://openweathermap.org/img/w/${\n                          day.weather[0].icon\n                        }.png`}\n                        alt=\"\"\n                      />\n                    </div>\n                  </td>\n                  <td className=\"forecast__table-right\">\n                    <div>\n                      <span className=\"forecast__temp forecast__temp-max\">\n                        {day.main.temp_max} &deg;C\n                      </span>\n                      <span className=\"forecast__temp-desc\">\n                        {day.weather[0].description}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"forecast__humidity\">\n                        Humidity: {day.main.humidity}%\n                      </span>{\" \"}\n                      |\n                      <span className=\"forecast__wind\">\n                        Wind: {day.wind.speed} m/s,\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"forecast__clouds\">\n                        Clouds: {day.clouds.all}%,{\" \"}\n                      </span>{\" \"}\n                      |\n                      <span className=\"forecast__pressure\">\n                        {day.main.pressure} hpa{\" \"}\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </Scrollbars>\n    </>\n  ) : (\n    \"\"\n  );\n}\n\nexport default React.memo(Forecast);\n"]},"metadata":{},"sourceType":"module"}