{"ast":null,"code":"import _slicedToArray from \"/home/sagewizard/Documents/GitHub/weather_forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\n// Custom hook to get geolocation data from the browser navigator object\nimport { useState, useEffect } from \"react\";\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 10000\n};\n\nvar useGeolocation = function useGeolocation() {\n  _s();\n\n  // location - variable used to store location data from geolocation API => Object\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  useEffect(function () {\n    if (navigator.geolocation) {\n      // get location\n      navigator.geolocation.getCurrentPosition( // success function\n      function (pos) {\n        // check to avoid refetching geolocation in firefox\n        if (location && location.accuracy === pos.coords.accuracy) return;\n        setLocation(pos.coords);\n      }, // error function\n      function (err) {\n        return console.log(err);\n      }, // optional options object\n      options);\n    }\n  }, [location]);\n  return location;\n};\n\n_s(useGeolocation, \"PTP6gujMiAtYQq3RoMoVBEZNym0=\");\n\nexport default useGeolocation;","map":{"version":3,"sources":["/home/sagewizard/Documents/GitHub/weather_forecast/src/utilities/useGeolocation.js"],"names":["useState","useEffect","options","enableHighAccuracy","timeout","maximumAge","useGeolocation","location","setLocation","navigator","geolocation","getCurrentPosition","pos","accuracy","coords","err","console","log"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAIC,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,IADR;AAEZC,EAAAA,OAAO,EAAE,IAFG;AAGZC,EAAAA,UAAU,EAAE;AAHA,CAAd;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAC3B;AACA,kBAAgCN,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,SAAS,CAACC,WAAd,EAA2B;AACzB;AACAD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,EACE;AACA,gBAAAC,GAAG,EAAI;AACL;AACA,YAAIL,QAAQ,IAAIA,QAAQ,CAACM,QAAT,KAAsBD,GAAG,CAACE,MAAJ,CAAWD,QAAjD,EAA2D;AAC3DL,QAAAA,WAAW,CAACI,GAAG,CAACE,MAAL,CAAX;AACD,OANH,EAQE;AACA,gBAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OATL,EAWE;AACAb,MAAAA,OAZF;AAcD;AACF,GAlBQ,EAkBN,CAACK,QAAD,CAlBM,CAAT;AAmBA,SAAOA,QAAP;AACD,CAvBD;;GAAMD,c;;AAyBN,eAAeA,cAAf","sourcesContent":["// Custom hook to get geolocation data from the browser navigator object\nimport { useState, useEffect } from \"react\";\n\nlet options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 10000\n};\n\nconst useGeolocation = () => {\n  // location - variable used to store location data from geolocation API => Object\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // get location\n      navigator.geolocation.getCurrentPosition(\n        // success function\n        pos => {\n          // check to avoid refetching geolocation in firefox\n          if (location && location.accuracy === pos.coords.accuracy) return;\n          setLocation(pos.coords);\n        },\n\n        // error function\n        err => console.log(err),\n\n        // optional options object\n        options\n      );\n    }\n  }, [location]);\n  return location;\n};\n\nexport default useGeolocation;\n"]},"metadata":{},"sourceType":"module"}