{"ast":null,"code":"import _slicedToArray from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sagewizard/Desktop/kewrt/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useGeoWeather, useQueryWeather } from \"../../utilities/useWeather\";\nimport useForecastWeather from \"../../utilities/useForecastData\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Forecast from \"../Forecast/Forecast\";\nimport Chart from \"../Chart/Chart\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  // useRef to ref the input tag in search component\n  var inputRef = useRef(\"\"); // data - variable to store fetch data => Object\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; // Effect for geolocation search\n  // let location = useGeolocation();\n\n\n  var geoWeatherData = useGeoWeather();\n  useEffect(function () {\n    if (geoWeatherData) {\n      setData(geoWeatherData);\n    }\n  }, [geoWeatherData]); // Effect for query search\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var queryWeatherData = useQueryWeather(query);\n  useEffect(function () {\n    if (queryWeatherData) {\n      setData(queryWeatherData);\n    }\n  }, [queryWeatherData]); // Effect for Forecast\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      forecast = _useState6[0],\n      setForecast = _useState6[1];\n\n  var forecastData = useForecastWeather(query);\n  useEffect(function () {\n    if (forecastData) {\n      setForecast(forecastData);\n    }\n  }, [forecastData]); // function to handle submit request\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); // if input field is empty - return\n\n    if (inputRef.current.value === \"\") return;\n    setQuery(inputRef.current.value); // set Input field to empty string after submit\n\n    inputRef.current.value = \"\";\n  };\n\n  return !data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"../../assets/loader.gif\"),\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      inputRef: inputRef,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Current weather and forecast Of\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 24,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: data && data.cod === \"200\" ? /*#__PURE__*/_jsxDEV(Sidebar, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 43\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: data && data.cod === \"200\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : data && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.message.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 24,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: forecast && forecast.cod === \"200\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"disclaimer\",\n            children: \"The weather forecast is displayed in accordance with your local time. Please pay attention to it when you will watch the weather in another time zone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          className: \"forecast__main\",\n          children: forecast && forecast.cod === \"200\" ? /*#__PURE__*/_jsxDEV(Forecast, {\n            forecast: forecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"K/ukq20vIZJa+UzLDrk5+rfbQtg=\", false, function () {\n  return [useGeoWeather, useQueryWeather, useForecastWeather];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/sagewizard/Desktop/kewrt/src/components/Main/Main.js"],"names":["React","useState","useEffect","useRef","useGeoWeather","useQueryWeather","useForecastWeather","Searchbar","Sidebar","Forecast","Chart","Grid","Main","inputRef","data","setData","geoWeatherData","query","setQuery","queryWeatherData","forecast","setForecast","forecastData","handleSubmit","e","preventDefault","current","value","require","cod","message","toUpperCase"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,4BAA/C;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd;AACA,MAAMC,QAAQ,GAAGV,MAAM,CAAC,EAAD,CAAvB,CAFc,CAGd;;AACA,kBAAwBF,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb,iBAJc,CAMd;AACA;;;AACA,MAAIC,cAAc,GAAGZ,aAAa,EAAlC;AACAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,cAAJ,EAAoB;AAClBD,MAAAA,OAAO,CAACC,cAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACA,cAAD,CAJM,CAAT,CATc,CAed;;AACA,mBAA0Bf,QAAQ,EAAlC;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAIC,gBAAgB,GAAGd,eAAe,CAACY,KAAD,CAAtC;AACAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiB,gBAAJ,EAAsB;AACpBJ,MAAAA,OAAO,CAACI,gBAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACA,gBAAD,CAJM,CAAT,CAlBc,CAwBd;;AACA,mBAAgClB,QAAQ,EAAxC;AAAA;AAAA,MAAOmB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAIC,YAAY,GAAGhB,kBAAkB,CAACW,KAAD,CAArC;AACAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,YAAJ,EAAkB;AAChBD,MAAAA,WAAW,CAACC,YAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT,CA3Bc,CAiCd;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAExB;;AACA,QAAIZ,QAAQ,CAACa,OAAT,CAAiBC,KAAjB,KAA2B,EAA/B,EAAmC;AAEnCT,IAAAA,QAAQ,CAACL,QAAQ,CAACa,OAAT,CAAiBC,KAAlB,CAAR,CALwB,CAOxB;;AACAd,IAAAA,QAAQ,CAACa,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACD,GATD;;AAWA,SAAO,CAACb,IAAD,gBACL;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEc,OAAO,CAAC,yBAAD,CAAjB;AAA8C,MAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEf,QAArB;AAA+B,MAAA,YAAY,EAAEU;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,oBACGT,IAAI,IAAIA,IAAI,CAACe,GAAL,KAAa,KAArB,gBAA6B,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEf;AAAf;AAAA;AAAA;AAAA;AAAA,kBAA7B,GAAuD;AAD1D;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,oBACGA,IAAI,IAAIA,IAAI,CAACe,GAAL,KAAa,KAArB,gBACC,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEf;AAAb;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCA,IAAI,iBAAI;AAAA,sBAAKA,IAAI,CAACgB,OAAL,CAAaC,WAAb;AAAL;AAAA;AAAA;AAAA;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,oBACGX,QAAQ,IAAIA,QAAQ,CAACS,GAAT,KAAiB,KAA7B,gBACC;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAOC;AARJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,SAAS,EAAC,gBAApC;AAAA,oBACGT,QAAQ,IAAIA,QAAQ,CAACS,GAAT,KAAiB,KAA7B,gBACC,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AA4CD;;GAzFQR,I;UAQcR,a,EASEC,e,EASJC,kB;;;KA1BZM,I;AA2FT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useGeoWeather, useQueryWeather } from \"../../utilities/useWeather\";\nimport useForecastWeather from \"../../utilities/useForecastData\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Forecast from \"../Forecast/Forecast\";\nimport Chart from \"../Chart/Chart\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./Main.css\";\n\nfunction Main() {\n  // useRef to ref the input tag in search component\n  const inputRef = useRef(\"\");\n  // data - variable to store fetch data => Object\n  const [data, setData] = useState(null);\n\n  // Effect for geolocation search\n  // let location = useGeolocation();\n  let geoWeatherData = useGeoWeather();\n  useEffect(() => {\n    if (geoWeatherData) {\n      setData(geoWeatherData);\n    }\n  }, [geoWeatherData]);\n\n  // Effect for query search\n  const [query, setQuery] = useState();\n  let queryWeatherData = useQueryWeather(query);\n  useEffect(() => {\n    if (queryWeatherData) {\n      setData(queryWeatherData);\n    }\n  }, [queryWeatherData]);\n\n  // Effect for Forecast\n  const [forecast, setForecast] = useState();\n  let forecastData = useForecastWeather(query);\n  useEffect(() => {\n    if (forecastData) {\n      setForecast(forecastData);\n    }\n  }, [forecastData]);\n\n  // function to handle submit request\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if input field is empty - return\n    if (inputRef.current.value === \"\") return;\n\n    setQuery(inputRef.current.value);\n\n    // set Input field to empty string after submit\n    inputRef.current.value = \"\";\n  };\n\n  return !data ? (\n    <div className=\"loader\">\n      <img src={require(\"../../assets/loader.gif\")} alt=\"\" />\n    </div>\n  ) : (\n    <div>\n      <Searchbar inputRef={inputRef} handleSubmit={handleSubmit} />\n      <h2 className=\"title\">Current weather and forecast Of</h2>\n      <div className=\"container\">\n        <Grid container spacing={24}>\n          <Grid item xs={12} md={4}>\n            {data && data.cod === \"200\" ? <Sidebar data={data} /> : \"\"}\n          </Grid>\n          <Grid item xs={12} md={8}>\n            {data && data.cod === \"200\" ? (\n              <Chart data={data} />\n            ) : (\n              data && <h3>{data.message.toUpperCase()}</h3>\n            )}\n          </Grid>\n        </Grid>\n        <Grid container spacing={24}>\n          <Grid item xs={12} md={4}>\n            {forecast && forecast.cod === \"200\" ? (\n              <p className=\"disclaimer\">\n                The weather forecast is displayed in accordance with your local\n                time. Please pay attention to it when you will watch the weather\n                in another time zone.\n              </p>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Grid item xs={12} md={8} className=\"forecast__main\">\n            {forecast && forecast.cod === \"200\" ? (\n              <Forecast forecast={forecast} />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}