{"ast":null,"code":"import _classCallCheck from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"/home/sagewizard/Desktop/kewrt/src/Hero.js\",\n    _this = this;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Main from \"./components/Main/Main\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./index.css\";\nimport calculateChanceOfRain from './helper/util';\nimport './App.css';\nimport Slider from './components/slider';\nimport AmountOfRainChart from './components/amountOfRainChart';\nimport ChanceOfOfRainChart from './components/chanceOfRainChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Hero = function Hero(_ref) {\n  var handleLogout = _ref.handleLogout;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Hero;\n\nvar A = /*#__PURE__*/function (_Component) {\n  _inherits(A, _Component);\n\n  var _super = _createSuper(A);\n\n  function A(props) {\n    var _this2;\n\n    _classCallCheck(this, A);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      pressure: 1010,\n      temperature: 15,\n      isApiDataReady: false,\n      isDoneCalculating: false,\n      amountsOfRainPerDay: [],\n      upper: [],\n      mean: [],\n      lower: []\n    };\n    _this2.updateChanceOfRainValues = _this2.updateChanceOfRainValues.bind(_assertThisInitialized(_this2));\n    _this2.onSliderPressureChange = _this2.onSliderPressureChange.bind(_assertThisInitialized(_this2));\n    _this2.onSliderTemperatureChange = _this2.onSliderTemperatureChange.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(A, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch('http://private-4945e-weather34.apiary-proxy.com/weather34/rain').then(function (response) {\n        response.json().then(function (json) {\n          _this3.setState({\n            amountsOfRainPerDay: Array.from(json[0].days.map(function (val) {\n              return val.amount;\n            })),\n            isApiDataReady: true\n          });\n\n          _this3.updateChanceOfRainValues();\n        });\n      });\n    }\n  }, {\n    key: \"onSliderPressureChange\",\n    value: function onSliderPressureChange(val) {\n      this.setState({\n        pressure: val\n      });\n      this.updateChanceOfRainValues();\n    }\n  }, {\n    key: \"onSliderTemperatureChange\",\n    value: function onSliderTemperatureChange(val) {\n      this.setState({\n        temperature: val\n      });\n      this.updateChanceOfRainValues();\n    }\n  }, {\n    key: \"updateChanceOfRainValues\",\n    value: function updateChanceOfRainValues() {\n      var _this4 = this;\n\n      var days = this.state.amountsOfRainPerDay;\n      var p1 = new Promise(function (resolve) {\n        return resolve(_this4.setState({\n          lower: Array.from(days.map(function (day) {\n            return calculateChanceOfRain(_this4.state.pressure, _this4.state.temperature, day)[0];\n          })),\n          mean: Array.from(days.map(function (day) {\n            return calculateChanceOfRain(_this4.state.pressure, _this4.state.temperature, day)[1];\n          })),\n          upper: Array.from(days.map(function (day) {\n            return calculateChanceOfRain(_this4.state.pressure, _this4.state.temperature, day)[2];\n          }))\n        }));\n      });\n      p1.then(this.setState({\n        isDoneCalculating: true\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Weather Charts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"by Roland Castillo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-sliders\",\n            children: [/*#__PURE__*/_jsxDEV(Slider, {\n              name: \"pressure\",\n              min: \"970\",\n              max: \"1030\",\n              step: \"10\",\n              default: \"1010\",\n              label: \"Pressure [hPa]\",\n              options: [970, 980, 990, 1000, 1010, 1020, 1030],\n              onChange: this.onSliderPressureChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              name: \"temperature\",\n              min: \"10\",\n              max: \"35\",\n              step: \"5\",\n              default: \"15\",\n              label: \"Temperature [C]\",\n              options: [10, 15, 20, 25, 30, 35],\n              onChange: this.onSliderTemperatureChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-charts\",\n            children: [this.state.isDoneCalculating && /*#__PURE__*/_jsxDEV(ChanceOfOfRainChart, {\n              lower: this.state.lower,\n              mean: this.state.mean,\n              upper: this.state.upper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 58\n            }, this), this.state.isApiDataReady && /*#__PURE__*/_jsxDEV(AmountOfRainChart, {\n              data: this.state.amountsOfRainPerDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return A;\n}(Component);\n\nexport default Hero;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"sources":["/home/sagewizard/Desktop/kewrt/src/Hero.js"],"names":["React","ReactDOM","Navbar","Main","Footer","calculateChanceOfRain","Slider","AmountOfRainChart","ChanceOfOfRainChart","Hero","handleLogout","A","props","state","pressure","temperature","isApiDataReady","isDoneCalculating","amountsOfRainPerDay","upper","mean","lower","updateChanceOfRainValues","bind","onSliderPressureChange","onSliderTemperatureChange","fetch","then","response","json","setState","Array","from","days","map","val","amount","p1","Promise","resolve","day","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Main from \"./components/Main/Main\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport \"./index.css\";\r\nimport calculateChanceOfRain from './helper/util';\r\nimport './App.css';\r\nimport Slider from './components/slider';\r\nimport AmountOfRainChart from './components/amountOfRainChart';\r\nimport ChanceOfOfRainChart from './components/chanceOfRainChart'\r\n\r\n\r\n\r\nconst Hero = ({ handleLogout }) => {\r\n  return (\r\n    <section className=\"hero\">\r\n      <nav>\r\n        <h2>Welcome</h2>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </nav>\r\n          <div className=\"App\">\r\n      <Navbar />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nclass A extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pressure: 1010,\r\n            temperature: 15,\r\n            isApiDataReady: false,\r\n            isDoneCalculating: false,\r\n            amountsOfRainPerDay: [],\r\n            upper: [],\r\n            mean: [],\r\n            lower: []\r\n        };\r\n\r\n        this.updateChanceOfRainValues = this.updateChanceOfRainValues.bind(this);\r\n        this.onSliderPressureChange = this.onSliderPressureChange.bind(this);\r\n        this.onSliderTemperatureChange = this.onSliderTemperatureChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://private-4945e-weather34.apiary-proxy.com/weather34/rain')\r\n            .then(response => {\r\n                response.json().then(json => {\r\n                    this.setState({\r\n                        amountsOfRainPerDay: Array.from(json[0].days.map(val => val.amount)),\r\n                        isApiDataReady: true\r\n                    });\r\n\r\n                    this.updateChanceOfRainValues();\r\n\r\n                })\r\n            })\r\n    }\r\n\r\n    onSliderPressureChange(val) {\r\n        this.setState({pressure: val});\r\n        this.updateChanceOfRainValues();\r\n    }\r\n    onSliderTemperatureChange(val) {\r\n        this.setState({temperature: val});\r\n        this.updateChanceOfRainValues();\r\n    }\r\n\r\n    updateChanceOfRainValues() {\r\n        const days = this.state.amountsOfRainPerDay;\r\n        const p1 = new Promise(resolve => resolve(this.setState({\r\n                lower: Array.from(days.map(day => calculateChanceOfRain(this.state.pressure, this.state.temperature, day)[0])),\r\n                mean: Array.from(days.map(day => calculateChanceOfRain(this.state.pressure, this.state.temperature, day)[1])),\r\n                upper: Array.from(days.map(day => calculateChanceOfRain(this.state.pressure, this.state.temperature, day)[2])),\r\n            })));\r\n        p1.then(this.setState({isDoneCalculating: true}));\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"App-header\">\r\n                    <h2>Weather Charts</h2>\r\n                    <small>by Roland Castillo</small>\r\n                </div>\r\n                <div className=\"App-content\">\r\n                    <div className=\"App-sliders\">\r\n                        <Slider\r\n                            name=\"pressure\"\r\n                            min=\"970\"\r\n                            max=\"1030\"\r\n                            step=\"10\"\r\n                            default=\"1010\"\r\n                            label=\"Pressure [hPa]\"\r\n                            options={[970,980,990,1000,1010,1020,1030]}\r\n                            onChange={this.onSliderPressureChange}\r\n                        />\r\n                        <Slider\r\n                            name=\"temperature\"\r\n                            min=\"10\"\r\n                            max=\"35\"\r\n                            step=\"5\"\r\n                            default=\"15\"\r\n                            label=\"Temperature [C]\"\r\n                            options={[10,15,20,25,30,35]}\r\n                            onChange={this.onSliderTemperatureChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"App-charts\">\r\n                        {this.state.isDoneCalculating && <ChanceOfOfRainChart lower={this.state.lower} mean={this.state.mean} upper={this.state.upper} />}\r\n                        {this.state.isApiDataReady && <AmountOfRainChart data={this.state.amountsOfRainPerDay} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hero;\r\n"]},"metadata":{},"sourceType":"module"}