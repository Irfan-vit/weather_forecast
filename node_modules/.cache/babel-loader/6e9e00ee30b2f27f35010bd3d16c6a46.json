{"ast":null,"code":"import _slicedToArray from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sagewizard/Desktop/kewrt/src/components/Chart/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport getTime from \"../../utilities/getTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(data.list),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1]; // Temperature\n\n\n  var temps = items.map(function (item) {\n    return item.main.temp;\n  });\n  temps = temps.slice(0, 10); // Time\n\n  var date = items.map(function (item) {\n    return item.dt;\n  }).slice(0, 9);\n  var times = date.map(function (time) {\n    return getTime(time);\n  });\n  useEffect(function () {\n    setItems(data.list);\n  }, [data]); // Chart config\n\n  var chart = {\n    labels: times,\n    datasets: [{\n      label: \"Weather in \".concat(data.city.name, \", \").concat(data.city.country),\n      data: temps,\n      backgroundColor: \"transparent\",\n      borderColor: \"#4bc0c0\",\n      pointBorderColor: \"#4bc0c0\",\n      pointBackgroundColor: \"#4bc0c0\"\n    }]\n  };\n  return data && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: {\n        responsive: true,\n        scales: {\n          gridLines: {\n            display: false\n          },\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"Temperature in \\xB0C\"\n            }\n          }],\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"Time in 24H format\"\n            }\n          }]\n        },\n        maintainAspectRatio: true,\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: \"Weather and forecasts in \".concat(data.city.name, \", \").concat(data.city.country),\n          fontSize: 18,\n          position: \"top\"\n        }\n      },\n      data: chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Chart, \"TCWeFJJ4SLu7jh8mh6SF3AfCvOQ=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/sagewizard/Desktop/kewrt/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","Line","getTime","Chart","data","list","items","setItems","temps","map","item","main","temp","slice","date","dt","times","time","chart","labels","datasets","label","city","name","country","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","responsive","scales","gridLines","display","yAxes","scaleLabel","labelString","xAxes","maintainAspectRatio","legend","title","text","fontSize","position"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,SAASC,KAAT,OAAyB;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AACvB,kBAA0BL,QAAQ,CAACK,IAAI,CAACC,IAAN,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd,iBADuB,CAGvB;;;AACA,MAAIC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,CAAUC,IAAd;AAAA,GAAd,CAAZ;AACAJ,EAAAA,KAAK,GAAGA,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAR,CALuB,CAOvB;;AACA,MAAIC,IAAI,GAAGR,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACK,EAAT;AAAA,GAAd,EAA2BF,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,CAAX;AACA,MAAIG,KAAK,GAAGF,IAAI,CAACL,GAAL,CAAS,UAAAQ,IAAI;AAAA,WAAIf,OAAO,CAACe,IAAD,CAAX;AAAA,GAAb,CAAZ;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAACH,IAAI,CAACC,IAAN,CAAR;AACD,GAFQ,EAEN,CAACD,IAAD,CAFM,CAAT,CAXuB,CAevB;;AACA,MAAMc,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAEH,KADI;AAEZI,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,uBAAgBjB,IAAI,CAACkB,IAAL,CAAUC,IAA1B,eAAmCnB,IAAI,CAACkB,IAAL,CAAUE,OAA7C,CADP;AAEEpB,MAAAA,IAAI,EAAEI,KAFR;AAGEiB,MAAAA,eAAe,EAAE,aAHnB;AAIEC,MAAAA,WAAW,EAAE,SAJf;AAKEC,MAAAA,gBAAgB,EAAE,SALpB;AAMEC,MAAAA,oBAAoB,EAAE;AANxB,KADQ;AAFE,GAAd;AAcA,SACExB,IAAI,iBACF;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,OAAO,EAAE;AACPyB,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE;AACTC,YAAAA,OAAO,EAAE;AADA,WADL;AAINC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,UAAU,EAAE;AACVF,cAAAA,OAAO,EAAE,IADC;AAEVG,cAAAA,WAAW,EAAE;AAFH;AADd,WADK,CAJD;AAYNC,UAAAA,KAAK,EAAE,CACL;AACEF,YAAAA,UAAU,EAAE;AACVF,cAAAA,OAAO,EAAE,IADC;AAEVG,cAAAA,WAAW,EAAE;AAFH;AADd,WADK;AAZD,SAFD;AAuBPE,QAAAA,mBAAmB,EAAE,IAvBd;AAwBPC,QAAAA,MAAM,EAAE;AACNN,UAAAA,OAAO,EAAE;AADH,SAxBD;AA2BPO,QAAAA,KAAK,EAAE;AACLP,UAAAA,OAAO,EAAE,IADJ;AAELQ,UAAAA,IAAI,qCAA8BpC,IAAI,CAACkB,IAAL,CAAUC,IAAxC,eACFnB,IAAI,CAACkB,IAAL,CAAUE,OADR,CAFC;AAKLiB,UAAAA,QAAQ,EAAE,EALL;AAMLC,UAAAA,QAAQ,EAAE;AANL;AA3BA,OADX;AAqCE,MAAA,IAAI,EAAExB;AArCR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6CD;;GA3EQf,K;;KAAAA,K;AA6ET,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport getTime from \"../../utilities/getTime\";\n\nfunction Chart({ data }) {\n  const [items, setItems] = useState(data.list);\n\n  // Temperature\n  let temps = items.map(item => item.main.temp);\n  temps = temps.slice(0, 10);\n\n  // Time\n  let date = items.map(item => item.dt).slice(0, 9);\n  let times = date.map(time => getTime(time));\n\n  useEffect(() => {\n    setItems(data.list);\n  }, [data]);\n\n  // Chart config\n  const chart = {\n    labels: times,\n    datasets: [\n      {\n        label: `Weather in ${data.city.name}, ${data.city.country}`,\n        data: temps,\n        backgroundColor: \"transparent\",\n        borderColor: \"#4bc0c0\",\n        pointBorderColor: \"#4bc0c0\",\n        pointBackgroundColor: \"#4bc0c0\"\n      }\n    ]\n  };\n\n  return (\n    data && (\n      <div>\n        <Line\n          options={{\n            responsive: true,\n            scales: {\n              gridLines: {\n                display: false\n              },\n              yAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Temperature in \\u00b0C\"\n                  }\n                }\n              ],\n              xAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Time in 24H format\"\n                  }\n                }\n              ]\n            },\n            maintainAspectRatio: true,\n            legend: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: `Weather and forecasts in ${data.city.name}, ${\n                data.city.country\n              }`,\n              fontSize: 18,\n              position: \"top\"\n            }\n          }}\n          data={chart}\n        />\n      </div>\n    )\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}