{"ast":null,"code":"import _slicedToArray from \"/home/sagewizard/Documents/GitHub/weather_forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\n// custom hook to fetch forecast data\nimport { useState, useEffect } from \"react\";\nimport useGeolocation from \"../utilities/useGeolocation\";\nexport default function useForecastWeather(query) {\n  _s();\n\n  var location = useGeolocation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      forecast = _useState2[0],\n      setForecast = _useState2[1];\n\n  useEffect(function () {\n    if (query) {\n      fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(query, \"&appid=c7cec94be5f48433614a71099719a8e4&units=metric\")).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setForecast(result);\n      });\n    } else if (location) {\n      fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(location.latitude, \"&lon=\").concat(location.longitude, \"&appid=c7cec94be5f48433614a71099719a8e4&units=metric\")).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(\"loca\", data);\n        setForecast(data);\n      });\n    }\n  }, [location, query]);\n  return forecast;\n}\n\n_s(useForecastWeather, \"i5qWeS+6E8TDI7VeO6QVFwrtFjo=\", false, function () {\n  return [useGeolocation];\n});","map":{"version":3,"sources":["/home/sagewizard/Documents/GitHub/weather_forecast/src/utilities/useForecastData.js"],"names":["useState","useEffect","useGeolocation","useForecastWeather","query","location","forecast","setForecast","fetch","then","res","json","result","latitude","longitude","data","console","log"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAChD,MAAIC,QAAQ,GAAGH,cAAc,EAA7B;;AACA,kBAAgCF,QAAQ,EAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,KAAJ,EAAW;AACTI,MAAAA,KAAK,8DACmDJ,KADnD,0DAAL,CAGGK,IAHH,CAGQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAHX,EAIGF,IAJH,CAIQ,UAAAG,MAAM,EAAI;AACdL,QAAAA,WAAW,CAACK,MAAD,CAAX;AACD,OANH;AAOD,KARD,MAQO,IAAIP,QAAJ,EAAc;AACnBG,MAAAA,KAAK,gEAEDH,QAAQ,CAACQ,QAFR,kBAIDR,QAAQ,CAACS,SAJR,0DAAL,CAOGL,IAPH,CAOQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAPX,EAQGF,IARH,CAQQ,UAAAM,IAAI,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAR,QAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,OAXH;AAYD;AACF,GAvBQ,EAuBN,CAACV,QAAD,EAAWD,KAAX,CAvBM,CAAT;AAwBA,SAAOE,QAAP;AACD;;GA5BuBH,kB;UACPD,c","sourcesContent":["// custom hook to fetch forecast data\nimport { useState, useEffect } from \"react\";\nimport useGeolocation from \"../utilities/useGeolocation\";\n\nexport default function useForecastWeather(query) {\n  let location = useGeolocation();\n  const [forecast, setForecast] = useState();\n  useEffect(() => {\n    if (query) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${query}&appid=c7cec94be5f48433614a71099719a8e4&units=metric`\n      )\n        .then(res => res.json())\n        .then(result => {\n          setForecast(result);\n        });\n    } else if (location) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${\n          location.latitude\n        }&lon=${\n          location.longitude\n        }&appid=c7cec94be5f48433614a71099719a8e4&units=metric`\n      )\n        .then(res => res.json())\n        .then(data => {\n          console.log(\"loca\", data);\n          setForecast(data);\n        });\n    }\n  }, [location, query]);\n  return forecast;\n}\n"]},"metadata":{},"sourceType":"module"}