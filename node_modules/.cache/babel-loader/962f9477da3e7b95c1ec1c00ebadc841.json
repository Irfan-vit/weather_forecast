{"ast":null,"code":"import _classCallCheck from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sagewizard/Desktop/kewrt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sagewizard/Desktop/kewrt/src/components/amountOfRainChart.js\";\nimport React, { Component } from 'react';\nimport { Chart } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MyChart = /*#__PURE__*/function (_Component) {\n  _inherits(MyChart, _Component);\n\n  var _super = _createSuper(MyChart);\n\n  function MyChart(props) {\n    var _this;\n\n    _classCallCheck(this, MyChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: _this.props.data\n    };\n    _this.renderChart = _this.renderChart.bind(_assertThisInitialized(_this));\n    _this._chart = null;\n    return _this;\n  }\n\n  _createClass(MyChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderChart();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        data: props.data\n      });\n      this.renderChart();\n    }\n  }, {\n    key: \"renderChart\",\n    value: function renderChart() {\n      this._chart = new Chart(this.refs.chart, {\n        type: 'bar',\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7],\n          datasets: [{\n            label: 'Amount of Rainfall',\n            data: this.state.data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255,99,132,1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'days'\n              }\n            }],\n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'l/m²'\n              },\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"chart\",\n        width: \"400\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return MyChart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/sagewizard/Desktop/kewrt/src/components/amountOfRainChart.js"],"names":["React","Component","Chart","MyChart","props","state","data","renderChart","bind","_chart","setState","refs","chart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,QAAoB,UAApB;;;IAEMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE;AADR,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAEA,UAAKC,MAAL,GAAc,IAAd;AATe;AAUlB;;;;WAED,6BAAoB;AAChB,WAAKF,WAAL;AACH;;;WAED,mCAA0BH,KAA1B,EAAiC;AAC7B,WAAKM,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAEF,KAAK,CAACE;AADF,OAAd;AAGA,WAAKC,WAAL;AACH;;;WAED,uBAAc;AACV,WAAKE,MAAL,GAAc,IAAIP,KAAJ,CAAU,KAAKS,IAAL,CAAUC,KAApB,EAA2B;AACrCC,QAAAA,IAAI,EAAE,KAD+B;AAErCP,QAAAA,IAAI,EAAE;AACFQ,UAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CADN;AAEFC,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAE,oBADA;AAEPV,YAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFV;AAGPW,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,oBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SAF+B;AA0BrCC,QAAAA,OAAO,EAAE;AACLC,UAAAA,UAAU,EAAE,IADP;AAELC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CAAC;AACJC,cAAAA,UAAU,EAAE;AACRC,gBAAAA,OAAO,EAAE,IADD;AAERC,gBAAAA,WAAW,EAAE;AAFL;AADR,aAAD,CADH;AAOJC,YAAAA,KAAK,EAAE,CAAC;AACJH,cAAAA,UAAU,EAAE;AACRC,gBAAAA,OAAO,EAAE,IADD;AAERC,gBAAAA,WAAW,EAAE;AAFL,eADR;AAKJE,cAAAA,KAAK,EAAE;AACHC,gBAAAA,WAAW,EAAC;AADT;AALH,aAAD;AAPH;AAFH;AA1B4B,OAA3B,CAAd;AA+CH;;;WAED,kBAAS;AACL,0BACI;AAAQ,QAAA,GAAG,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,KAA1B;AAAgC,QAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;;;EA/EiB5B,S;;AAkFtB,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Chart} from 'chart.js';\n\nclass MyChart extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: this.props.data\n        };\n\n        this.renderChart = this.renderChart.bind(this);\n\n        this._chart = null;\n    }\n\n    componentDidMount() {\n        this.renderChart();\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            data: props.data\n        });\n        this.renderChart();\n    }\n\n    renderChart() {\n        this._chart = new Chart(this.refs.chart, {\n            type: 'bar',\n            data: {\n                labels: [1,2,3,4,5,6,7],\n                datasets: [{\n                    label: 'Amount of Rainfall',\n                    data: this.state.data,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255,99,132,1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'days'\n                        }\n                    }],\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'l/m²'\n                        },\n                        ticks: {\n                            beginAtZero:true\n                        }\n                    }]\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <canvas ref=\"chart\" width=\"400\" height=\"400\"/>\n        );\n    }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}